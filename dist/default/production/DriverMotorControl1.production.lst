

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 02 09:06:13 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 1.41
    48                           ; Generated 25/01/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F46K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  00079E                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _LookUP_TABLE_SEN
    87  00079E  18                 	db	24
    88  00079F  45                 	db	69
    89  0007A0  71                 	db	113
    90  0007A1  99                 	db	153
    91  0007A2  BC                 	db	188
    92  0007A3  D8                 	db	216
    93  0007A4  ED                 	db	237
    94  0007A5  FA                 	db	250
    95                           
    96                           ;initializer for _LookUP_TABLE_COS
    97  0007A6  FA                 	db	250
    98  0007A7  ED                 	db	237
    99  0007A8  D8                 	db	216
   100  0007A9  BC                 	db	188
   101  0007AA  99                 	db	153
   102  0007AB  71                 	db	113
   103  0007AC  45                 	db	69
   104  0007AD  18                 	db	24
   105                           
   106                           	psect	nvCOMRAM
   107  000028                     __pnvCOMRAM:
   108                           	opt stack 0
   109  000028                     _StepCount:
   110                           	opt stack 0
   111  000028                     	ds	2
   112  00002A                     _Timer2Tick_count:
   113                           	opt stack 0
   114  00002A                     	ds	2
   115  00002C                     _TMR2_InterruptHandler:
   116                           	opt stack 0
   117  00002C                     	ds	2
   118  00002E                     _TMR6_InterruptHandler:
   119                           	opt stack 0
   120  00002E                     	ds	2
   121  0000                     _CCPTMRS0bits	set	3913
   122  0000                     _ANSELA	set	3896
   123  0000                     _ANSELE	set	3900
   124  0000                     _ANSELD	set	3899
   125  0000                     _ANSELB	set	3897
   126  0000                     _ANSELC	set	3898
   127  0000                     _CCPR5H	set	3926
   128  0000                     _CCPR5L	set	3925
   129  0000                     _CCP5CON	set	3924
   130  0000                     _T6CONbits	set	3914
   131  0000                     _TMR6	set	3916
   132  0000                     _PR6	set	3915
   133  0000                     _T6CON	set	3914
   134  0000                     _LATDbits	set	3980
   135  0000                     _LATCbits	set	3979
   136  0000                     _LATBbits	set	3978
   137  0000                     _TXREG1	set	4013
   138  0000                     _RCREG1	set	4014
   139  0000                     _RCSTA1bits	set	4011
   140  0000                     _SPBRGH1	set	4016
   141  0000                     _SPBRG1	set	4015
   142  0000                     _TXSTA1	set	4012
   143  0000                     _RCSTA1	set	4011
   144  0000                     _BAUDCON1	set	4024
   145  0000                     _OSCTUNE	set	3995
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCCON	set	4051
   148  0000                     _INTCONbits	set	4082
   149  0000                     _RCONbits	set	4048
   150  0000                     _ADCON0bits	set	4034
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADRESL	set	4035
   153  0000                     _ADCON2	set	4032
   154  0000                     _ADCON1	set	4033
   155  0000                     _ADCON0	set	4034
   156  0000                     _CCPR1H	set	4031
   157  0000                     _CCPR1L	set	4030
   158  0000                     _PSTR1CON	set	4025
   159  0000                     _PWM1CON	set	4023
   160  0000                     _ECCP1AS	set	4022
   161  0000                     _CCP1CON	set	4029
   162  0000                     _CCPR2H	set	3944
   163  0000                     _CCPR2L	set	3943
   164  0000                     _PSTR2CON	set	3939
   165  0000                     _PWM2CON	set	3941
   166  0000                     _ECCP2AS	set	3940
   167  0000                     _CCP2CON	set	3942
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _WPUB	set	3937
   170  0000                     _TRISD	set	3989
   171  0000                     _TRISC	set	3988
   172  0000                     _TRISB	set	3987
   173  0000                     _TRISA	set	3986
   174  0000                     _TRISE	set	3990
   175  0000                     _LATC	set	3979
   176  0000                     _LATB	set	3978
   177  0000                     _LATA	set	3977
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _T2CONbits	set	4026
   181  0000                     _PIE1bits	set	3997
   182  0000                     _PIR1bits	set	3998
   183  0000                     _TMR2	set	4028
   184  0000                     _PR2	set	4027
   185  0000                     _T2CON	set	4026
   186  0000                     _PIE5bits	set	3965
   187  0000                     _PIR5bits	set	3966
   188                           
   189                           ; #config settings
   190  0000                     
   191                           	psect	cinit
   192  0005A0                     __pcinit:
   193                           	opt stack 0
   194  0005A0                     start_initialization:
   195                           	opt stack 0
   196  0005A0                     __initialization:
   197                           	opt stack 0
   198                           
   199                           ; Initialize objects allocated to COMRAM (16 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201  0005A0  0E9E               	movlw	low __pidataCOMRAM
   202  0005A2  6EF6               	movwf	tblptrl,c
   203  0005A4  0E07               	movlw	high __pidataCOMRAM
   204  0005A6  6EF7               	movwf	tblptrh,c
   205  0005A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206  0005AA  6EF8               	movwf	tblptru,c
   207  0005AC  EE00  F018         	lfsr	0,__pdataCOMRAM
   208  0005B0  EE10 F010          	lfsr	1,16
   209  0005B4                     copy_data0:
   210  0005B4  0009               	tblrd		*+
   211  0005B6  CFF5 FFEE          	movff	tablat,postinc0
   212  0005BA  50E5               	movf	postdec1,w,c
   213  0005BC  50E1               	movf	fsr1l,w,c
   214  0005BE  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to COMRAM (7 bytes)
   217  0005C0  EE00  F030         	lfsr	0,__pbssCOMRAM
   218  0005C4  0E07               	movlw	7
   219  0005C6                     clear_0:
   220  0005C6  6AEE               	clrf	postinc0,c
   221  0005C8  06E8               	decf	wreg,f,c
   222  0005CA  E1FD               	bnz	clear_0
   223  0005CC                     end_of_initialization:
   224                           	opt stack 0
   225  0005CC                     __end_of__initialization:
   226                           	opt stack 0
   227  0005CC  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   228  0005CE  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   229  0005D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   230  0005D2  6EF8               	movwf	tblptru,c
   231  0005D4  0100               	movlb	0
   232  0005D6  EF7D  F002         	goto	_main	;jump to C main() function
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           postdec1	equ	0xFE5
   240                           fsr1l	equ	0xFE1
   241                           
   242                           	psect	bssCOMRAM
   243  000030                     __pbssCOMRAM:
   244                           	opt stack 0
   245  000030                     TMR2_ISR@CountCallBack:
   246                           	opt stack 0
   247  000030                     	ds	2
   248  000032                     _UEstadoActual:
   249                           	opt stack 0
   250  000032                     	ds	1
   251  000033                     _EstadoAnterior:
   252                           	opt stack 0
   253  000033                     	ds	1
   254  000034                     _EstadoActual:
   255                           	opt stack 0
   256  000034                     	ds	1
   257  000035                     _ida:
   258                           	opt stack 0
   259  000035                     	ds	1
   260  000036                     _Timer2Ticked:
   261                           	opt stack 0
   262  000036                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	dataCOMRAM
   273  000018                     __pdataCOMRAM:
   274                           	opt stack 0
   275  000018                     _LookUP_TABLE_SEN:
   276                           	opt stack 0
   277  000018                     	ds	8
   278  000020                     _LookUP_TABLE_COS:
   279                           	opt stack 0
   280  000020                     	ds	8
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	opt stack 0
   293  000001                     ??_INTERRUPT_InterruptManager:
   294  000001                     
   295                           ; 2 bytes @ 0x0
   296  000001                     	ds	14
   297  00000F                     EUSART1_Write@txData:
   298                           	opt stack 0
   299  00000F                     TMR6_SetInterruptHandler@InterruptHandler:
   300                           	opt stack 0
   301  00000F                     TMR2_SetInterruptHandler@InterruptHandler:
   302                           	opt stack 0
   303  00000F                     EPWM2_LoadDutyValue@dutyValue:
   304                           	opt stack 0
   305  00000F                     EPWM1_LoadDutyValue@dutyValue:
   306                           	opt stack 0
   307  00000F                     PWM_Register_act@StateNumber:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0xE
   311  00000F                     	ds	2
   312  000011                     ??_PWM_Register_act:
   313  000011                     ??_EPWM2_LoadDutyValue:
   314  000011                     ??_EPWM1_LoadDutyValue:
   315  000011                     
   316                           ; 1 bytes @ 0x10
   317  000011                     	ds	2
   318  000013                     ?_MicroStepMEF_act:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x12
   322  000013                     	ds	2
   323  000015                     MicroStepMEF_act@MicrostepComplete:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x14
   327  000015                     	ds	1
   328  000016                     StateMEF_act@MicrostepComplete:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x15
   332  000016                     	ds	2
   333  000018                     tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           ; 1 bytes @ 0x17
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 33 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called:    7
   368 ;; This function calls:
   369 ;;		_MicroStepMEF_ini
   370 ;;		_SYSTEM_Initialize
   371 ;;		_StateMEF_act
   372 ;;		_StateMEF_ini
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  0004FA                     __ptext0:
   380                           	opt stack 0
   381  0004FA                     _main:
   382                           	opt stack 24
   383                           
   384                           ;main.c: 36: SYSTEM_Initialize();
   385                           
   386                           ;incstack = 0
   387  0004FA  EC1D  F003         	call	_SYSTEM_Initialize	;wreg free
   388                           
   389                           ;main.c: 37: StateMEF_ini();
   390  0004FE  ECEE  F003         	call	_StateMEF_ini	;wreg free
   391                           
   392                           ;main.c: 38: MicroStepMEF_ini();
   393  000502  ECF4  F003         	call	_MicroStepMEF_ini	;wreg free
   394                           
   395                           ;main.c: 39: do { LATBbits.LATB6 = 1; } while(0);
   396  000506  8C8A               	bsf	3978,6,c	;volatile
   397                           
   398                           ;main.c: 40: Timer2Tick_count=0;
   399  000508  0E00               	movlw	0
   400  00050A  6E2B               	movwf	_Timer2Tick_count+1,c
   401  00050C  0E00               	movlw	0
   402  00050E  6E2A               	movwf	_Timer2Tick_count,c
   403                           
   404                           ;main.c: 41: StepCount=0;
   405  000510  0E00               	movlw	0
   406  000512  6E29               	movwf	_StepCount+1,c
   407  000514  0E00               	movlw	0
   408  000516  6E28               	movwf	_StepCount,c
   409                           
   410                           ;main.c: 43: (INTCONbits.GIE = 1);
   411  000518  8EF2               	bsf	intcon,7,c	;volatile
   412                           
   413                           ;main.c: 46: (INTCONbits.PEIE = 1);
   414  00051A  8CF2               	bsf	intcon,6,c	;volatile
   415  00051C                     l1951:
   416                           
   417                           ;main.c: 48: {
   418                           ;main.c: 49: if (StepCount<500)
   419  00051C  BE29               	btfsc	_StepCount+1,7,c
   420  00051E  D006               	goto	l1953
   421  000520  0EF4               	movlw	244
   422  000522  5C28               	subwf	_StepCount,w,c
   423  000524  0E01               	movlw	1
   424  000526  5829               	subwfb	_StepCount+1,w,c
   425  000528  B0D8               	btfsc	status,0,c
   426  00052A  D7F8               	goto	l1951
   427  00052C                     l1953:
   428                           
   429                           ;main.c: 50: {
   430                           ;main.c: 51: if (Timer2Ticked){
   431  00052C  5036               	movf	_Timer2Ticked,w,c	;volatile
   432  00052E  B4D8               	btfsc	status,2,c
   433  000530  D7F5               	goto	l1951
   434                           
   435                           ;main.c: 52: Timer2Tick_count++;
   436  000532  4A2A               	infsnz	_Timer2Tick_count,f,c
   437  000534  2A2B               	incf	_Timer2Tick_count+1,f,c
   438                           
   439                           ;main.c: 53: if (Timer2Tick_count==1){
   440  000536  042A               	decf	_Timer2Tick_count,w,c
   441  000538  102B               	iorwf	_Timer2Tick_count+1,w,c
   442  00053A  A4D8               	btfss	status,2,c
   443  00053C  D008               	goto	l1965
   444                           
   445                           ;main.c: 54: StateMEF_act();
   446  00053E  EC57  F000         	call	_StateMEF_act	;wreg free
   447                           
   448                           ;main.c: 55: StepCount++;
   449  000542  4A28               	infsnz	_StepCount,f,c
   450  000544  2A29               	incf	_StepCount+1,f,c
   451                           
   452                           ;main.c: 56: Timer2Tick_count=0;
   453  000546  0E00               	movlw	0
   454  000548  6E2B               	movwf	_Timer2Tick_count+1,c
   455  00054A  0E00               	movlw	0
   456  00054C  6E2A               	movwf	_Timer2Tick_count,c
   457  00054E                     l1965:
   458                           
   459                           ;main.c: 57: }
   460                           ;main.c: 58: Timer2Ticked = 0;
   461  00054E  0E00               	movlw	0
   462  000550  6E36               	movwf	_Timer2Ticked,c	;volatile
   463  000552  D7E4               	goto	l1951
   464  000554                     __end_of_main:
   465                           	opt stack 0
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           intcon	equ	0xFF2
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           status	equ	0xFD8
   476                           
   477 ;; *************** function _StateMEF_ini *****************
   478 ;; Defined at:
   479 ;;		line 36 in file "MotorDriver.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text1
   508  0007DC                     __ptext1:
   509                           	opt stack 0
   510  0007DC                     _StateMEF_ini:
   511                           	opt stack 26
   512                           
   513                           ;MotorDriver.c: 37: EstadoActual = STATE0;
   514                           
   515                           ;incstack = 0
   516  0007DC  0E00               	movlw	0
   517  0007DE  6E34               	movwf	_EstadoActual,c
   518  0007E0  0012               	return		;funcret
   519  0007E2                     __end_of_StateMEF_ini:
   520                           	opt stack 0
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           intcon	equ	0xFF2
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           status	equ	0xFD8
   531                           
   532 ;; *************** function _StateMEF_act *****************
   533 ;; Defined at:
   534 ;;		line 44 in file "MotorDriver.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  MicrostepCom    2   21[COMRAM] int 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    6
   555 ;; This function calls:
   556 ;;		_MicroStepMEF_act
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  0000AE                     __ptext2:
   564                           	opt stack 0
   565  0000AE                     _StateMEF_act:
   566                           	opt stack 24
   567                           
   568                           ;MotorDriver.c: 45: int MicrostepComplete;
   569                           ;MotorDriver.c: 46: switch(EstadoActual) {
   570                           
   571                           ;incstack = 0
   572  0000AE  D0D4               	goto	l1933
   573  0000B0                     l1795:
   574                           
   575                           ;MotorDriver.c: 52: EstadoActual = STATE1;
   576  0000B0  0E01               	movlw	1
   577  0000B2  6E34               	movwf	_EstadoActual,c
   578                           
   579                           ;MotorDriver.c: 53: EstadoAnterior = STATE0;
   580  0000B4  0E00               	movlw	0
   581  0000B6  6E33               	movwf	_EstadoAnterior,c
   582                           
   583                           ;MotorDriver.c: 54: break;
   584  0000B8  0012               	return	
   585  0000BA                     l1797:
   586                           
   587                           ;MotorDriver.c: 56: if (EstadoAnterior == STATE0){
   588  0000BA  5033               	movf	_EstadoAnterior,w,c
   589  0000BC  A4D8               	btfss	status,2,c
   590  0000BE  D00D               	goto	l1809
   591                           
   592                           ;MotorDriver.c: 57: PSTR1CON = 0x00;
   593  0000C0  0E00               	movlw	0
   594  0000C2  6EB9               	movwf	4025,c	;volatile
   595                           
   596                           ;MotorDriver.c: 58: PSTR2CON = 0x00;
   597  0000C4  0E00               	movlw	0
   598  0000C6  6E63               	movwf	3939,c	;volatile
   599                           
   600                           ;MotorDriver.c: 59: do { LATCbits.LATC2 = 0; } while(0);do { LATDbits.LATD5 = 0; } while
      +                          (0);do { LATCbits.LATC1 = 0; } while(0);do { LATCbits.LATC0 = 1; } while(0);
   601  0000C8  948B               	bcf	3979,2,c	;volatile
   602  0000CA  9A8C               	bcf	3980,5,c	;volatile
   603  0000CC  928B               	bcf	3979,1,c	;volatile
   604  0000CE  808B               	bsf	3979,0,c	;volatile
   605                           
   606                           ;MotorDriver.c: 60: EstadoAnterior = STATE1;
   607  0000D0  0E01               	movlw	1
   608  0000D2  6E33               	movwf	_EstadoAnterior,c
   609                           
   610                           ;MotorDriver.c: 61: ida=1;
   611  0000D4  0E01               	movlw	1
   612  0000D6  6E35               	movwf	_ida,c
   613                           
   614                           ;MotorDriver.c: 62: }
   615  0000D8  0012               	return	
   616  0000DA                     l1809:
   617                           
   618                           ;MotorDriver.c: 63: else{
   619                           ;MotorDriver.c: 64: MicrostepComplete = MicroStepMEF_act();
   620  0000DA  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   621  0000DE  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   622  0000E2  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   623                           
   624                           ;MotorDriver.c: 65: do { LATCbits.LATC2 = 0; } while(0);do { LATDbits.LATD5 = 0; } while
      +                          (0);do { LATCbits.LATC1 = 0; } while(0);do { LATCbits.LATC0 = 1; } while(0);
   625  0000E6  948B               	bcf	3979,2,c	;volatile
   626  0000E8  9A8C               	bcf	3980,5,c	;volatile
   627  0000EA  928B               	bcf	3979,1,c	;volatile
   628  0000EC  808B               	bsf	3979,0,c	;volatile
   629                           
   630                           ;MotorDriver.c: 66: if (MicrostepComplete)
   631  0000EE  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   632  0000F0  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   633  0000F2  B4D8               	btfsc	status,2,c
   634  0000F4  0012               	return	
   635                           
   636                           ;MotorDriver.c: 67: {
   637                           ;MotorDriver.c: 68: EstadoActual = STATE2;
   638  0000F6  0E02               	movlw	2
   639  0000F8  6E34               	movwf	_EstadoActual,c
   640                           
   641                           ;MotorDriver.c: 69: }
   642                           ;MotorDriver.c: 70: }
   643                           ;MotorDriver.c: 71: break;
   644  0000FA  0012               	return	
   645  0000FC                     l1823:
   646                           
   647                           ;MotorDriver.c: 73: if (EstadoAnterior == STATE1){
   648  0000FC  0433               	decf	_EstadoAnterior,w,c
   649  0000FE  A4D8               	btfss	status,2,c
   650  000100  D005               	goto	l1827
   651                           
   652                           ;MotorDriver.c: 77: EstadoAnterior = STATE2;
   653  000102  0E02               	movlw	2
   654  000104  6E33               	movwf	_EstadoAnterior,c
   655                           
   656                           ;MotorDriver.c: 78: ida=1;
   657  000106  0E01               	movlw	1
   658  000108  6E35               	movwf	_ida,c
   659                           
   660                           ;MotorDriver.c: 79: }
   661  00010A  0012               	return	
   662  00010C                     l1827:
   663                           
   664                           ;MotorDriver.c: 80: else{
   665                           ;MotorDriver.c: 81: MicrostepComplete = MicroStepMEF_act();
   666  00010C  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   667  000110  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   668  000114  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   669                           
   670                           ;MotorDriver.c: 82: do { LATCbits.LATC2 = 0; } while(0);do { LATCbits.LATC1 = 0; } while
      +                          (0);do { LATCbits.LATC0 = 0; } while(0);
   671  000118  948B               	bcf	3979,2,c	;volatile
   672  00011A  928B               	bcf	3979,1,c	;volatile
   673  00011C  908B               	bcf	3979,0,c	;volatile
   674                           
   675                           ;MotorDriver.c: 83: if (MicrostepComplete)
   676  00011E  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   677  000120  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   678  000122  B4D8               	btfsc	status,2,c
   679  000124  0012               	return	
   680                           
   681                           ;MotorDriver.c: 84: {
   682                           ;MotorDriver.c: 85: EstadoActual = STATE3;
   683  000126  0E03               	movlw	3
   684  000128  6E34               	movwf	_EstadoActual,c
   685                           
   686                           ;MotorDriver.c: 86: }
   687                           ;MotorDriver.c: 87: }
   688                           ;MotorDriver.c: 88: break;
   689  00012A  0012               	return	
   690  00012C                     l1839:
   691                           
   692                           ;MotorDriver.c: 90: if (EstadoAnterior == STATE2){
   693  00012C  0E02               	movlw	2
   694  00012E  1833               	xorwf	_EstadoAnterior,w,c
   695  000130  A4D8               	btfss	status,2,c
   696  000132  D005               	goto	l1843
   697                           
   698                           ;MotorDriver.c: 94: EstadoAnterior = STATE3;
   699  000134  0E03               	movlw	3
   700  000136  6E33               	movwf	_EstadoAnterior,c
   701                           
   702                           ;MotorDriver.c: 95: ida=1;
   703  000138  0E01               	movlw	1
   704  00013A  6E35               	movwf	_ida,c
   705                           
   706                           ;MotorDriver.c: 96: }
   707  00013C  0012               	return	
   708  00013E                     l1843:
   709                           
   710                           ;MotorDriver.c: 97: else{
   711                           ;MotorDriver.c: 98: MicrostepComplete = MicroStepMEF_act();
   712  00013E  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   713  000142  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   714  000146  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   715                           
   716                           ;MotorDriver.c: 99: do { LATCbits.LATC2 = 0; } while(0);do { LATCbits.LATC1 = 0; } while
      +                          (0);do { LATCbits.LATC0 = 0; } while(0);
   717  00014A  948B               	bcf	3979,2,c	;volatile
   718  00014C  928B               	bcf	3979,1,c	;volatile
   719  00014E  908B               	bcf	3979,0,c	;volatile
   720                           
   721                           ;MotorDriver.c: 100: if (MicrostepComplete)
   722  000150  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   723  000152  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   724  000154  B4D8               	btfsc	status,2,c
   725  000156  0012               	return	
   726                           
   727                           ;MotorDriver.c: 101: {
   728                           ;MotorDriver.c: 102: EstadoActual = STATE4;
   729  000158  0E04               	movlw	4
   730  00015A  6E34               	movwf	_EstadoActual,c
   731                           
   732                           ;MotorDriver.c: 103: }
   733                           ;MotorDriver.c: 104: }
   734                           ;MotorDriver.c: 105: break;
   735  00015C  0012               	return	
   736  00015E                     l1855:
   737                           
   738                           ;MotorDriver.c: 107: if (EstadoAnterior == STATE3){
   739  00015E  0E03               	movlw	3
   740  000160  1833               	xorwf	_EstadoAnterior,w,c
   741  000162  A4D8               	btfss	status,2,c
   742  000164  D005               	goto	l1859
   743                           
   744                           ;MotorDriver.c: 111: EstadoAnterior = STATE4;
   745  000166  0E04               	movlw	4
   746  000168  6E33               	movwf	_EstadoAnterior,c
   747                           
   748                           ;MotorDriver.c: 112: ida=1;
   749  00016A  0E01               	movlw	1
   750  00016C  6E35               	movwf	_ida,c
   751                           
   752                           ;MotorDriver.c: 113: }
   753  00016E  0012               	return	
   754  000170                     l1859:
   755                           
   756                           ;MotorDriver.c: 114: else{
   757                           ;MotorDriver.c: 115: MicrostepComplete = MicroStepMEF_act();
   758  000170  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   759  000174  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   760  000178  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   761                           
   762                           ;MotorDriver.c: 116: do { LATCbits.LATC2 = 0; } while(0);do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   763  00017C  948B               	bcf	3979,2,c	;volatile
   764  00017E  908B               	bcf	3979,0,c	;volatile
   765                           
   766                           ;MotorDriver.c: 117: if (MicrostepComplete)
   767  000180  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   768  000182  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   769  000184  B4D8               	btfsc	status,2,c
   770  000186  0012               	return	
   771                           
   772                           ;MotorDriver.c: 118: {
   773                           ;MotorDriver.c: 119: EstadoActual = STATE5;
   774  000188  0E05               	movlw	5
   775  00018A  6E34               	movwf	_EstadoActual,c
   776                           
   777                           ;MotorDriver.c: 120: }
   778                           ;MotorDriver.c: 121: }
   779                           ;MotorDriver.c: 122: break;
   780  00018C  0012               	return	
   781  00018E                     l1869:
   782                           
   783                           ;MotorDriver.c: 124: if (EstadoAnterior == STATE4){
   784  00018E  0E04               	movlw	4
   785  000190  1833               	xorwf	_EstadoAnterior,w,c
   786  000192  A4D8               	btfss	status,2,c
   787  000194  D005               	goto	l1873
   788                           
   789                           ;MotorDriver.c: 128: EstadoAnterior = STATE5;
   790  000196  0E05               	movlw	5
   791  000198  6E33               	movwf	_EstadoAnterior,c
   792                           
   793                           ;MotorDriver.c: 129: ida=1;
   794  00019A  0E01               	movlw	1
   795  00019C  6E35               	movwf	_ida,c
   796                           
   797                           ;MotorDriver.c: 130: }
   798  00019E  0012               	return	
   799  0001A0                     l1873:
   800                           
   801                           ;MotorDriver.c: 131: else{
   802                           ;MotorDriver.c: 132: MicrostepComplete = MicroStepMEF_act();
   803  0001A0  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   804  0001A4  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   805  0001A8  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   806                           
   807                           ;MotorDriver.c: 133: do { LATCbits.LATC2 = 0; } while(0);do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC0 = 0; } while(0);
   808  0001AC  948B               	bcf	3979,2,c	;volatile
   809  0001AE  9A8C               	bcf	3980,5,c	;volatile
   810  0001B0  908B               	bcf	3979,0,c	;volatile
   811                           
   812                           ;MotorDriver.c: 134: if (MicrostepComplete)
   813  0001B2  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   814  0001B4  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   815  0001B6  B4D8               	btfsc	status,2,c
   816  0001B8  0012               	return	
   817                           
   818                           ;MotorDriver.c: 135: {
   819                           ;MotorDriver.c: 136: EstadoActual = STATE6;
   820  0001BA  0E06               	movlw	6
   821  0001BC  6E34               	movwf	_EstadoActual,c
   822                           
   823                           ;MotorDriver.c: 137: }
   824                           ;MotorDriver.c: 138: }
   825                           ;MotorDriver.c: 139: break;
   826  0001BE  0012               	return	
   827  0001C0                     l1885:
   828                           
   829                           ;MotorDriver.c: 141: if (EstadoAnterior == STATE5){
   830  0001C0  0E05               	movlw	5
   831  0001C2  1833               	xorwf	_EstadoAnterior,w,c
   832  0001C4  A4D8               	btfss	status,2,c
   833  0001C6  D005               	goto	l1889
   834                           
   835                           ;MotorDriver.c: 145: EstadoAnterior = STATE6;
   836  0001C8  0E06               	movlw	6
   837  0001CA  6E33               	movwf	_EstadoAnterior,c
   838                           
   839                           ;MotorDriver.c: 146: ida=1;
   840  0001CC  0E01               	movlw	1
   841  0001CE  6E35               	movwf	_ida,c
   842                           
   843                           ;MotorDriver.c: 147: }
   844  0001D0  0012               	return	
   845  0001D2                     l1889:
   846                           
   847                           ;MotorDriver.c: 148: else{
   848                           ;MotorDriver.c: 149: MicrostepComplete = MicroStepMEF_act();
   849  0001D2  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   850  0001D6  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   851  0001DA  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   852                           
   853                           ;MotorDriver.c: 150: do { LATDbits.LATD5 = 0; } while(0);do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
   854  0001DE  9A8C               	bcf	3980,5,c	;volatile
   855  0001E0  908B               	bcf	3979,0,c	;volatile
   856                           
   857                           ;MotorDriver.c: 151: if (MicrostepComplete)
   858  0001E2  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   859  0001E4  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   860  0001E6  B4D8               	btfsc	status,2,c
   861  0001E8  0012               	return	
   862                           
   863                           ;MotorDriver.c: 152: {
   864                           ;MotorDriver.c: 153: EstadoActual = STATE7;
   865  0001EA  0E07               	movlw	7
   866  0001EC  6E34               	movwf	_EstadoActual,c
   867                           
   868                           ;MotorDriver.c: 154: }
   869                           ;MotorDriver.c: 155: }
   870                           ;MotorDriver.c: 156: break;
   871  0001EE  0012               	return	
   872  0001F0                     l1899:
   873                           
   874                           ;MotorDriver.c: 158: if (EstadoAnterior == STATE6){
   875  0001F0  0E06               	movlw	6
   876  0001F2  1833               	xorwf	_EstadoAnterior,w,c
   877  0001F4  A4D8               	btfss	status,2,c
   878  0001F6  D005               	goto	l1903
   879                           
   880                           ;MotorDriver.c: 162: EstadoAnterior = STATE7;
   881  0001F8  0E07               	movlw	7
   882  0001FA  6E33               	movwf	_EstadoAnterior,c
   883                           
   884                           ;MotorDriver.c: 163: ida=1;
   885  0001FC  0E01               	movlw	1
   886  0001FE  6E35               	movwf	_ida,c
   887                           
   888                           ;MotorDriver.c: 164: }
   889  000200  0012               	return	
   890  000202                     l1903:
   891                           
   892                           ;MotorDriver.c: 165: else{
   893                           ;MotorDriver.c: 166: MicrostepComplete = MicroStepMEF_act();
   894  000202  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   895  000206  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   896  00020A  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   897                           
   898                           ;MotorDriver.c: 167: do { LATDbits.LATD5 = 0; } while(0);do { LATCbits.LATC1 = 0; } whil
      +                          e(0);do { LATCbits.LATC0 = 0; } while(0);
   899  00020E  9A8C               	bcf	3980,5,c	;volatile
   900  000210  928B               	bcf	3979,1,c	;volatile
   901  000212  908B               	bcf	3979,0,c	;volatile
   902                           
   903                           ;MotorDriver.c: 168: if (MicrostepComplete)
   904  000214  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   905  000216  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   906  000218  B4D8               	btfsc	status,2,c
   907  00021A  0012               	return	
   908                           
   909                           ;MotorDriver.c: 169: {
   910                           ;MotorDriver.c: 170: EstadoActual = STATE8;
   911  00021C  0E08               	movlw	8
   912  00021E  6E34               	movwf	_EstadoActual,c
   913                           
   914                           ;MotorDriver.c: 171: }
   915                           ;MotorDriver.c: 172: }
   916                           ;MotorDriver.c: 173: break;
   917  000220  0012               	return	
   918  000222                     l1915:
   919                           
   920                           ;MotorDriver.c: 175: if (EstadoAnterior == STATE7){
   921  000222  0E07               	movlw	7
   922  000224  1833               	xorwf	_EstadoAnterior,w,c
   923  000226  A4D8               	btfss	status,2,c
   924  000228  D005               	goto	l1919
   925                           
   926                           ;MotorDriver.c: 179: EstadoAnterior = STATE8;
   927  00022A  0E08               	movlw	8
   928  00022C  6E33               	movwf	_EstadoAnterior,c
   929                           
   930                           ;MotorDriver.c: 180: ida=1;
   931  00022E  0E01               	movlw	1
   932  000230  6E35               	movwf	_ida,c
   933                           
   934                           ;MotorDriver.c: 181: }
   935  000232  0012               	return	
   936  000234                     l1919:
   937                           
   938                           ;MotorDriver.c: 182: else{
   939                           ;MotorDriver.c: 183: MicrostepComplete = MicroStepMEF_act();
   940  000234  EC49  F001         	call	_MicroStepMEF_act	;wreg free
   941  000238  C013  F016         	movff	?_MicroStepMEF_act,StateMEF_act@MicrostepComplete
   942  00023C  C014  F017         	movff	?_MicroStepMEF_act+1,StateMEF_act@MicrostepComplete+1
   943                           
   944                           ;MotorDriver.c: 184: do { LATCbits.LATC2 = 0; } while(0);do { LATDbits.LATD5 = 0; } whil
      +                          e(0);do { LATCbits.LATC1 = 0; } while(0);
   945  000240  948B               	bcf	3979,2,c	;volatile
   946  000242  9A8C               	bcf	3980,5,c	;volatile
   947  000244  928B               	bcf	3979,1,c	;volatile
   948                           
   949                           ;MotorDriver.c: 185: if (MicrostepComplete)
   950  000246  5016               	movf	StateMEF_act@MicrostepComplete,w,c
   951  000248  1017               	iorwf	StateMEF_act@MicrostepComplete+1,w,c
   952  00024A  B4D8               	btfsc	status,2,c
   953  00024C  0012               	return	
   954                           
   955                           ;MotorDriver.c: 186: {
   956                           ;MotorDriver.c: 187: EstadoActual = STATE1;
   957  00024E  0E01               	movlw	1
   958  000250  6E34               	movwf	_EstadoActual,c
   959                           
   960                           ;MotorDriver.c: 188: EstadoAnterior = STATE0;
   961  000252  0E00               	movlw	0
   962  000254  6E33               	movwf	_EstadoAnterior,c
   963                           
   964                           ;MotorDriver.c: 195: }
   965                           
   966                           ;MotorDriver.c: 194: break;
   967                           
   968                           ;MotorDriver.c: 192: default:
   969                           
   970                           ;MotorDriver.c: 189: }
   971                           ;MotorDriver.c: 190: }
   972                           ;MotorDriver.c: 191: break;
   973  000256  0012               	return	
   974  000258                     l1933:
   975  000258  5034               	movf	_EstadoActual,w,c
   976                           
   977                           ; Switch size 1, requested type "space"
   978                           ; Number of cases is 9, Range of values is 0 to 8
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte           28    15 (average)
   982                           ;	Chosen strategy is simple_byte
   983  00025A  0A00               	xorlw	0	; case 0
   984  00025C  B4D8               	btfsc	status,2,c
   985  00025E  D728               	goto	l1795
   986  000260  0A01               	xorlw	1	; case 1
   987  000262  B4D8               	btfsc	status,2,c
   988  000264  D72A               	goto	l1797
   989  000266  0A03               	xorlw	3	; case 2
   990  000268  B4D8               	btfsc	status,2,c
   991  00026A  D748               	goto	l1823
   992  00026C  0A01               	xorlw	1	; case 3
   993  00026E  B4D8               	btfsc	status,2,c
   994  000270  D75D               	goto	l1839
   995  000272  0A07               	xorlw	7	; case 4
   996  000274  B4D8               	btfsc	status,2,c
   997  000276  D773               	goto	l1855
   998  000278  0A01               	xorlw	1	; case 5
   999  00027A  B4D8               	btfsc	status,2,c
  1000  00027C  D788               	goto	l1869
  1001  00027E  0A03               	xorlw	3	; case 6
  1002  000280  B4D8               	btfsc	status,2,c
  1003  000282  D79E               	goto	l1885
  1004  000284  0A01               	xorlw	1	; case 7
  1005  000286  B4D8               	btfsc	status,2,c
  1006  000288  D7B3               	goto	l1899
  1007  00028A  0A0F               	xorlw	15	; case 8
  1008  00028C  A4D8               	btfss	status,2,c
  1009  00028E  0012               	return	
  1010  000290  D7C8               	goto	l1915
  1011  000292                     __end_of_StateMEF_act:
  1012                           	opt stack 0
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           intcon	equ	0xFF2
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _MicroStepMEF_act *****************
  1025 ;; Defined at:
  1026 ;;		line 198 in file "MotorDriver.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  MicrostepCom    1   20[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2   18[COMRAM] int 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    5
  1047 ;; This function calls:
  1048 ;;		_EPWM1_LoadDutyValue
  1049 ;;		_EPWM2_LoadDutyValue
  1050 ;;		_EUSART1_Write
  1051 ;;		_PWM_Register_act
  1052 ;; This function is called by:
  1053 ;;		_StateMEF_act
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text3
  1058  000292                     __ptext3:
  1059                           	opt stack 0
  1060  000292                     _MicroStepMEF_act:
  1061                           	opt stack 24
  1062                           
  1063                           ;MotorDriver.c: 199: uint8_t MicrostepComplete;
  1064                           ;MotorDriver.c: 203: switch(UEstadoActual){
  1065                           
  1066                           ;incstack = 0
  1067  000292  D0C5               	goto	l1771
  1068  000294                     l1687:
  1069                           
  1070                           ;MotorDriver.c: 206: PWM_Register_act(EstadoActual);
  1071  000294  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1072  000298  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1073  00029A  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1074                           
  1075                           ;MotorDriver.c: 207: EPWM1_LoadDutyValue(LookUP_TABLE_COS[0]);
  1076  00029E  C020  F00F         	movff	_LookUP_TABLE_COS,EPWM1_LoadDutyValue@dutyValue
  1077  0002A2  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1078  0002A4  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1079                           
  1080                           ;MotorDriver.c: 208: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[0]);
  1081  0002A8  C018  F00F         	movff	_LookUP_TABLE_SEN,EPWM2_LoadDutyValue@dutyValue
  1082  0002AC  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1083  0002AE  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1084                           
  1085                           ;MotorDriver.c: 210: EUSART1_Write(1);
  1086  0002B2  0E01               	movlw	1
  1087  0002B4  ECDE  F003         	call	_EUSART1_Write
  1088                           
  1089                           ;MotorDriver.c: 212: if (ida){
  1090  0002B8  5035               	movf	_ida,w,c
  1091  0002BA  B4D8               	btfsc	status,2,c
  1092  0002BC  D004               	goto	l1695
  1093                           
  1094                           ;MotorDriver.c: 213: UEstadoActual = MICROSTEP2;
  1095  0002BE  0E01               	movlw	1
  1096  0002C0  6E32               	movwf	_UEstadoActual,c
  1097                           
  1098                           ;MotorDriver.c: 214: MicrostepComplete=0;
  1099  0002C2  0E00               	movlw	0
  1100  0002C4  D001               	goto	L1
  1101  0002C6                     l1695:
  1102                           
  1103                           ;MotorDriver.c: 216: else{MicrostepComplete=1;}
  1104  0002C6  0E01               	movlw	1
  1105  0002C8                     L1:
  1106  0002C8  6E15               	movwf	MicroStepMEF_act@MicrostepComplete,c
  1107                           
  1108                           ;MotorDriver.c: 217: break;
  1109  0002CA  D0C3               	goto	l496
  1110  0002CC                     l1697:
  1111                           
  1112                           ;MotorDriver.c: 219: PWM_Register_act(EstadoActual);
  1113  0002CC  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1114  0002D0  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1115  0002D2  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1116                           
  1117                           ;MotorDriver.c: 220: EPWM1_LoadDutyValue(LookUP_TABLE_COS[1]);
  1118  0002D6  C021  F00F         	movff	_LookUP_TABLE_COS+1,EPWM1_LoadDutyValue@dutyValue
  1119  0002DA  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1120  0002DC  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1121                           
  1122                           ;MotorDriver.c: 221: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[1]);
  1123  0002E0  C019  F00F         	movff	_LookUP_TABLE_SEN+1,EPWM2_LoadDutyValue@dutyValue
  1124  0002E4  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1125  0002E6  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1126                           
  1127                           ;MotorDriver.c: 223: EUSART1_Write(2);
  1128  0002EA  0E02               	movlw	2
  1129  0002EC  ECDE  F003         	call	_EUSART1_Write
  1130                           
  1131                           ;MotorDriver.c: 225: if (ida){
  1132  0002F0  5035               	movf	_ida,w,c
  1133  0002F2  B4D8               	btfsc	status,2,c
  1134  0002F4  D091               	goto	l1767
  1135  0002F6                     l1703:
  1136                           
  1137                           ;MotorDriver.c: 226: UEstadoActual = MICROSTEP3;
  1138  0002F6  0E02               	movlw	2
  1139  0002F8  D090               	goto	L14
  1140  0002FA                     l1707:
  1141                           
  1142                           ;MotorDriver.c: 231: PWM_Register_act(EstadoActual);
  1143  0002FA  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1144  0002FE  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1145  000300  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1146                           
  1147                           ;MotorDriver.c: 232: EPWM1_LoadDutyValue(LookUP_TABLE_COS[2]);
  1148  000304  C022  F00F         	movff	_LookUP_TABLE_COS+2,EPWM1_LoadDutyValue@dutyValue
  1149  000308  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1150  00030A  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1151                           
  1152                           ;MotorDriver.c: 233: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[2]);
  1153  00030E  C01A  F00F         	movff	_LookUP_TABLE_SEN+2,EPWM2_LoadDutyValue@dutyValue
  1154  000312  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1155  000314  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1156                           
  1157                           ;MotorDriver.c: 235: EUSART1_Write(3);
  1158  000318  0E03               	movlw	3
  1159  00031A  ECDE  F003         	call	_EUSART1_Write
  1160                           
  1161                           ;MotorDriver.c: 237: if (ida){
  1162  00031E  5035               	movf	_ida,w,c
  1163  000320  B4D8               	btfsc	status,2,c
  1164  000322  D002               	goto	l1715
  1165  000324                     l1713:
  1166                           
  1167                           ;MotorDriver.c: 238: UEstadoActual = MICROSTEP4;
  1168  000324  0E03               	movlw	3
  1169  000326  D079               	goto	L14
  1170  000328                     l1715:
  1171                           
  1172                           ;MotorDriver.c: 240: else{UEstadoActual = MICROSTEP2;}
  1173  000328  0E01               	movlw	1
  1174  00032A  D077               	goto	L14
  1175  00032C                     l1717:
  1176                           
  1177                           ;MotorDriver.c: 243: PWM_Register_act(EstadoActual);
  1178  00032C  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1179  000330  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1180  000332  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1181                           
  1182                           ;MotorDriver.c: 244: EPWM1_LoadDutyValue(LookUP_TABLE_COS[3]);
  1183  000336  C023  F00F         	movff	_LookUP_TABLE_COS+3,EPWM1_LoadDutyValue@dutyValue
  1184  00033A  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1185  00033C  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1186                           
  1187                           ;MotorDriver.c: 245: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[3]);
  1188  000340  C01B  F00F         	movff	_LookUP_TABLE_SEN+3,EPWM2_LoadDutyValue@dutyValue
  1189  000344  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1190  000346  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1191                           
  1192                           ;MotorDriver.c: 247: EUSART1_Write(4);
  1193  00034A  0E04               	movlw	4
  1194  00034C  ECDE  F003         	call	_EUSART1_Write
  1195                           
  1196                           ;MotorDriver.c: 249: if (ida){
  1197  000350  5035               	movf	_ida,w,c
  1198  000352  B4D8               	btfsc	status,2,c
  1199  000354  D7D0               	goto	l1703
  1200  000356                     l1723:
  1201                           
  1202                           ;MotorDriver.c: 250: UEstadoActual = MICROSTEP5;
  1203  000356  0E04               	movlw	4
  1204  000358  D060               	goto	L14
  1205  00035A                     l1727:
  1206                           
  1207                           ;MotorDriver.c: 255: PWM_Register_act(EstadoActual);
  1208  00035A  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1209  00035E  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1210  000360  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1211                           
  1212                           ;MotorDriver.c: 256: EPWM1_LoadDutyValue(LookUP_TABLE_COS[4]);
  1213  000364  C024  F00F         	movff	_LookUP_TABLE_COS+4,EPWM1_LoadDutyValue@dutyValue
  1214  000368  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1215  00036A  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1216                           
  1217                           ;MotorDriver.c: 257: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[4]);
  1218  00036E  C01C  F00F         	movff	_LookUP_TABLE_SEN+4,EPWM2_LoadDutyValue@dutyValue
  1219  000372  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1220  000374  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1221                           
  1222                           ;MotorDriver.c: 259: EUSART1_Write(5);
  1223  000378  0E05               	movlw	5
  1224  00037A  ECDE  F003         	call	_EUSART1_Write
  1225                           
  1226                           ;MotorDriver.c: 261: if (ida){
  1227  00037E  5035               	movf	_ida,w,c
  1228  000380  B4D8               	btfsc	status,2,c
  1229  000382  D7D0               	goto	l1713
  1230  000384                     l1733:
  1231                           
  1232                           ;MotorDriver.c: 262: UEstadoActual = MICROSTEP6;
  1233  000384  0E05               	movlw	5
  1234  000386  D049               	goto	L14
  1235  000388                     l1737:
  1236                           
  1237                           ;MotorDriver.c: 267: PWM_Register_act(EstadoActual);
  1238  000388  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1239  00038C  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1240  00038E  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1241                           
  1242                           ;MotorDriver.c: 268: EPWM1_LoadDutyValue(LookUP_TABLE_COS[5]);
  1243  000392  C025  F00F         	movff	_LookUP_TABLE_COS+5,EPWM1_LoadDutyValue@dutyValue
  1244  000396  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1245  000398  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1246                           
  1247                           ;MotorDriver.c: 269: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[5]);
  1248  00039C  C01D  F00F         	movff	_LookUP_TABLE_SEN+5,EPWM2_LoadDutyValue@dutyValue
  1249  0003A0  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1250  0003A2  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1251                           
  1252                           ;MotorDriver.c: 271: EUSART1_Write(6);
  1253  0003A6  0E06               	movlw	6
  1254  0003A8  ECDE  F003         	call	_EUSART1_Write
  1255                           
  1256                           ;MotorDriver.c: 273: if (ida){
  1257  0003AC  5035               	movf	_ida,w,c
  1258  0003AE  B4D8               	btfsc	status,2,c
  1259  0003B0  D7D2               	goto	l1723
  1260  0003B2                     l1743:
  1261                           
  1262                           ;MotorDriver.c: 274: UEstadoActual = MICROSTEP7;
  1263  0003B2  0E06               	movlw	6
  1264  0003B4  D032               	goto	L14
  1265  0003B6                     l1747:
  1266                           
  1267                           ;MotorDriver.c: 279: PWM_Register_act(EstadoActual);
  1268  0003B6  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1269  0003BA  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1270  0003BC  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1271                           
  1272                           ;MotorDriver.c: 280: EPWM1_LoadDutyValue(LookUP_TABLE_COS[6]);
  1273  0003C0  C026  F00F         	movff	_LookUP_TABLE_COS+6,EPWM1_LoadDutyValue@dutyValue
  1274  0003C4  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1275  0003C6  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1276                           
  1277                           ;MotorDriver.c: 281: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[6]);
  1278  0003CA  C01E  F00F         	movff	_LookUP_TABLE_SEN+6,EPWM2_LoadDutyValue@dutyValue
  1279  0003CE  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1280  0003D0  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1281                           
  1282                           ;MotorDriver.c: 283: EUSART1_Write(7);
  1283  0003D4  0E07               	movlw	7
  1284  0003D6  ECDE  F003         	call	_EUSART1_Write
  1285                           
  1286                           ;MotorDriver.c: 285: if (ida){
  1287  0003DA  5035               	movf	_ida,w,c
  1288  0003DC  B4D8               	btfsc	status,2,c
  1289  0003DE  D7D2               	goto	l1733
  1290                           
  1291                           ;MotorDriver.c: 286: UEstadoActual = MICROSTEP8;
  1292  0003E0  0E07               	movlw	7
  1293  0003E2  D01B               	goto	L14
  1294  0003E4                     l1757:
  1295                           
  1296                           ;MotorDriver.c: 291: PWM_Register_act(EstadoActual);
  1297  0003E4  C034  F00F         	movff	_EstadoActual,PWM_Register_act@StateNumber
  1298  0003E8  6A10               	clrf	PWM_Register_act@StateNumber+1,c
  1299  0003EA  EC2D  F002         	call	_PWM_Register_act	;wreg free
  1300                           
  1301                           ;MotorDriver.c: 292: EPWM1_LoadDutyValue(LookUP_TABLE_COS[7]);
  1302  0003EE  C027  F00F         	movff	_LookUP_TABLE_COS+7,EPWM1_LoadDutyValue@dutyValue
  1303  0003F2  6A10               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1304  0003F4  EC05  F003         	call	_EPWM1_LoadDutyValue	;wreg free
  1305                           
  1306                           ;MotorDriver.c: 293: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[7]);
  1307  0003F8  C01F  F00F         	movff	_LookUP_TABLE_SEN+7,EPWM2_LoadDutyValue@dutyValue
  1308  0003FC  6A10               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1309  0003FE  ECED  F002         	call	_EPWM2_LoadDutyValue	;wreg free
  1310                           
  1311                           ;MotorDriver.c: 295: EUSART1_Write(8);
  1312  000402  0E08               	movlw	8
  1313  000404  ECDE  F003         	call	_EUSART1_Write
  1314                           
  1315                           ;MotorDriver.c: 297: if (ida){
  1316  000408  5035               	movf	_ida,w,c
  1317  00040A  B4D8               	btfsc	status,2,c
  1318  00040C  D7D2               	goto	l1743
  1319                           
  1320                           ;MotorDriver.c: 298: UEstadoActual = MICROSTEP8;
  1321  00040E  0E07               	movlw	7
  1322  000410  6E32               	movwf	_UEstadoActual,c
  1323                           
  1324                           ;MotorDriver.c: 299: ida=0;
  1325  000412  0E00               	movlw	0
  1326  000414  6E35               	movwf	_ida,c
  1327                           
  1328                           ;MotorDriver.c: 300: }
  1329  000416  D01D               	goto	l496
  1330  000418                     l1767:
  1331  000418  0E00               	movlw	0
  1332  00041A                     L14:
  1333  00041A  6E32               	movwf	_UEstadoActual,c
  1334                           
  1335                           ;MotorDriver.c: 305: }
  1336                           
  1337                           ;MotorDriver.c: 304: break;
  1338  00041C  D01A               	goto	l496
  1339  00041E                     l1771:
  1340  00041E  5032               	movf	_UEstadoActual,w,c
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 8, Range of values is 0 to 7
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           25    13 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  000420  0A00               	xorlw	0	; case 0
  1349  000422  B4D8               	btfsc	status,2,c
  1350  000424  D737               	goto	l1687
  1351  000426  0A01               	xorlw	1	; case 1
  1352  000428  B4D8               	btfsc	status,2,c
  1353  00042A  D750               	goto	l1697
  1354  00042C  0A03               	xorlw	3	; case 2
  1355  00042E  B4D8               	btfsc	status,2,c
  1356  000430  D764               	goto	l1707
  1357  000432  0A01               	xorlw	1	; case 3
  1358  000434  B4D8               	btfsc	status,2,c
  1359  000436  D77A               	goto	l1717
  1360  000438  0A07               	xorlw	7	; case 4
  1361  00043A  B4D8               	btfsc	status,2,c
  1362  00043C  D78E               	goto	l1727
  1363  00043E  0A01               	xorlw	1	; case 5
  1364  000440  B4D8               	btfsc	status,2,c
  1365  000442  D7A2               	goto	l1737
  1366  000444  0A03               	xorlw	3	; case 6
  1367  000446  B4D8               	btfsc	status,2,c
  1368  000448  D7B6               	goto	l1747
  1369  00044A  0A01               	xorlw	1	; case 7
  1370  00044C  B4D8               	btfsc	status,2,c
  1371  00044E  D7CA               	goto	l1757
  1372  000450  D7E3               	goto	l1767
  1373  000452                     l496:
  1374                           
  1375                           ;MotorDriver.c: 307: return(MicrostepComplete);
  1376  000452  C015  F013         	movff	MicroStepMEF_act@MicrostepComplete,?_MicroStepMEF_act
  1377  000456  6A14               	clrf	?_MicroStepMEF_act+1,c
  1378  000458  0012               	return		;funcret
  1379  00045A                     __end_of_MicroStepMEF_act:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           intcon	equ	0xFF2
  1386                           postinc0	equ	0xFEE
  1387                           wreg	equ	0xFE8
  1388                           postdec1	equ	0xFE5
  1389                           fsr1l	equ	0xFE1
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _PWM_Register_act *****************
  1393 ;; Defined at:
  1394 ;;		line 311 in file "MotorDriver.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  StateNumber     2   14[COMRAM] int 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;Total ram usage:        4 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    4
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_MicroStepMEF_act
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text4
  1423  00045A                     __ptext4:
  1424                           	opt stack 0
  1425  00045A                     _PWM_Register_act:
  1426                           	opt stack 24
  1427                           
  1428                           ;MotorDriver.c: 313: switch(StateNumber){
  1429                           
  1430                           ;incstack = 0
  1431  00045A  D02D               	goto	l1659
  1432  00045C                     l1639:
  1433                           
  1434                           ;MotorDriver.c: 315: PSTR1CON = 0x00; PSTR2CON = 0x02;
  1435  00045C  0E00               	movlw	0
  1436  00045E  6EB9               	movwf	4025,c	;volatile
  1437  000460  0E02               	movlw	2
  1438  000462  6E63               	movwf	3939,c	;volatile
  1439                           
  1440                           ;MotorDriver.c: 316: break;
  1441  000464  0012               	return	
  1442  000466                     l1641:
  1443                           
  1444                           ;MotorDriver.c: 318: PSTR1CON = 0x02; PSTR2CON = 0x02;
  1445  000466  0E02               	movlw	2
  1446  000468  6EB9               	movwf	4025,c	;volatile
  1447  00046A  0E02               	movlw	2
  1448  00046C  6E63               	movwf	3939,c	;volatile
  1449                           
  1450                           ;MotorDriver.c: 319: break;
  1451  00046E  0012               	return	
  1452  000470                     l1643:
  1453                           
  1454                           ;MotorDriver.c: 321: PSTR1CON = 0x02; PSTR2CON = 0x00;
  1455  000470  0E02               	movlw	2
  1456  000472  6EB9               	movwf	4025,c	;volatile
  1457  000474  0E00               	movlw	0
  1458  000476  6E63               	movwf	3939,c	;volatile
  1459                           
  1460                           ;MotorDriver.c: 322: break;
  1461  000478  0012               	return	
  1462  00047A                     l1645:
  1463                           
  1464                           ;MotorDriver.c: 324: PSTR1CON = 0x02; PSTR2CON = 0x01;
  1465  00047A  0E02               	movlw	2
  1466  00047C  6EB9               	movwf	4025,c	;volatile
  1467  00047E  0E01               	movlw	1
  1468  000480  6E63               	movwf	3939,c	;volatile
  1469                           
  1470                           ;MotorDriver.c: 325: break;
  1471  000482  0012               	return	
  1472  000484                     l1647:
  1473                           
  1474                           ;MotorDriver.c: 327: PSTR1CON = 0x00; PSTR2CON = 0x01;
  1475  000484  0E00               	movlw	0
  1476  000486  6EB9               	movwf	4025,c	;volatile
  1477  000488  0E01               	movlw	1
  1478  00048A  6E63               	movwf	3939,c	;volatile
  1479                           
  1480                           ;MotorDriver.c: 328: break;
  1481  00048C  0012               	return	
  1482  00048E                     l1649:
  1483                           
  1484                           ;MotorDriver.c: 330: PSTR1CON = 0x01; PSTR2CON = 0x01;
  1485  00048E  0E01               	movlw	1
  1486  000490  6EB9               	movwf	4025,c	;volatile
  1487  000492  0E01               	movlw	1
  1488  000494  6E63               	movwf	3939,c	;volatile
  1489                           
  1490                           ;MotorDriver.c: 331: break;
  1491  000496  0012               	return	
  1492  000498                     l1651:
  1493                           
  1494                           ;MotorDriver.c: 333: PSTR1CON = 0x01; PSTR2CON = 0x00;
  1495  000498  0E01               	movlw	1
  1496  00049A  6EB9               	movwf	4025,c	;volatile
  1497  00049C  0E00               	movlw	0
  1498  00049E  6E63               	movwf	3939,c	;volatile
  1499                           
  1500                           ;MotorDriver.c: 334: break;
  1501  0004A0  0012               	return	
  1502  0004A2                     l1653:
  1503                           
  1504                           ;MotorDriver.c: 336: PSTR1CON = 0x01; PSTR2CON = 0x02;
  1505  0004A2  0E01               	movlw	1
  1506  0004A4  6EB9               	movwf	4025,c	;volatile
  1507  0004A6  0E02               	movlw	2
  1508  0004A8  6E63               	movwf	3939,c	;volatile
  1509                           
  1510                           ;MotorDriver.c: 337: break;
  1511  0004AA  0012               	return	
  1512  0004AC                     l1655:
  1513                           
  1514                           ;MotorDriver.c: 339: PSTR1CON = 0x00;PSTR2CON = 0x00;
  1515  0004AC  0E00               	movlw	0
  1516  0004AE  6EB9               	movwf	4025,c	;volatile
  1517  0004B0  0E00               	movlw	0
  1518  0004B2  6E63               	movwf	3939,c	;volatile
  1519                           
  1520                           ;MotorDriver.c: 341: }
  1521                           
  1522                           ;MotorDriver.c: 340: break;
  1523  0004B4  0012               	return	
  1524  0004B6                     l1659:
  1525  0004B6  C00F  F011         	movff	PWM_Register_act@StateNumber,??_PWM_Register_act
  1526  0004BA  C010  F012         	movff	PWM_Register_act@StateNumber+1,??_PWM_Register_act+1
  1527                           
  1528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1529                           ; Switch size 1, requested type "space"
  1530                           ; Number of cases is 1, Range of values is 0 to 0
  1531                           ; switch strategies available:
  1532                           ; Name         Instructions Cycles
  1533                           ; simple_byte            4     3 (average)
  1534                           ;	Chosen strategy is simple_byte
  1535  0004BE  5012               	movf	??_PWM_Register_act+1,w,c
  1536  0004C0  0A00               	xorlw	0	; case 0
  1537  0004C2  A4D8               	btfss	status,2,c
  1538  0004C4  D7F3               	goto	l1655
  1539                           
  1540                           ; Switch size 1, requested type "space"
  1541                           ; Number of cases is 8, Range of values is 1 to 8
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           25    13 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546  0004C6  5011               	movf	??_PWM_Register_act,w,c
  1547  0004C8  0A01               	xorlw	1	; case 1
  1548  0004CA  B4D8               	btfsc	status,2,c
  1549  0004CC  D7C7               	goto	l1639
  1550  0004CE  0A03               	xorlw	3	; case 2
  1551  0004D0  B4D8               	btfsc	status,2,c
  1552  0004D2  D7C9               	goto	l1641
  1553  0004D4  0A01               	xorlw	1	; case 3
  1554  0004D6  B4D8               	btfsc	status,2,c
  1555  0004D8  D7CB               	goto	l1643
  1556  0004DA  0A07               	xorlw	7	; case 4
  1557  0004DC  B4D8               	btfsc	status,2,c
  1558  0004DE  D7CD               	goto	l1645
  1559  0004E0  0A01               	xorlw	1	; case 5
  1560  0004E2  B4D8               	btfsc	status,2,c
  1561  0004E4  D7CF               	goto	l1647
  1562  0004E6  0A03               	xorlw	3	; case 6
  1563  0004E8  B4D8               	btfsc	status,2,c
  1564  0004EA  D7D1               	goto	l1649
  1565  0004EC  0A01               	xorlw	1	; case 7
  1566  0004EE  B4D8               	btfsc	status,2,c
  1567  0004F0  D7D3               	goto	l1651
  1568  0004F2  0A0F               	xorlw	15	; case 8
  1569  0004F4  B4D8               	btfsc	status,2,c
  1570  0004F6  D7D5               	goto	l1653
  1571  0004F8  D7D9               	goto	l1655
  1572  0004FA                     __end_of_PWM_Register_act:
  1573                           	opt stack 0
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           intcon	equ	0xFF2
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1l	equ	0xFE1
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function _EUSART1_Write *****************
  1586 ;; Defined at:
  1587 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  txData          1    wreg     unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  txData          1   14[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    4
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_MicroStepMEF_act
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text5
  1616  0007BC                     __ptext5:
  1617                           	opt stack 0
  1618  0007BC                     _EUSART1_Write:
  1619                           	opt stack 24
  1620                           
  1621                           ;incstack = 0
  1622                           ;EUSART1_Write@txData stored from wreg
  1623  0007BC  6E0F               	movwf	EUSART1_Write@txData,c
  1624  0007BE                     l328:
  1625  0007BE  A89E               	btfss	3998,4,c	;volatile
  1626  0007C0  D7FE               	goto	l328
  1627                           
  1628                           ;eusart1.c: 100: }
  1629                           ;eusart1.c: 102: TXREG1 = txData;
  1630  0007C2  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1631  0007C6  0012               	return		;funcret
  1632  0007C8                     __end_of_EUSART1_Write:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           intcon	equ	0xFF2
  1639                           postinc0	equ	0xFEE
  1640                           wreg	equ	0xFE8
  1641                           postdec1	equ	0xFE5
  1642                           fsr1l	equ	0xFE1
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function _EPWM2_LoadDutyValue *****************
  1646 ;; Defined at:
  1647 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:        4 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    4
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_MicroStepMEF_act
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text6
  1676  0005DA                     __ptext6:
  1677                           	opt stack 0
  1678  0005DA                     _EPWM2_LoadDutyValue:
  1679                           	opt stack 24
  1680                           
  1681                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1682                           
  1683                           ;incstack = 0
  1684  0005DA  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1685  0005DE  C010  F012         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1686  0005E2  90D8               	bcf	status,0,c
  1687  0005E4  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1688  0005E6  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1689  0005E8  90D8               	bcf	status,0,c
  1690  0005EA  3212               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  1691  0005EC  3211               	rrcf	??_EPWM2_LoadDutyValue,f,c
  1692  0005EE  5011               	movf	??_EPWM2_LoadDutyValue,w,c
  1693  0005F0  6E67               	movwf	3943,c	;volatile
  1694                           
  1695                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1696  0005F2  C00F  F011         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1697  0005F6  0E03               	movlw	3
  1698  0005F8  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  1699  0005FA  3A11               	swapf	??_EPWM2_LoadDutyValue,f,c
  1700  0005FC  0EF0               	movlw	240
  1701  0005FE  1611               	andwf	??_EPWM2_LoadDutyValue,f,c
  1702  000600  5066               	movf	3942,w,c	;volatile
  1703  000602  0BCF               	andlw	207
  1704  000604  1011               	iorwf	??_EPWM2_LoadDutyValue,w,c
  1705  000606  6E66               	movwf	3942,c	;volatile
  1706  000608  0012               	return		;funcret
  1707  00060A                     __end_of_EPWM2_LoadDutyValue:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           intcon	equ	0xFF2
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           postdec1	equ	0xFE5
  1717                           fsr1l	equ	0xFE1
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _EPWM1_LoadDutyValue *****************
  1721 ;; Defined at:
  1722 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  dutyValue       2   14[COMRAM] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;Total ram usage:        4 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    4
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_MicroStepMEF_act
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text7
  1751  00060A                     __ptext7:
  1752                           	opt stack 0
  1753  00060A                     _EPWM1_LoadDutyValue:
  1754                           	opt stack 24
  1755                           
  1756                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1757                           
  1758                           ;incstack = 0
  1759  00060A  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1760  00060E  C010  F012         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1761  000612  90D8               	bcf	status,0,c
  1762  000614  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1763  000616  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1764  000618  90D8               	bcf	status,0,c
  1765  00061A  3212               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1766  00061C  3211               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1767  00061E  5011               	movf	??_EPWM1_LoadDutyValue,w,c
  1768  000620  6EBE               	movwf	4030,c	;volatile
  1769                           
  1770                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1771  000622  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1772  000626  0E03               	movlw	3
  1773  000628  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1774  00062A  3A11               	swapf	??_EPWM1_LoadDutyValue,f,c
  1775  00062C  0EF0               	movlw	240
  1776  00062E  1611               	andwf	??_EPWM1_LoadDutyValue,f,c
  1777  000630  50BD               	movf	4029,w,c	;volatile
  1778  000632  0BCF               	andlw	207
  1779  000634  1011               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1780  000636  6EBD               	movwf	4029,c	;volatile
  1781  000638  0012               	return		;funcret
  1782  00063A                     __end_of_EPWM1_LoadDutyValue:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1l	equ	0xFE1
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _SYSTEM_Initialize *****************
  1796 ;; Defined at:
  1797 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    6
  1818 ;; This function calls:
  1819 ;;		_ADC_Initialize
  1820 ;;		_CCP5_Initialize
  1821 ;;		_EPWM1_Initialize
  1822 ;;		_EPWM2_Initialize
  1823 ;;		_EUSART1_Initialize
  1824 ;;		_INTERRUPT_Initialize
  1825 ;;		_OSCILLATOR_Initialize
  1826 ;;		_PIN_MANAGER_Initialize
  1827 ;;		_TMR2_Initialize
  1828 ;;		_TMR6_Initialize
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text8
  1835  00063A                     __ptext8:
  1836                           	opt stack 0
  1837  00063A                     _SYSTEM_Initialize:
  1838                           	opt stack 24
  1839                           
  1840                           ;mcc.c: 114: INTERRUPT_Initialize();
  1841                           
  1842                           ;incstack = 0
  1843  00063A  ECF9  F003         	call	_INTERRUPT_Initialize	;wreg free
  1844                           
  1845                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1846  00063E  ECAA  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1847                           
  1848                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1849  000642  ECD7  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1850                           
  1851                           ;mcc.c: 117: TMR6_Initialize();
  1852  000646  EC32  F003         	call	_TMR6_Initialize	;wreg free
  1853                           
  1854                           ;mcc.c: 118: EPWM2_Initialize();
  1855  00064A  EC46  F003         	call	_EPWM2_Initialize	;wreg free
  1856                           
  1857                           ;mcc.c: 119: CCP5_Initialize();
  1858  00064E  ECC5  F003         	call	_CCP5_Initialize	;wreg free
  1859                           
  1860                           ;mcc.c: 120: ADC_Initialize();
  1861  000652  ECAE  F003         	call	_ADC_Initialize	;wreg free
  1862                           
  1863                           ;mcc.c: 121: EPWM1_Initialize();
  1864  000656  EC58  F003         	call	_EPWM1_Initialize	;wreg free
  1865                           
  1866                           ;mcc.c: 122: TMR2_Initialize();
  1867  00065A  EC7C  F003         	call	_TMR2_Initialize	;wreg free
  1868                           
  1869                           ;mcc.c: 123: EUSART1_Initialize();
  1870  00065E  ECBA  F003         	call	_EUSART1_Initialize	;wreg free
  1871  000662  0012               	return		;funcret
  1872  000664                     __end_of_SYSTEM_Initialize:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _TMR6_Initialize *****************
  1886 ;; Defined at:
  1887 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    5
  1908 ;; This function calls:
  1909 ;;		_TMR6_SetInterruptHandler
  1910 ;;		_TMR6_StartTimer
  1911 ;; This function is called by:
  1912 ;;		_SYSTEM_Initialize
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text9
  1917  000664                     __ptext9:
  1918                           	opt stack 0
  1919  000664                     _TMR6_Initialize:
  1920                           	opt stack 24
  1921                           
  1922                           ;tmr6.c: 68: T6CON = 0x01;
  1923                           
  1924                           ;incstack = 0
  1925  000664  0E01               	movlw	1
  1926  000666  010F               	movlb	15	; () banked
  1927  000668  6F4A               	movwf	74,b	;volatile
  1928                           
  1929                           ;tmr6.c: 71: PR6 = 0x3C;
  1930  00066A  0E3C               	movlw	60
  1931  00066C  010F               	movlb	15	; () banked
  1932  00066E  6F4B               	movwf	75,b	;volatile
  1933                           
  1934                           ;tmr6.c: 74: TMR6 = 0x00;
  1935  000670  0E00               	movlw	0
  1936  000672  010F               	movlb	15	; () banked
  1937  000674  6F4C               	movwf	76,b	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1941  000676  947E               	bcf	3966,2,c	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1945  000678  847D               	bsf	3965,2,c	;volatile
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1949  00067A  0EFA               	movlw	low _TMR6_DefaultInterruptHandler
  1950  00067C  6E0F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1951  00067E  0E07               	movlw	high _TMR6_DefaultInterruptHandler
  1952  000680  6E10               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1953  000682  ECE4  F003         	call	_TMR6_SetInterruptHandler	;wreg free
  1954                           
  1955                           ;tmr6.c: 86: TMR6_StartTimer();
  1956  000686  ECF1  F003         	call	_TMR6_StartTimer	;wreg free
  1957  00068A  0012               	return		;funcret
  1958  00068C                     __end_of_TMR6_Initialize:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           fsr1l	equ	0xFE1
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _TMR6_StartTimer *****************
  1972 ;; Defined at:
  1973 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		None
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_TMR6_Initialize
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text10
  2002  0007E2                     __ptext10:
  2003                           	opt stack 0
  2004  0007E2                     _TMR6_StartTimer:
  2005                           	opt stack 24
  2006                           
  2007                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  2008                           
  2009                           ;incstack = 0
  2010  0007E2  010F               	movlb	15	; () banked
  2011  0007E4  854A               	bsf	74,2,b	;volatile
  2012                           
  2013                           ; BSR set to: 15
  2014  0007E6  0012               	return		;funcret
  2015  0007E8                     __end_of_TMR6_StartTimer:
  2016                           	opt stack 0
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           intcon	equ	0xFF2
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1l	equ	0xFE1
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _TMR6_SetInterruptHandler *****************
  2029 ;; Defined at:
  2030 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2033 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;Total ram usage:        2 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    4
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_TMR6_Initialize
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text11
  2060  0007C8                     __ptext11:
  2061                           	opt stack 0
  2062  0007C8                     _TMR6_SetInterruptHandler:
  2063                           	opt stack 24
  2064                           
  2065                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  2066                           
  2067                           ; BSR set to: 15
  2068                           ;incstack = 0
  2069  0007C8  C00F  F02E         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  2070  0007CC  C010  F02F         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  2071  0007D0  0012               	return		;funcret
  2072  0007D2                     __end_of_TMR6_SetInterruptHandler:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           intcon	equ	0xFF2
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           postdec1	equ	0xFE5
  2082                           fsr1l	equ	0xFE1
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _TMR2_Initialize *****************
  2086 ;; Defined at:
  2087 ;;		line 18 in file "mcc_generated_files/tmr2.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    5
  2108 ;; This function calls:
  2109 ;;		_TMR2_SetInterruptHandler
  2110 ;;		_TMR2_StartTimer
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text12
  2117  0006F8                     __ptext12:
  2118                           	opt stack 0
  2119  0006F8                     _TMR2_Initialize:
  2120                           	opt stack 24
  2121                           
  2122                           ;tmr2.c: 23: T2CON = 0x02;
  2123                           
  2124                           ;incstack = 0
  2125  0006F8  0E02               	movlw	2
  2126  0006FA  6EBA               	movwf	4026,c	;volatile
  2127                           
  2128                           ;tmr2.c: 26: PR2 = 0x12;
  2129  0006FC  0E12               	movlw	18
  2130  0006FE  6EBB               	movwf	4027,c	;volatile
  2131                           
  2132                           ;tmr2.c: 29: TMR2 = 0x00;
  2133  000700  0E00               	movlw	0
  2134  000702  6EBC               	movwf	4028,c	;volatile
  2135                           
  2136                           ;tmr2.c: 32: PIR1bits.TMR2IF = 0;
  2137  000704  929E               	bcf	3998,1,c	;volatile
  2138                           
  2139                           ;tmr2.c: 35: PIE1bits.TMR2IE = 1;
  2140  000706  829D               	bsf	3997,1,c	;volatile
  2141                           
  2142                           ;tmr2.c: 38: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  2143  000708  0EFC               	movlw	low _TMR2_DefaultInterruptHandler
  2144  00070A  6E0F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2145  00070C  0E07               	movlw	high _TMR2_DefaultInterruptHandler
  2146  00070E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2147  000710  ECE9  F003         	call	_TMR2_SetInterruptHandler	;wreg free
  2148                           
  2149                           ;tmr2.c: 41: TMR2_StartTimer();
  2150  000714  ECF7  F003         	call	_TMR2_StartTimer	;wreg free
  2151  000718  0012               	return		;funcret
  2152  00071A                     __end_of_TMR2_Initialize:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1l	equ	0xFE1
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _TMR2_StartTimer *****************
  2166 ;; Defined at:
  2167 ;;		line 44 in file "mcc_generated_files/tmr2.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		None
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    4
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_TMR2_Initialize
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text13
  2196  0007EE                     __ptext13:
  2197                           	opt stack 0
  2198  0007EE                     _TMR2_StartTimer:
  2199                           	opt stack 24
  2200                           
  2201                           ;tmr2.c: 47: T2CONbits.TMR2ON = 1;
  2202                           
  2203                           ;incstack = 0
  2204  0007EE  84BA               	bsf	4026,2,c	;volatile
  2205  0007F0  0012               	return		;funcret
  2206  0007F2                     __end_of_TMR2_StartTimer:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           intcon	equ	0xFF2
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1l	equ	0xFE1
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _TMR2_SetInterruptHandler *****************
  2220 ;; Defined at:
  2221 ;;		line 105 in file "mcc_generated_files/tmr2.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  InterruptHan    2   14[COMRAM] PTR void 
  2224 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    4
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_TMR2_Initialize
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text14
  2251  0007D2                     __ptext14:
  2252                           	opt stack 0
  2253  0007D2                     _TMR2_SetInterruptHandler:
  2254                           	opt stack 24
  2255                           
  2256                           ;tmr2.c: 106: TMR2_InterruptHandler = InterruptHandler;
  2257                           
  2258                           ;incstack = 0
  2259  0007D2  C00F  F02C         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2260  0007D6  C010  F02D         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2261  0007DA  0012               	return		;funcret
  2262  0007DC                     __end_of_TMR2_SetInterruptHandler:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           intcon	equ	0xFF2
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1l	equ	0xFE1
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _PIN_MANAGER_Initialize *****************
  2276 ;; Defined at:
  2277 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    4
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_SYSTEM_Initialize
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text15
  2306  000554                     __ptext15:
  2307                           	opt stack 0
  2308  000554                     _PIN_MANAGER_Initialize:
  2309                           	opt stack 25
  2310                           
  2311                           ;pin_manager.c: 56: LATE = 0x00;
  2312                           
  2313                           ;incstack = 0
  2314  000554  0E00               	movlw	0
  2315  000556  6E8D               	movwf	3981,c	;volatile
  2316                           
  2317                           ;pin_manager.c: 57: LATD = 0x00;
  2318  000558  0E00               	movlw	0
  2319  00055A  6E8C               	movwf	3980,c	;volatile
  2320                           
  2321                           ;pin_manager.c: 58: LATA = 0x00;
  2322  00055C  0E00               	movlw	0
  2323  00055E  6E89               	movwf	3977,c	;volatile
  2324                           
  2325                           ;pin_manager.c: 59: LATB = 0x00;
  2326  000560  0E00               	movlw	0
  2327  000562  6E8A               	movwf	3978,c	;volatile
  2328                           
  2329                           ;pin_manager.c: 60: LATC = 0x00;
  2330  000564  0E00               	movlw	0
  2331  000566  6E8B               	movwf	3979,c	;volatile
  2332                           
  2333                           ;pin_manager.c: 65: TRISE = 0x07;
  2334  000568  0E07               	movlw	7
  2335  00056A  6E96               	movwf	3990,c	;volatile
  2336                           
  2337                           ;pin_manager.c: 66: TRISA = 0xEB;
  2338  00056C  0EEB               	movlw	235
  2339  00056E  6E92               	movwf	3986,c	;volatile
  2340                           
  2341                           ;pin_manager.c: 67: TRISB = 0xBF;
  2342  000570  0EBF               	movlw	191
  2343  000572  6E93               	movwf	3987,c	;volatile
  2344                           
  2345                           ;pin_manager.c: 68: TRISC = 0xB8;
  2346  000574  0EB8               	movlw	184
  2347  000576  6E94               	movwf	3988,c	;volatile
  2348                           
  2349                           ;pin_manager.c: 69: TRISD = 0xDF;
  2350  000578  0EDF               	movlw	223
  2351  00057A  6E95               	movwf	3989,c	;volatile
  2352                           
  2353                           ;pin_manager.c: 74: ANSELC = 0x38;
  2354  00057C  0E38               	movlw	56
  2355  00057E  010F               	movlb	15	; () banked
  2356  000580  6F3A               	movwf	58,b	;volatile
  2357                           
  2358                           ;pin_manager.c: 75: ANSELB = 0x3E;
  2359  000582  0E3E               	movlw	62
  2360  000584  010F               	movlb	15	; () banked
  2361  000586  6F39               	movwf	57,b	;volatile
  2362                           
  2363                           ;pin_manager.c: 76: ANSELD = 0xDF;
  2364  000588  0EDF               	movlw	223
  2365  00058A  010F               	movlb	15	; () banked
  2366  00058C  6F3B               	movwf	59,b	;volatile
  2367                           
  2368                           ;pin_manager.c: 77: ANSELE = 0x03;
  2369  00058E  0E03               	movlw	3
  2370  000590  010F               	movlb	15	; () banked
  2371  000592  6F3C               	movwf	60,b	;volatile
  2372                           
  2373                           ;pin_manager.c: 78: ANSELA = 0x2B;
  2374  000594  0E2B               	movlw	43
  2375  000596  010F               	movlb	15	; () banked
  2376  000598  6F38               	movwf	56,b	;volatile
  2377                           
  2378                           ; BSR set to: 15
  2379                           ;pin_manager.c: 83: WPUB = 0xFF;
  2380  00059A  6861               	setf	3937,c	;volatile
  2381                           
  2382                           ; BSR set to: 15
  2383                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  2384  00059C  9EF1               	bcf	intcon2,7,c	;volatile
  2385                           
  2386                           ; BSR set to: 15
  2387  00059E  0012               	return		;funcret
  2388  0005A0                     __end_of_PIN_MANAGER_Initialize:
  2389                           	opt stack 0
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           intcon	equ	0xFF2
  2395                           intcon2	equ	0xFF1
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1l	equ	0xFE1
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _OSCILLATOR_Initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 126 in file "mcc_generated_files/mcc.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    4
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_SYSTEM_Initialize
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text16
  2433  0007AE                     __ptext16:
  2434                           	opt stack 0
  2435  0007AE                     _OSCILLATOR_Initialize:
  2436                           	opt stack 25
  2437                           
  2438                           ;mcc.c: 129: OSCCON = 0x70;
  2439                           
  2440                           ; BSR set to: 15
  2441                           ;incstack = 0
  2442  0007AE  0E70               	movlw	112
  2443  0007B0  6ED3               	movwf	4051,c	;volatile
  2444                           
  2445                           ;mcc.c: 131: OSCCON2 = 0x04;
  2446  0007B2  0E04               	movlw	4
  2447  0007B4  6ED2               	movwf	4050,c	;volatile
  2448                           
  2449                           ;mcc.c: 133: OSCTUNE = 0x00;
  2450  0007B6  0E00               	movlw	0
  2451  0007B8  6E9B               	movwf	3995,c	;volatile
  2452  0007BA  0012               	return		;funcret
  2453  0007BC                     __end_of_OSCILLATOR_Initialize:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           intcon	equ	0xFF2
  2460                           intcon2	equ	0xFF1
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1l	equ	0xFE1
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _INTERRUPT_Initialize *****************
  2468 ;; Defined at:
  2469 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		None
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    4
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_SYSTEM_Initialize
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text17
  2498  0007F2                     __ptext17:
  2499                           	opt stack 0
  2500  0007F2                     _INTERRUPT_Initialize:
  2501                           	opt stack 25
  2502                           
  2503                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  2504                           
  2505                           ;incstack = 0
  2506  0007F2  9ED0               	bcf	4048,7,c	;volatile
  2507  0007F4  0012               	return		;funcret
  2508  0007F6                     __end_of_INTERRUPT_Initialize:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           intcon	equ	0xFF2
  2515                           intcon2	equ	0xFF1
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1l	equ	0xFE1
  2520                           status	equ	0xFD8
  2521                           
  2522 ;; *************** function _EUSART1_Initialize *****************
  2523 ;; Defined at:
  2524 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    4
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_SYSTEM_Initialize
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text18
  2553  000774                     __ptext18:
  2554                           	opt stack 0
  2555  000774                     _EUSART1_Initialize:
  2556                           	opt stack 25
  2557                           
  2558                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  2559                           
  2560                           ;incstack = 0
  2561  000774  0E08               	movlw	8
  2562  000776  6EB8               	movwf	4024,c	;volatile
  2563                           
  2564                           ;eusart1.c: 63: RCSTA1 = 0x90;
  2565  000778  0E90               	movlw	144
  2566  00077A  6EAB               	movwf	4011,c	;volatile
  2567                           
  2568                           ;eusart1.c: 66: TXSTA1 = 0x24;
  2569  00077C  0E24               	movlw	36
  2570  00077E  6EAC               	movwf	4012,c	;volatile
  2571                           
  2572                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  2573  000780  0EA0               	movlw	160
  2574  000782  6EAF               	movwf	4015,c	;volatile
  2575                           
  2576                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  2577  000784  0E01               	movlw	1
  2578  000786  6EB0               	movwf	4016,c	;volatile
  2579  000788  0012               	return		;funcret
  2580  00078A                     __end_of_EUSART1_Initialize:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           intcon	equ	0xFF2
  2587                           intcon2	equ	0xFF1
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1l	equ	0xFE1
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function _EPWM2_Initialize *****************
  2595 ;; Defined at:
  2596 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    4
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_SYSTEM_Initialize
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text19
  2625  00068C                     __ptext19:
  2626                           	opt stack 0
  2627  00068C                     _EPWM2_Initialize:
  2628                           	opt stack 25
  2629                           
  2630                           ;epwm2.c: 68: CCP2CON = 0x0C;
  2631                           
  2632                           ;incstack = 0
  2633  00068C  0E0C               	movlw	12
  2634  00068E  6E66               	movwf	3942,c	;volatile
  2635                           
  2636                           ;epwm2.c: 71: ECCP2AS = 0x00;
  2637  000690  0E00               	movlw	0
  2638  000692  6E64               	movwf	3940,c	;volatile
  2639                           
  2640                           ;epwm2.c: 74: PWM2CON = 0x80;
  2641  000694  0E80               	movlw	128
  2642  000696  6E65               	movwf	3941,c	;volatile
  2643                           
  2644                           ;epwm2.c: 77: PSTR2CON = 0x03;
  2645  000698  0E03               	movlw	3
  2646  00069A  6E63               	movwf	3939,c	;volatile
  2647                           
  2648                           ;epwm2.c: 80: CCPR2L = 0x0C;
  2649  00069C  0E0C               	movlw	12
  2650  00069E  6E67               	movwf	3943,c	;volatile
  2651                           
  2652                           ;epwm2.c: 83: CCPR2H = 0x00;
  2653  0006A0  0E00               	movlw	0
  2654  0006A2  6E68               	movwf	3944,c	;volatile
  2655                           
  2656                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  2657  0006A4  010F               	movlb	15	; () banked
  2658  0006A6  5149               	movf	73,w,b	;volatile
  2659  0006A8  0BE7               	andlw	-25
  2660  0006AA  0910               	iorlw	16
  2661  0006AC  6F49               	movwf	73,b	;volatile
  2662                           
  2663                           ; BSR set to: 15
  2664  0006AE  0012               	return		;funcret
  2665  0006B0                     __end_of_EPWM2_Initialize:
  2666                           	opt stack 0
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           intcon	equ	0xFF2
  2672                           intcon2	equ	0xFF1
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           postdec1	equ	0xFE5
  2676                           fsr1l	equ	0xFE1
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _EPWM1_Initialize *****************
  2680 ;; Defined at:
  2681 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    4
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_SYSTEM_Initialize
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text20
  2710  0006B0                     __ptext20:
  2711                           	opt stack 0
  2712  0006B0                     _EPWM1_Initialize:
  2713                           	opt stack 25
  2714                           
  2715                           ;epwm1.c: 68: CCP1CON = 0x0C;
  2716                           
  2717                           ; BSR set to: 15
  2718                           ;incstack = 0
  2719  0006B0  0E0C               	movlw	12
  2720  0006B2  6EBD               	movwf	4029,c	;volatile
  2721                           
  2722                           ;epwm1.c: 71: ECCP1AS = 0x00;
  2723  0006B4  0E00               	movlw	0
  2724  0006B6  6EB6               	movwf	4022,c	;volatile
  2725                           
  2726                           ;epwm1.c: 74: PWM1CON = 0x80;
  2727  0006B8  0E80               	movlw	128
  2728  0006BA  6EB7               	movwf	4023,c	;volatile
  2729                           
  2730                           ;epwm1.c: 77: PSTR1CON = 0x03;
  2731  0006BC  0E03               	movlw	3
  2732  0006BE  6EB9               	movwf	4025,c	;volatile
  2733                           
  2734                           ;epwm1.c: 80: CCPR1L = 0x0C;
  2735  0006C0  0E0C               	movlw	12
  2736  0006C2  6EBE               	movwf	4030,c	;volatile
  2737                           
  2738                           ;epwm1.c: 83: CCPR1H = 0x00;
  2739  0006C4  0E00               	movlw	0
  2740  0006C6  6EBF               	movwf	4031,c	;volatile
  2741                           
  2742                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  2743  0006C8  010F               	movlb	15	; () banked
  2744  0006CA  5149               	movf	73,w,b	;volatile
  2745  0006CC  0BFC               	andlw	-4
  2746  0006CE  0902               	iorlw	2
  2747  0006D0  6F49               	movwf	73,b	;volatile
  2748                           
  2749                           ; BSR set to: 15
  2750  0006D2  0012               	return		;funcret
  2751  0006D4                     __end_of_EPWM1_Initialize:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           intcon	equ	0xFF2
  2758                           intcon2	equ	0xFF1
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1l	equ	0xFE1
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function _CCP5_Initialize *****************
  2766 ;; Defined at:
  2767 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    4
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_SYSTEM_Initialize
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text21
  2796  00078A                     __ptext21:
  2797                           	opt stack 0
  2798  00078A                     _CCP5_Initialize:
  2799                           	opt stack 25
  2800                           
  2801                           ;ccp5.c: 60: CCP5CON = 0x00;
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;incstack = 0
  2805  00078A  0E00               	movlw	0
  2806  00078C  010F               	movlb	15	; () banked
  2807  00078E  6F54               	movwf	84,b	;volatile
  2808                           
  2809                           ;ccp5.c: 62: CCPR5L = 0x00;
  2810  000790  0E00               	movlw	0
  2811  000792  010F               	movlb	15	; () banked
  2812  000794  6F55               	movwf	85,b	;volatile
  2813                           
  2814                           ;ccp5.c: 64: CCPR5H = 0x00;
  2815  000796  0E00               	movlw	0
  2816  000798  010F               	movlb	15	; () banked
  2817  00079A  6F56               	movwf	86,b	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820  00079C  0012               	return		;funcret
  2821  00079E                     __end_of_CCP5_Initialize:
  2822                           	opt stack 0
  2823                           tblptru	equ	0xFF8
  2824                           tblptrh	equ	0xFF7
  2825                           tblptrl	equ	0xFF6
  2826                           tablat	equ	0xFF5
  2827                           intcon	equ	0xFF2
  2828                           intcon2	equ	0xFF1
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postdec1	equ	0xFE5
  2832                           fsr1l	equ	0xFE1
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _ADC_Initialize *****************
  2836 ;; Defined at:
  2837 ;;		line 58 in file "mcc_generated_files/adc.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_SYSTEM_Initialize
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text22
  2866  00075C                     __ptext22:
  2867                           	opt stack 0
  2868  00075C                     _ADC_Initialize:
  2869                           	opt stack 25
  2870                           
  2871                           ;adc.c: 63: ADCON0 = 0x01;
  2872                           
  2873                           ; BSR set to: 15
  2874                           ;incstack = 0
  2875  00075C  0E01               	movlw	1
  2876  00075E  6EC2               	movwf	4034,c	;volatile
  2877                           
  2878                           ;adc.c: 66: ADCON1 = 0x00;
  2879  000760  0E00               	movlw	0
  2880  000762  6EC1               	movwf	4033,c	;volatile
  2881                           
  2882                           ;adc.c: 69: ADCON2 = 0x02;
  2883  000764  0E02               	movlw	2
  2884  000766  6EC0               	movwf	4032,c	;volatile
  2885                           
  2886                           ;adc.c: 72: ADRESL = 0x00;
  2887  000768  0E00               	movlw	0
  2888  00076A  6EC3               	movwf	4035,c	;volatile
  2889                           
  2890                           ;adc.c: 75: ADRESH = 0x00;
  2891  00076C  0E00               	movlw	0
  2892  00076E  6EC4               	movwf	4036,c	;volatile
  2893                           
  2894                           ;adc.c: 78: PIE1bits.ADIE = 1;
  2895  000770  8C9D               	bsf	3997,6,c	;volatile
  2896  000772  0012               	return		;funcret
  2897  000774                     __end_of_ADC_Initialize:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postdec1	equ	0xFE5
  2908                           fsr1l	equ	0xFE1
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _MicroStepMEF_ini *****************
  2912 ;; Defined at:
  2913 ;;		line 40 in file "MotorDriver.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2  337[None  ] int 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    4
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text23
  2942  0007E8                     __ptext23:
  2943                           	opt stack 0
  2944  0007E8                     _MicroStepMEF_ini:
  2945                           	opt stack 26
  2946                           
  2947                           ;MotorDriver.c: 41: UEstadoActual = MICROSTEP1;
  2948                           
  2949                           ;incstack = 0
  2950  0007E8  0E00               	movlw	0
  2951  0007EA  6E32               	movwf	_UEstadoActual,c
  2952  0007EC  0012               	return		;funcret
  2953  0007EE                     __end_of_MicroStepMEF_ini:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           intcon	equ	0xFF2
  2960                           intcon2	equ	0xFF1
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           fsr1l	equ	0xFE1
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _INTERRUPT_InterruptManager *****************
  2968 ;; Defined at:
  2969 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;Total ram usage:       14 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    3
  2990 ;; This function calls:
  2991 ;;		_ADC_ISR
  2992 ;;		_TMR2_ISR
  2993 ;;		_TMR6_ISR
  2994 ;; This function is called by:
  2995 ;;		Interrupt level 2
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	intcode
  3000  000008                     __pintcode:
  3001                           	opt stack 0
  3002  000008                     _INTERRUPT_InterruptManager:
  3003                           	opt stack 24
  3004                           
  3005                           ;incstack = 0
  3006  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3007  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3008  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3009  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3010  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3011  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3012  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3013  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3014  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3015  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3016  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3017  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3018  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3019  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3020  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3021                           
  3022                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  3023  000042  BCF2               	btfsc	intcon,6,c	;volatile
  3024  000044  AC9D               	btfss	3997,6,c	;volatile
  3025  000046  D005               	goto	i2l259
  3026  000048  AC9E               	btfss	3998,6,c	;volatile
  3027  00004A  D003               	goto	i2l259
  3028                           
  3029                           ;interrupt_manager.c: 61: {
  3030                           ;interrupt_manager.c: 62: ADC_ISR();
  3031  00004C  ECFB  F003         	call	_ADC_ISR	;wreg free
  3032                           
  3033                           ;interrupt_manager.c: 63: }
  3034  000050  D00E               	goto	i2l265
  3035  000052                     i2l259:
  3036                           
  3037                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  3038  000052  BCF2               	btfsc	intcon,6,c	;volatile
  3039  000054  A47D               	btfss	3965,2,c	;volatile
  3040  000056  D005               	goto	i2l261
  3041  000058  A47E               	btfss	3966,2,c	;volatile
  3042  00005A  D003               	goto	i2l261
  3043                           
  3044                           ;interrupt_manager.c: 65: {
  3045                           ;interrupt_manager.c: 66: TMR6_ISR();
  3046  00005C  EC8D  F003         	call	_TMR6_ISR	;wreg free
  3047                           
  3048                           ;interrupt_manager.c: 67: }
  3049  000060  D006               	goto	i2l265
  3050  000062                     i2l261:
  3051                           
  3052                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  3053  000062  BCF2               	btfsc	intcon,6,c	;volatile
  3054  000064  A29D               	btfss	3997,1,c	;volatile
  3055  000066  D003               	goto	i2l265
  3056  000068  B29E               	btfsc	3998,1,c	;volatile
  3057                           
  3058                           ;interrupt_manager.c: 69: {
  3059                           ;interrupt_manager.c: 70: TMR2_ISR();
  3060  00006A  EC9E  F003         	call	_TMR2_ISR	;wreg free
  3061  00006E                     i2l265:
  3062  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3063  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3064  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3065  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3066  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3067  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3068  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3069  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3070  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3071  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3072  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3073  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3074  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3075  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3076  0000A6  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3077  0000A8  0011               	retfie		f
  3078  0000AA                     __end_of_INTERRUPT_InterruptManager:
  3079                           	opt stack 0
  3080                           pclatu	equ	0xFFB
  3081                           pclath	equ	0xFFA
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           intcon2	equ	0xFF1
  3090                           postinc0	equ	0xFEE
  3091                           fsr0h	equ	0xFEA
  3092                           fsr0l	equ	0xFE9
  3093                           wreg	equ	0xFE8
  3094                           postdec1	equ	0xFE5
  3095                           fsr1h	equ	0xFE2
  3096                           fsr1l	equ	0xFE1
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _TMR6_ISR *****************
  3102 ;; Defined at:
  3103 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    1
  3124 ;; This function calls:
  3125 ;;		Absolute function
  3126 ;;		_TMR6_DefaultInterruptHandler
  3127 ;; This function is called by:
  3128 ;;		_INTERRUPT_InterruptManager
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text25
  3133  00071A                     __ptext25:
  3134                           	opt stack 0
  3135  00071A                     _TMR6_ISR:
  3136                           	opt stack 25
  3137                           
  3138                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  3139                           
  3140                           ;incstack = 0
  3141  00071A  947E               	bcf	3966,2,c	;volatile
  3142                           
  3143                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  3144  00071C  502E               	movf	_TMR6_InterruptHandler,w,c
  3145  00071E  102F               	iorwf	_TMR6_InterruptHandler+1,w,c
  3146  000720  B4D8               	btfsc	status,2,c
  3147  000722  0012               	return	
  3148                           
  3149                           ;tmr6.c: 128: {
  3150                           ;tmr6.c: 129: TMR6_InterruptHandler();
  3151  000724  D801               	call	i2u13_48
  3152  000726  0012               	return	
  3153  000728                     i2u13_48:
  3154  000728  0005               	push	
  3155  00072A  6EFA               	movwf	pclath,c
  3156  00072C  502E               	movf	_TMR6_InterruptHandler,w,c
  3157  00072E  6EFD               	movwf	tosl,c
  3158  000730  502F               	movf	_TMR6_InterruptHandler+1,w,c
  3159  000732  6EFE               	movwf	tosh,c
  3160  000734  50F8               	movf	tblptru,w,c
  3161  000736  6EFF               	movwf	tosu,c
  3162  000738  50FA               	movf	pclath,w,c
  3163  00073A  0012               	return		;indir
  3164  00073C                     __end_of_TMR6_ISR:
  3165                           	opt stack 0
  3166                           tosu	equ	0xFFF
  3167                           tosh	equ	0xFFE
  3168                           tosl	equ	0xFFD
  3169                           pclatu	equ	0xFFB
  3170                           pclath	equ	0xFFA
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           intcon2	equ	0xFF1
  3179                           postinc0	equ	0xFEE
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           postdec1	equ	0xFE5
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  3191 ;; Defined at:
  3192 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		None
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_TMR6_Initialize
  3216 ;;		_TMR6_ISR
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text26
  3221  0007FA                     __ptext26:
  3222                           	opt stack 0
  3223  0007FA                     _TMR6_DefaultInterruptHandler:
  3224                           	opt stack 25
  3225                           
  3226                           ;incstack = 0
  3227  0007FA  0012               	return		;funcret
  3228  0007FC                     __end_of_TMR6_DefaultInterruptHandler:
  3229                           	opt stack 0
  3230                           tosu	equ	0xFFF
  3231                           tosh	equ	0xFFE
  3232                           tosl	equ	0xFFD
  3233                           pclatu	equ	0xFFB
  3234                           pclath	equ	0xFFA
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           intcon2	equ	0xFF1
  3243                           postinc0	equ	0xFEE
  3244                           fsr0h	equ	0xFEA
  3245                           fsr0l	equ	0xFE9
  3246                           wreg	equ	0xFE8
  3247                           postdec1	equ	0xFE5
  3248                           fsr1h	equ	0xFE2
  3249                           fsr1l	equ	0xFE1
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _TMR2_ISR *****************
  3255 ;; Defined at:
  3256 ;;		line 76 in file "mcc_generated_files/tmr2.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		_TMR2_CallBack
  3279 ;; This function is called by:
  3280 ;;		_INTERRUPT_InterruptManager
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text27
  3285  00073C                     __ptext27:
  3286                           	opt stack 0
  3287  00073C                     _TMR2_ISR:
  3288                           	opt stack 24
  3289                           
  3290                           ;tmr2.c: 78: static volatile unsigned int CountCallBack = 0;
  3291                           ;tmr2.c: 81: PIR1bits.TMR2IF = 0;
  3292                           
  3293                           ;incstack = 0
  3294  00073C  929E               	bcf	3998,1,c	;volatile
  3295                           
  3296                           ;tmr2.c: 84: if (++CountCallBack >= 16)
  3297  00073E  4A30               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  3298  000740  2A31               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  3299  000742  5031               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  3300  000744  E104               	bnz	i2u14_40
  3301  000746  0E10               	movlw	16
  3302  000748  5C30               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  3303  00074A  A0D8               	btfss	status,0,c
  3304  00074C  0012               	return	
  3305  00074E                     i2u14_40:
  3306                           
  3307                           ;tmr2.c: 85: {
  3308                           ;tmr2.c: 87: TMR2_CallBack();
  3309  00074E  EC6A  F003         	call	_TMR2_CallBack	;wreg free
  3310                           
  3311                           ;tmr2.c: 90: CountCallBack = 0;
  3312  000752  0E00               	movlw	0
  3313  000754  6E31               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  3314  000756  0E00               	movlw	0
  3315  000758  6E30               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  3316  00075A  0012               	return	
  3317  00075C                     __end_of_TMR2_ISR:
  3318                           	opt stack 0
  3319                           tosu	equ	0xFFF
  3320                           tosh	equ	0xFFE
  3321                           tosl	equ	0xFFD
  3322                           pclatu	equ	0xFFB
  3323                           pclath	equ	0xFFA
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           intcon	equ	0xFF2
  3331                           intcon2	equ	0xFF1
  3332                           postinc0	equ	0xFEE
  3333                           fsr0h	equ	0xFEA
  3334                           fsr0l	equ	0xFE9
  3335                           wreg	equ	0xFE8
  3336                           postdec1	equ	0xFE5
  3337                           fsr1h	equ	0xFE2
  3338                           fsr1l	equ	0xFE1
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _TMR2_CallBack *****************
  3344 ;; Defined at:
  3345 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    1
  3366 ;; This function calls:
  3367 ;;		Absolute function
  3368 ;;		_TMR2_DefaultInterruptHandler
  3369 ;; This function is called by:
  3370 ;;		_TMR2_ISR
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text28
  3375  0006D4                     __ptext28:
  3376                           	opt stack 0
  3377  0006D4                     _TMR2_CallBack:
  3378                           	opt stack 24
  3379                           
  3380                           ;tmr2.c: 98: Timer2Ticked = 1;
  3381                           
  3382                           ;incstack = 0
  3383  0006D4  0E01               	movlw	1
  3384  0006D6  6E36               	movwf	_Timer2Ticked,c	;volatile
  3385                           
  3386                           ;tmr2.c: 99: if(TMR2_InterruptHandler)
  3387  0006D8  502C               	movf	_TMR2_InterruptHandler,w,c
  3388  0006DA  102D               	iorwf	_TMR2_InterruptHandler+1,w,c
  3389  0006DC  B4D8               	btfsc	status,2,c
  3390  0006DE  0012               	return	
  3391                           
  3392                           ;tmr2.c: 100: {
  3393                           ;tmr2.c: 101: TMR2_InterruptHandler();
  3394  0006E0  D801               	call	i2u3_48
  3395  0006E2  0012               	return	
  3396  0006E4                     i2u3_48:
  3397  0006E4  0005               	push	
  3398  0006E6  6EFA               	movwf	pclath,c
  3399  0006E8  502C               	movf	_TMR2_InterruptHandler,w,c
  3400  0006EA  6EFD               	movwf	tosl,c
  3401  0006EC  502D               	movf	_TMR2_InterruptHandler+1,w,c
  3402  0006EE  6EFE               	movwf	tosh,c
  3403  0006F0  50F8               	movf	tblptru,w,c
  3404  0006F2  6EFF               	movwf	tosu,c
  3405  0006F4  50FA               	movf	pclath,w,c
  3406  0006F6  0012               	return		;indir
  3407  0006F8                     __end_of_TMR2_CallBack:
  3408                           	opt stack 0
  3409                           tosu	equ	0xFFF
  3410                           tosh	equ	0xFFE
  3411                           tosl	equ	0xFFD
  3412                           pclatu	equ	0xFFB
  3413                           pclath	equ	0xFFA
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           intcon2	equ	0xFF1
  3422                           postinc0	equ	0xFEE
  3423                           fsr0h	equ	0xFEA
  3424                           fsr0l	equ	0xFE9
  3425                           wreg	equ	0xFE8
  3426                           postdec1	equ	0xFE5
  3427                           fsr1h	equ	0xFE2
  3428                           fsr1l	equ	0xFE1
  3429                           fsr2h	equ	0xFDA
  3430                           fsr2l	equ	0xFD9
  3431                           status	equ	0xFD8
  3432                           
  3433 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3434 ;; Defined at:
  3435 ;;		line 109 in file "mcc_generated_files/tmr2.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		None
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_TMR2_Initialize
  3459 ;;		_TMR2_CallBack
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text29
  3464  0007FC                     __ptext29:
  3465                           	opt stack 0
  3466  0007FC                     _TMR2_DefaultInterruptHandler:
  3467                           	opt stack 24
  3468                           
  3469                           ;incstack = 0
  3470  0007FC  0012               	return		;funcret
  3471  0007FE                     __end_of_TMR2_DefaultInterruptHandler:
  3472                           	opt stack 0
  3473                           tosu	equ	0xFFF
  3474                           tosh	equ	0xFFE
  3475                           tosl	equ	0xFFD
  3476                           pclatu	equ	0xFFB
  3477                           pclath	equ	0xFFA
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           intcon	equ	0xFF2
  3485                           intcon2	equ	0xFF1
  3486                           postinc0	equ	0xFEE
  3487                           fsr0h	equ	0xFEA
  3488                           fsr0l	equ	0xFE9
  3489                           wreg	equ	0xFE8
  3490                           postdec1	equ	0xFE5
  3491                           fsr1h	equ	0xFE2
  3492                           fsr1l	equ	0xFE1
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function _ADC_ISR *****************
  3498 ;; Defined at:
  3499 ;;		line 129 in file "mcc_generated_files/adc.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		None
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_INTERRUPT_InterruptManager
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text30
  3527  0007F6                     __ptext30:
  3528                           	opt stack 0
  3529  0007F6                     _ADC_ISR:
  3530                           	opt stack 26
  3531                           
  3532                           ;adc.c: 132: PIR1bits.ADIF = 0;
  3533                           
  3534                           ;incstack = 0
  3535  0007F6  9C9E               	bcf	3998,6,c	;volatile
  3536  0007F8  0012               	return		;funcret
  3537  0007FA                     __end_of_ADC_ISR:
  3538                           	opt stack 0
  3539  0000                     tosu	equ	0xFFF
  3540                           tosh	equ	0xFFE
  3541                           tosl	equ	0xFFD
  3542                           pclatu	equ	0xFFB
  3543                           pclath	equ	0xFFA
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           intcon	equ	0xFF2
  3551                           intcon2	equ	0xFF1
  3552                           postinc0	equ	0xFEE
  3553                           fsr0h	equ	0xFEA
  3554                           fsr0l	equ	0xFE9
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1h	equ	0xFE2
  3558                           fsr1l	equ	0xFE1
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           tosu	equ	0xFFF
  3563                           tosh	equ	0xFFE
  3564                           tosl	equ	0xFFD
  3565                           pclatu	equ	0xFFB
  3566                           pclath	equ	0xFFA
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           intcon2	equ	0xFF1
  3575                           postinc0	equ	0xFEE
  3576                           fsr0h	equ	0xFEA
  3577                           fsr0l	equ	0xFE9
  3578                           wreg	equ	0xFE8
  3579                           postdec1	equ	0xFE5
  3580                           fsr1h	equ	0xFE2
  3581                           fsr1l	equ	0xFE1
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586                           	psect	text31
  3587  000000                     __ptext31:
  3588                           	opt stack 0
  3589                           tosu	equ	0xFFF
  3590                           tosh	equ	0xFFE
  3591                           tosl	equ	0xFFD
  3592                           pclatu	equ	0xFFB
  3593                           pclath	equ	0xFFA
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           intcon2	equ	0xFF1
  3602                           postinc0	equ	0xFEE
  3603                           fsr0h	equ	0xFEA
  3604                           fsr0l	equ	0xFE9
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613                           	psect	rparam
  3614  0000                     tosu	equ	0xFFF
  3615                           tosh	equ	0xFFE
  3616                           tosl	equ	0xFFD
  3617                           pclatu	equ	0xFFB
  3618                           pclath	equ	0xFFA
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           intcon2	equ	0xFF1
  3627                           postinc0	equ	0xFEE
  3628                           fsr0h	equ	0xFEA
  3629                           fsr0l	equ	0xFE9
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638                           	psect	temp
  3639  000037                     btemp:
  3640                           	opt stack 0
  3641  000037                     	ds	1
  3642  0000                     int$flags	set	btemp
  3643                           tosu	equ	0xFFF
  3644                           tosh	equ	0xFFE
  3645                           tosl	equ	0xFFD
  3646                           pclatu	equ	0xFFB
  3647                           pclath	equ	0xFFA
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           intcon	equ	0xFF2
  3655                           intcon2	equ	0xFF1
  3656                           postinc0	equ	0xFEE
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         7
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_StateMEF_act
    _StateMEF_act->_MicroStepMEF_act
    _MicroStepMEF_act->_EPWM1_LoadDutyValue
    _MicroStepMEF_act->_EPWM2_LoadDutyValue
    _MicroStepMEF_act->_PWM_Register_act
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2041
                   _MicroStepMEF_ini
                  _SYSTEM_Initialize
                       _StateMEF_act
                       _StateMEF_ini
 ---------------------------------------------------------------------------------
 (1) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StateMEF_act                                         2     2      0    1869
                                             21 COMRAM     2     2      0
                   _MicroStepMEF_act
 ---------------------------------------------------------------------------------
 (2) _MicroStepMEF_act                                     3     1      2    1685
                                             18 COMRAM     3     1      2
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                      _EUSART1_Write
                   _PWM_Register_act
 ---------------------------------------------------------------------------------
 (3) _PWM_Register_act                                     4     2      2     534
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     556
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MicroStepMEF_ini                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MicroStepMEF_ini
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_act
     _MicroStepMEF_act
       _EPWM1_LoadDutyValue
       _EPWM2_LoadDutyValue
       _EUSART1_Write
       _PWM_Register_act
   _StateMEF_ini

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      36       1       57.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      12        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 02 09:06:13 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 07DC  
                       ??_TMR6_StartTimer 000F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l328 07BE                                       l496 0452  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                                       _PR6 000F4B  
                                     _ida 0035                           __end_of_ADC_ISR 07FA  
                         _TMR2_Initialize 06F8                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 06B0  
                         _CCP5_Initialize 078A                                      l1703 02F6  
                                    l1641 0466                                      l1713 0324  
                                    l1651 0498                                      l1643 0470  
                                    l1723 0356                                      l1715 0328  
                                    l1707 02FA                                      l1653 04A2  
                                    l1645 047A                                      l1733 0384  
                                    l1717 032C                                      l1655 04AC  
                                    l1647 0484                                      l1639 045C  
                                    l1743 03B2                                      l1727 035A  
                                    l1903 0202                                      l1823 00FC  
                                    l1649 048E                                      l1737 0388  
                                    l1809 00DA                                      l1659 04B6  
                                    l1747 03B6                                      l1771 041E  
                                    l1915 0222                                      l1843 013E  
                                    l1827 010C                                      l1757 03E4  
                                    l1933 0258                                      l1767 0418  
                                    l1695 02C6                                      l1687 0294  
                                    l1919 0234                                      l1855 015E  
                                    l1839 012C                                      l1951 051C  
                                    l1697 02CC                                      l1873 01A0  
                                    l1953 052C                                      l1859 0170  
                                    l1795 00B0                                      l1885 01C0  
                                    l1869 018E                                      l1797 00BA  
                                    l1965 054E                                      l1889 01D2  
                                    l1899 01F0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    _TMR2 000FBC                                      _TMR6 000F4C  
                                    _WPUB 000F61                             _EUSART1_Write 07BC  
                                    _main 04FA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0037  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0011  
                            ___param_bank 000000            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 07BC                                     ?_main 0001  
                                   _T2CON 000FBA                                     _T6CON 000F4A  
                          __CFG_DEBUG$OFF 000000                                     i2l261 0062  
                                   i2l265 006E                                     i2l259 0052  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000         __size_of_TMR6_SetInterruptHandler 000A  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                 ?_TMR6_SetInterruptHandler 000F  
                        __end_of_TMR2_ISR 075C                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                        __end_of_TMR6_ISR 073C                            __CFG_EBTRB$OFF 000000  
                        _LookUP_TABLE_COS 0020                          _LookUP_TABLE_SEN 0018  
                      __CFG_MCLRE$EXTMCLR 000000                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                          _EstadoAnterior 0033                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 07EE  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0001  
                         __initialization 05A0                __end_of_EUSART1_Initialize 078A  
                            __end_of_main 0554               PWM_Register_act@StateNumber 000F  
                 __end_of_TMR2_Initialize 071A                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001         MicroStepMEF_act@MicrostepComplete 0015  
                _TMR2_SetInterruptHandler 07D2                                    ??_main 0018  
                 __end_of_CCP5_Initialize 079E                             __activetblptr 000002  
                         _TMR6_Initialize 0664                          _MicroStepMEF_act 0292  
                        _MicroStepMEF_ini 07E8                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR1H 000FBF                                    _CCPR2H 000F68  
                                  _CCPR1L 000FBE                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u3_48 06E4                                    _TXREG1 000FAD  
                __end_of_PWM_Register_act 04FA                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                          __CFG_STVREN$ON 000000                                    clear_0 05C6  
                            __pdataCOMRAM 0018                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                         ??_EUSART1_Write 000F                       _EPWM2_LoadDutyValue 05DA  
                 __end_of_TMR2_StartTimer 07F2  TMR2_SetInterruptHandler@InterruptHandler 000F  
TMR6_SetInterruptHandler@InterruptHandler 000F             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 063A                                __accesstop 0060  
                 __end_of__initialization 05CC                     __end_of_TMR2_CallBack 06F8  
                      ?_SYSTEM_Initialize 0001                           _TMR6_StartTimer 07E2  
                           ___rparam_used 000001                         ?_EPWM1_Initialize 0001  
                          __pcstackCOMRAM 0001                      ?_EPWM2_LoadDutyValue 000F  
                     ??_SYSTEM_Initialize 0011                                 ?_TMR2_ISR 0001  
                               ?_TMR6_ISR 0001                        ??_EPWM1_Initialize 000F  
                        ?_TMR2_Initialize 0001                   __end_of_TMR6_Initialize 068C  
                        ?_CCP5_Initialize 0001                         ?_EPWM2_Initialize 0001  
               __end_of_SYSTEM_Initialize 0664                        ??_EPWM2_Initialize 000F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0028  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0011  
        __end_of_TMR6_SetInterruptHandler 07D2                                ??_TMR2_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                                ??_TMR6_ISR 0001  
                                 _CCP1CON 000FBD                                   _CCP2CON 000F66  
                                 _CCP5CON 000F54                                   _ECCP1AS 000FB6  
                                 _ECCP2AS 000F64                                   _ADC_ISR 07F6  
                 __size_of_ADC_Initialize 0018                                   _OSCCON2 000FD2  
                                 i2u14_40 074E                                   i2u13_48 0728  
                                 _OSCTUNE 000F9B                                   _PWM1CON 000FB7  
                                 _PWM2CON 000F65                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0001                   __end_of_TMR6_StartTimer 07E8  
             __end_of_EPWM1_LoadDutyValue 063A             StateMEF_act@MicrostepComplete 0016  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                  __end_of_MicroStepMEF_act 045A  
              ??_TMR2_SetInterruptHandler 0011                  __end_of_MicroStepMEF_ini 07EE  
                                 __pcinit 05A0                          ?_TMR6_Initialize 0001  
                                 __ramtop 1000                                   __ptext0 04FA  
                                 __ptext1 07DC                                   __ptext2 00AE  
                                 __ptext3 0292                                   __ptext4 045A  
                                 __ptext5 07BC                                   __ptext6 05DA  
                                 __ptext7 060A                                   __ptext8 063A  
                                 __ptext9 0664                             ?_StateMEF_act 0001  
                   _OSCILLATOR_Initialize 07AE                                 _T2CONbits 000FBA  
                           ?_StateMEF_ini 0001                        _EUSART1_Initialize 0774  
                ??_PIN_MANAGER_Initialize 000F                                 _T6CONbits 000F4A  
              __size_of_SYSTEM_Initialize 002A                      end_of_initialization 05CC  
                     ?_EUSART1_Initialize 0001                             __Lmediumconst 0000  
                       ?_PWM_Register_act 000F                        ??_PWM_Register_act 0011  
                                 postdec1 000FE5                                   postinc0 000FEE  
                    ??_EUSART1_Initialize 000F                  _TMR6_SetInterruptHandler 07C8  
                          ??_StateMEF_act 0016                            ??_StateMEF_ini 000F  
                     EUSART1_Write@txData 000F                          ?_TMR6_StartTimer 0001  
                            _EstadoActual 0034              __end_of_INTERRUPT_Initialize 07F6  
    __end_of_TMR2_DefaultInterruptHandler 07FE     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 07FC                             __pidataCOMRAM 079E  
                       __size_of_TMR2_ISR 0020                            _ADC_Initialize 075C  
                       __size_of_TMR6_ISR 0022                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 05A0                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C              EPWM1_LoadDutyValue@dutyValue 000F  
                   __end_of_EUSART1_Write 07C8                 __size_of_EPWM2_Initialize 0024  
                  __end_of_ADC_Initialize 0774                                  ?_ADC_ISR 0001  
                               _StepCount 0028             ?_TMR2_DefaultInterruptHandler 0001  
                  __size_of_TMR2_CallBack 0024                               __pbssCOMRAM 0030  
                __size_of_TMR2_Initialize 0022                  __size_of_CCP5_Initialize 0014  
             __end_of_EPWM2_LoadDutyValue 060A                     _TMR6_InterruptHandler 002E  
                    __end_of_StateMEF_act 0292                      __end_of_StateMEF_ini 07E2  
                  _PIN_MANAGER_Initialize 0554                         ?_MicroStepMEF_act 0013  
                       ?_MicroStepMEF_ini 0001                                 __pintcode 0008  
                      ??_MicroStepMEF_act 0015                           ?_ADC_Initialize 0001  
                      ??_MicroStepMEF_ini 000F              ??_INTERRUPT_InterruptManager 0001  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                    _INTERRUPT_Initialize 07F2                             _UEstadoActual 0032  
                                _LATBbits 000F8A                                  _LATCbits 000F8B  
                                _LATDbits 000F8C                             _TMR2_CallBack 06D4  
                                _PIE1bits 000F9D                                  _PIE5bits 000F7D  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0011  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 073C                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 071A  
                        _Timer2Tick_count 002A                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                 __size_of_PWM_Register_act 00A0  
          ??_TMR2_DefaultInterruptHandler 0001                          _EPWM1_Initialize 06B0  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 000F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 05B4                     ?_INTERRUPT_Initialize 0001  
                       ??_TMR2_Initialize 0011                            ?_TMR2_CallBack 0001  
                       ??_CCP5_Initialize 000F                                  __Hrparam 0000  
                            _Timer2Ticked 0036                          _EPWM2_Initialize 068C  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                   ??_OSCILLATOR_Initialize 000F  
             __size_of_EUSART1_Initialize 0016                                  __ptext10 07E2  
                                __ptext11 07C8                                  __ptext20 06B0  
                                __ptext12 06F8                                  __ptext21 078A  
                                __ptext13 07EE                                  __ptext30 07F6  
                                __ptext22 075C                                  __ptext14 07D2  
                                __ptext31 0000                                  __ptext23 07E8  
                                __ptext15 0554                                  __ptext16 07AE  
                                __ptext25 071A                                  __ptext17 07F2  
                                __ptext26 07FA                                  __ptext18 0774  
                                __ptext27 073C                                  __ptext19 068C  
                                __ptext28 06D4                                  __ptext29 07FC  
                   __size_of_StateMEF_act 01E4                     __size_of_StateMEF_ini 0006  
                           __size_of_main 005A                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0037                         ??_TMR2_StartTimer 000F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                            _StateMEF_act 00AE                                _INTCONbits 000FF2  
                            _StateMEF_ini 07DC                    ??_INTERRUPT_Initialize 000F  
    __end_of_TMR6_DefaultInterruptHandler 07FC     __size_of_TMR6_DefaultInterruptHandler 0002  
            _TMR6_DefaultInterruptHandler 07FA                                  intlevel2 0000  
                         ??_TMR2_CallBack 0001              EPWM2_LoadDutyValue@dutyValue 000F  
                 ?_PIN_MANAGER_Initialize 0001                         ??_TMR6_Initialize 0011  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 000F  
                  __size_of_EUSART1_Write 000C                          _PWM_Register_act 045A  
                   TMR2_ISR@CountCallBack 0030                 __size_of_MicroStepMEF_act 01C8  
               __size_of_MicroStepMEF_ini 0006                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 060A            __end_of_PIN_MANAGER_Initialize 05A0  
           ?_TMR6_DefaultInterruptHandler 0001                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 002C                  __end_of_EPWM1_Initialize 06D4  
                    ?_EPWM1_LoadDutyValue 000F  

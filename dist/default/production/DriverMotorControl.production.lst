

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 29 10:14:17 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 1.41
    57                           ; Generated 25/01/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K22 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  000ADA                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _LookUP_TABLE_COS
    96  000ADA  7D                 	db	125
    97  000ADB  76                 	db	118
    98  000ADC  6C                 	db	108
    99  000ADD  5E                 	db	94
   100  000ADE  4D                 	db	77
   101  000ADF  39                 	db	57
   102  000AE0  22                 	db	34
   103  000AE1  0C                 	db	12
   104  000AE2  0C                 	db	12
   105  000AE3  22                 	db	34
   106  000AE4  39                 	db	57
   107  000AE5  4D                 	db	77
   108  000AE6  5E                 	db	94
   109  000AE7  6C                 	db	108
   110  000AE8  76                 	db	118
   111  000AE9  7D                 	db	125
   112  000AEA  7D                 	db	125
   113  000AEB  76                 	db	118
   114  000AEC  6C                 	db	108
   115  000AED  5E                 	db	94
   116  000AEE  4D                 	db	77
   117  000AEF  39                 	db	57
   118  000AF0  22                 	db	34
   119  000AF1  0C                 	db	12
   120  000AF2  0C                 	db	12
   121  000AF3  22                 	db	34
   122  000AF4  39                 	db	57
   123  000AF5  4D                 	db	77
   124  000AF6  5E                 	db	94
   125  000AF7  6C                 	db	108
   126  000AF8  76                 	db	118
   127  000AF9  7D                 	db	125
   128                           
   129                           	psect	idataBANK0
   130  000566                     __pidataBANK0:
   131                           	opt stack 0
   132                           
   133                           ;initializer for _LookUP_TABLE_SEN_16
   134  000566  06                 	db	6
   135  000567  12                 	db	18
   136  000568  1D                 	db	29
   137  000569  2A                 	db	42
   138  00056A  35                 	db	53
   139  00056B  3F                 	db	63
   140  00056C  49                 	db	73
   141  00056D  53                 	db	83
   142  00056E  5B                 	db	91
   143  00056F  63                 	db	99
   144  000570  6A                 	db	106
   145  000571  70                 	db	112
   146  000572  75                 	db	117
   147  000573  79                 	db	121
   148  000574  7C                 	db	124
   149  000575  7E                 	db	126
   150  000576  7E                 	db	126
   151  000577  7C                 	db	124
   152  000578  79                 	db	121
   153  000579  75                 	db	117
   154  00057A  70                 	db	112
   155  00057B  6A                 	db	106
   156  00057C  63                 	db	99
   157  00057D  5B                 	db	91
   158  00057E  53                 	db	83
   159  00057F  49                 	db	73
   160  000580  3F                 	db	63
   161  000581  35                 	db	53
   162  000582  2A                 	db	42
   163  000583  1D                 	db	29
   164  000584  12                 	db	18
   165  000585  06                 	db	6
   166  000586  06                 	db	6
   167  000587  12                 	db	18
   168  000588  1D                 	db	29
   169  000589  2A                 	db	42
   170  00058A  35                 	db	53
   171  00058B  3F                 	db	63
   172  00058C  49                 	db	73
   173  00058D  53                 	db	83
   174  00058E  5B                 	db	91
   175  00058F  63                 	db	99
   176  000590  6A                 	db	106
   177  000591  70                 	db	112
   178  000592  75                 	db	117
   179  000593  79                 	db	121
   180  000594  7C                 	db	124
   181  000595  7E                 	db	126
   182  000596  7E                 	db	126
   183  000597  7C                 	db	124
   184  000598  79                 	db	121
   185  000599  75                 	db	117
   186  00059A  70                 	db	112
   187  00059B  6A                 	db	106
   188  00059C  63                 	db	99
   189  00059D  5B                 	db	91
   190  00059E  53                 	db	83
   191  00059F  49                 	db	73
   192  0005A0  3F                 	db	63
   193  0005A1  35                 	db	53
   194  0005A2  2A                 	db	42
   195  0005A3  1D                 	db	29
   196  0005A4  12                 	db	18
   197  0005A5  06                 	db	6
   198                           
   199                           ;initializer for _LookUP_TABLE_COS_16
   200  0005A6  7E                 	db	126
   201  0005A7  7C                 	db	124
   202  0005A8  79                 	db	121
   203  0005A9  75                 	db	117
   204  0005AA  70                 	db	112
   205  0005AB  6A                 	db	106
   206  0005AC  63                 	db	99
   207  0005AD  5B                 	db	91
   208  0005AE  53                 	db	83
   209  0005AF  49                 	db	73
   210  0005B0  3F                 	db	63
   211  0005B1  35                 	db	53
   212  0005B2  2A                 	db	42
   213  0005B3  1D                 	db	29
   214  0005B4  12                 	db	18
   215  0005B5  06                 	db	6
   216  0005B6  06                 	db	6
   217  0005B7  12                 	db	18
   218  0005B8  1D                 	db	29
   219  0005B9  2A                 	db	42
   220  0005BA  35                 	db	53
   221  0005BB  3F                 	db	63
   222  0005BC  49                 	db	73
   223  0005BD  53                 	db	83
   224  0005BE  5B                 	db	91
   225  0005BF  63                 	db	99
   226  0005C0  6A                 	db	106
   227  0005C1  70                 	db	112
   228  0005C2  75                 	db	117
   229  0005C3  79                 	db	121
   230  0005C4  7C                 	db	124
   231  0005C5  7E                 	db	126
   232  0005C6  7E                 	db	126
   233  0005C7  7C                 	db	124
   234  0005C8  79                 	db	121
   235  0005C9  75                 	db	117
   236  0005CA  70                 	db	112
   237  0005CB  6A                 	db	106
   238  0005CC  63                 	db	99
   239  0005CD  5B                 	db	91
   240  0005CE  53                 	db	83
   241  0005CF  49                 	db	73
   242  0005D0  3F                 	db	63
   243  0005D1  35                 	db	53
   244  0005D2  2A                 	db	42
   245  0005D3  1D                 	db	29
   246  0005D4  12                 	db	18
   247  0005D5  06                 	db	6
   248  0005D6  06                 	db	6
   249  0005D7  12                 	db	18
   250  0005D8  1D                 	db	29
   251  0005D9  2A                 	db	42
   252  0005DA  35                 	db	53
   253  0005DB  3F                 	db	63
   254  0005DC  49                 	db	73
   255  0005DD  53                 	db	83
   256  0005DE  5B                 	db	91
   257  0005DF  63                 	db	99
   258  0005E0  6A                 	db	106
   259  0005E1  70                 	db	112
   260  0005E2  75                 	db	117
   261  0005E3  79                 	db	121
   262  0005E4  7C                 	db	124
   263  0005E5  7E                 	db	126
   264                           
   265                           ;initializer for _LookUP_TABLE_SEN
   266  0005E6  0C                 	db	12
   267  0005E7  22                 	db	34
   268  0005E8  39                 	db	57
   269  0005E9  4D                 	db	77
   270  0005EA  5E                 	db	94
   271  0005EB  6C                 	db	108
   272  0005EC  76                 	db	118
   273  0005ED  7D                 	db	125
   274  0005EE  7D                 	db	125
   275  0005EF  76                 	db	118
   276  0005F0  6C                 	db	108
   277  0005F1  5E                 	db	94
   278  0005F2  4D                 	db	77
   279  0005F3  39                 	db	57
   280  0005F4  22                 	db	34
   281  0005F5  0C                 	db	12
   282  0005F6  0C                 	db	12
   283  0005F7  22                 	db	34
   284  0005F8  39                 	db	57
   285  0005F9  4D                 	db	77
   286  0005FA  5E                 	db	94
   287  0005FB  6C                 	db	108
   288  0005FC  76                 	db	118
   289  0005FD  7D                 	db	125
   290  0005FE  7D                 	db	125
   291  0005FF  76                 	db	118
   292  000600  6C                 	db	108
   293  000601  5E                 	db	94
   294  000602  4D                 	db	77
   295  000603  39                 	db	57
   296  000604  22                 	db	34
   297  000605  0C                 	db	12
   298                           
   299                           	psect	nvCOMRAM
   300  00004B                     __pnvCOMRAM:
   301                           	opt stack 0
   302  00004B                     _TMR2_InterruptHandler:
   303                           	opt stack 0
   304  00004B                     	ds	2
   305  00004D                     _TMR6_InterruptHandler:
   306                           	opt stack 0
   307  00004D                     	ds	2
   308  00004F                     _EstadoActual:
   309                           	opt stack 0
   310  00004F                     	ds	1
   311  0000                     _CCPTMRS0bits	set	3913
   312  0000                     _ANSELA	set	3896
   313  0000                     _ANSELE	set	3900
   314  0000                     _ANSELD	set	3899
   315  0000                     _ANSELB	set	3897
   316  0000                     _ANSELC	set	3898
   317  0000                     _CCPR5H	set	3926
   318  0000                     _CCPR5L	set	3925
   319  0000                     _CCP5CON	set	3924
   320  0000                     _T6CONbits	set	3914
   321  0000                     _TMR6	set	3916
   322  0000                     _PR6	set	3915
   323  0000                     _T6CON	set	3914
   324  0000                     _LATCbits	set	3979
   325  0000                     _LATDbits	set	3980
   326  0000                     _LATBbits	set	3978
   327  0000                     _TXREG1	set	4013
   328  0000                     _RCREG1	set	4014
   329  0000                     _RCSTA1bits	set	4011
   330  0000                     _SPBRGH1	set	4016
   331  0000                     _SPBRG1	set	4015
   332  0000                     _TXSTA1	set	4012
   333  0000                     _RCSTA1	set	4011
   334  0000                     _BAUDCON1	set	4024
   335  0000                     _OSCTUNE	set	3995
   336  0000                     _OSCCON2	set	4050
   337  0000                     _OSCCON	set	4051
   338  0000                     _INTCONbits	set	4082
   339  0000                     _RCONbits	set	4048
   340  0000                     _ADCON0bits	set	4034
   341  0000                     _ADRESH	set	4036
   342  0000                     _ADRESL	set	4035
   343  0000                     _ADCON2	set	4032
   344  0000                     _ADCON1	set	4033
   345  0000                     _ADCON0	set	4034
   346  0000                     _CCPR1H	set	4031
   347  0000                     _CCPR1L	set	4030
   348  0000                     _PSTR1CON	set	4025
   349  0000                     _PWM1CON	set	4023
   350  0000                     _ECCP1AS	set	4022
   351  0000                     _CCP1CON	set	4029
   352  0000                     _CCPR2H	set	3944
   353  0000                     _CCPR2L	set	3943
   354  0000                     _PSTR2CON	set	3939
   355  0000                     _PWM2CON	set	3941
   356  0000                     _ECCP2AS	set	3940
   357  0000                     _CCP2CON	set	3942
   358  0000                     _INTCON2bits	set	4081
   359  0000                     _WPUB	set	3937
   360  0000                     _TRISD	set	3989
   361  0000                     _TRISC	set	3988
   362  0000                     _TRISB	set	3987
   363  0000                     _TRISA	set	3986
   364  0000                     _TRISE	set	3990
   365  0000                     _LATC	set	3979
   366  0000                     _LATB	set	3978
   367  0000                     _LATA	set	3977
   368  0000                     _LATD	set	3980
   369  0000                     _LATE	set	3981
   370  0000                     _T2CONbits	set	4026
   371  0000                     _PIE1bits	set	3997
   372  0000                     _PIR1bits	set	3998
   373  0000                     _TMR2	set	4028
   374  0000                     _PR2	set	4027
   375  0000                     _T2CON	set	4026
   376  0000                     _PIE5bits	set	3965
   377  0000                     _PIR5bits	set	3966
   378                           
   379                           ; #config settings
   380  0000                     
   381                           	psect	cinit
   382  0007FA                     __pcinit:
   383                           	opt stack 0
   384  0007FA                     start_initialization:
   385                           	opt stack 0
   386  0007FA                     __initialization:
   387                           	opt stack 0
   388                           
   389                           ; Initialize objects allocated to BANK0 (160 bytes)
   390                           ; load TBLPTR registers with __pidataBANK0
   391  0007FA  0E66               	movlw	low __pidataBANK0
   392  0007FC  6EF6               	movwf	tblptrl,c
   393  0007FE  0E05               	movlw	high __pidataBANK0
   394  000800  6EF7               	movwf	tblptrh,c
   395  000802  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   396  000804  6EF8               	movwf	tblptru,c
   397  000806  EE00  F060         	lfsr	0,__pdataBANK0
   398  00080A  EE10 F0A0          	lfsr	1,160
   399  00080E                     copy_data0:
   400  00080E  0009               	tblrd		*+
   401  000810  CFF5 FFEE          	movff	tablat,postinc0
   402  000814  50E5               	movf	postdec1,w,c
   403  000816  50E1               	movf	fsr1l,w,c
   404  000818  E1FA               	bnz	copy_data0
   405                           
   406                           ; Initialize objects allocated to COMRAM (32 bytes)
   407                           ; load TBLPTR registers with __pidataCOMRAM
   408  00081A  0EDA               	movlw	low __pidataCOMRAM
   409  00081C  6EF6               	movwf	tblptrl,c
   410  00081E  0E0A               	movlw	high __pidataCOMRAM
   411  000820  6EF7               	movwf	tblptrh,c
   412  000822  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   413  000824  6EF8               	movwf	tblptru,c
   414  000826  EE00  F001         	lfsr	0,__pdataCOMRAM
   415  00082A  EE10 F020          	lfsr	1,32
   416  00082E                     copy_data1:
   417  00082E  0009               	tblrd		*+
   418  000830  CFF5 FFEE          	movff	tablat,postinc0
   419  000834  50E5               	movf	postdec1,w,c
   420  000836  50E1               	movf	fsr1l,w,c
   421  000838  E1FA               	bnz	copy_data1
   422                           
   423                           ; Clear objects allocated to COMRAM (20 bytes)
   424  00083A  EE00  F037         	lfsr	0,__pbssCOMRAM
   425  00083E  0E14               	movlw	20
   426  000840                     clear_0:
   427  000840  6AEE               	clrf	postinc0,c
   428  000842  06E8               	decf	wreg,f,c
   429  000844  E1FD               	bnz	clear_0
   430  000846                     end_of_initialization:
   431                           	opt stack 0
   432  000846                     __end_of__initialization:
   433                           	opt stack 0
   434  000846  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   435  000848  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   436  00084A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   437  00084C  6EF8               	movwf	tblptru,c
   438  00084E  0100               	movlb	0
   439  000850  EFC6  F003         	goto	_main	;jump to C main() function
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssCOMRAM
   450  000037                     __pbssCOMRAM:
   451                           	opt stack 0
   452  000037                     _StepperMotor:
   453                           	opt stack 0
   454  000037                     	ds	5
   455  00003C                     _Timer2Tick_count:
   456                           	opt stack 0
   457  00003C                     	ds	2
   458  00003E                     _StepCount:
   459                           	opt stack 0
   460  00003E                     	ds	2
   461  000040                     _Microstep:
   462                           	opt stack 0
   463  000040                     	ds	2
   464  000042                     _ANALOG_1:
   465                           	opt stack 0
   466  000042                     	ds	2
   467  000044                     _ANALOG_0:
   468                           	opt stack 0
   469  000044                     	ds	2
   470  000046                     	ds	1
   471  000047                     _parar:
   472                           	opt stack 0
   473  000047                     	ds	1
   474  000048                     _StepsComplete:
   475                           	opt stack 0
   476  000048                     	ds	1
   477  000049                     _DelayTimerTicked:
   478                           	opt stack 0
   479  000049                     	ds	1
   480  00004A                     _Timer2Ticked:
   481                           	opt stack 0
   482  00004A                     	ds	1
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	dataCOMRAM
   493  000001                     __pdataCOMRAM:
   494                           	opt stack 0
   495  000001                     _LookUP_TABLE_COS:
   496                           	opt stack 0
   497  000001                     	ds	32
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	dataBANK0
   508  000060                     __pdataBANK0:
   509                           	opt stack 0
   510  000060                     _LookUP_TABLE_SEN_16:
   511                           	opt stack 0
   512  000060                     	ds	64
   513  0000A0                     _LookUP_TABLE_COS_16:
   514                           	opt stack 0
   515  0000A0                     	ds	64
   516  0000E0                     _LookUP_TABLE_SEN:
   517                           	opt stack 0
   518  0000E0                     	ds	32
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           postdec1	equ	0xFE5
   526                           fsr1l	equ	0xFE1
   527                           
   528                           	psect	cstackBANK1
   529  000100                     __pcstackBANK1:
   530                           	opt stack 0
   531  000100                     StepMove@StepNumber:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x0
   535  000100                     	ds	2
   536  000102                     StepMove@Velocidad:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x2
   540  000102                     	ds	1
   541  000103                     StepMove@microstep_number:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x3
   545  000103                     	ds	1
   546  000104                     StepMove@direccion:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x4
   550  000104                     	ds	1
   551  000105                     RectaAceleracion@microstep_number:
   552                           	opt stack 0
   553  000105                     RectaFrenado@microstep_number:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x5
   557  000105                     	ds	1
   558  000106                     RectaAceleracion@direccion:
   559                           	opt stack 0
   560  000106                     RectaFrenado@direccion:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x6
   564  000106                     	ds	1
   565  000107                     RectaAceleracion@velocidad:
   566                           	opt stack 0
   567  000107                     RectaFrenado@velocidad:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x7
   571  000107                     	ds	1
   572  000108                     RectaAceleracion@i:
   573                           	opt stack 0
   574  000108                     RectaFrenado@i:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x8
   578  000108                     	ds	1
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           
   588                           	psect	cstackCOMRAM
   589  000021                     __pcstackCOMRAM:
   590                           	opt stack 0
   591  000021                     ??_INTERRUPT_InterruptManager:
   592  000021                     
   593                           ; 1 bytes @ 0x0
   594  000021                     	ds	14
   595  00002F                     TMR6_SetInterruptHandler@InterruptHandler:
   596                           	opt stack 0
   597  00002F                     TMR2_SetInterruptHandler@InterruptHandler:
   598                           	opt stack 0
   599  00002F                     EPWM2_LoadDutyValue@dutyValue:
   600                           	opt stack 0
   601  00002F                     EPWM1_LoadDutyValue@dutyValue:
   602                           	opt stack 0
   603  00002F                     DelayTmr2@Timeout:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xE
   607  00002F                     	ds	2
   608  000031                     ??_EPWM2_LoadDutyValue:
   609  000031                     ??_EPWM1_LoadDutyValue:
   610  000031                     
   611                           ; 1 bytes @ 0x10
   612  000031                     	ds	2
   613  000033                     ??_State8MEF_act:
   614  000033                     ??_State16MEF_act:
   615                           
   616                           ; 1 bytes @ 0x12
   617  000033                     	ds	1
   618  000034                     State8MEF_act@direccion:
   619                           	opt stack 0
   620  000034                     State16MEF_act@direccion:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x13
   624  000034                     	ds	1
   625  000035                     ??_StepMove:
   626                           
   627                           ; 1 bytes @ 0x14
   628  000035                     	ds	2
   629  000037                     tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1l	equ	0xFE1
   637                           
   638                           ; 1 bytes @ 0x16
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 24 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels required when called:    9
   664 ;; This function calls:
   665 ;;		_DelayTmr2
   666 ;;		_Measure
   667 ;;		_Motor_Stop
   668 ;;		_SYSTEM_Initialize
   669 ;;		_StateMEF_ini
   670 ;;		_goDark
   671 ;;		_goInitMovement
   672 ;;		_goReference
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text0
   679  00078C                     __ptext0:
   680                           	opt stack 0
   681  00078C                     _main:
   682                           	opt stack 22
   683                           
   684                           ;main.c: 27: SYSTEM_Initialize();
   685                           
   686                           ;incstack = 0
   687  00078C  ECEA  F004         	call	_SYSTEM_Initialize	;wreg free
   688                           
   689                           ;main.c: 28: StateMEF_ini();
   690  000790  ECBC  F005         	call	_StateMEF_ini	;wreg free
   691                           
   692                           ;main.c: 29: Timer2Ticked=0;
   693  000794  0E00               	movlw	0
   694  000796  6E4A               	movwf	_Timer2Ticked,c	;volatile
   695                           
   696                           ;main.c: 30: DelayTimerTicked=0;
   697  000798  0E00               	movlw	0
   698  00079A  6E49               	movwf	_DelayTimerTicked,c	;volatile
   699                           
   700                           ;main.c: 31: do { LATBbits.LATB6 = 1; } while(0);
   701  00079C  8C8A               	bsf	3978,6,c	;volatile
   702                           
   703                           ;main.c: 34: StepperMotor.Velocidad = 15;
   704  00079E  0E0F               	movlw	15
   705  0007A0  6E37               	movwf	_StepperMotor,c
   706                           
   707                           ;main.c: 35: StepperMotor.StepsNumber = 100;
   708  0007A2  0E00               	movlw	0
   709  0007A4  6E3B               	movwf	_StepperMotor+4,c
   710  0007A6  0E64               	movlw	100
   711  0007A8  6E3A               	movwf	_StepperMotor+3,c
   712                           
   713                           ;main.c: 36: StepperMotor.MicroStepNumber = 16;
   714  0007AA  0E10               	movlw	16
   715  0007AC  6E38               	movwf	_StepperMotor+1,c
   716                           
   717                           ;main.c: 37: StepperMotor.Direccion = 1;
   718  0007AE  0E01               	movlw	1
   719  0007B0  6E39               	movwf	_StepperMotor+2,c
   720                           
   721                           ;main.c: 40: (INTCONbits.GIE = 1);
   722  0007B2  8EF2               	bsf	intcon,7,c	;volatile
   723                           
   724                           ;main.c: 43: (INTCONbits.PEIE = 1);
   725  0007B4  8CF2               	bsf	intcon,6,c	;volatile
   726  0007B6                     l2583:
   727                           
   728                           ;main.c: 45: {
   729                           ;main.c: 66: if (parar==0){
   730  0007B6  5047               	movf	_parar,w,c
   731  0007B8  A4D8               	btfss	status,2,c
   732  0007BA  D7FD               	goto	l2583
   733                           
   734                           ;main.c: 67: parar=1;
   735  0007BC  0E01               	movlw	1
   736  0007BE  6E47               	movwf	_parar,c
   737                           
   738                           ;main.c: 68: goDark();
   739  0007C0  ECD4  F004         	call	_goDark	;wreg free
   740                           
   741                           ;main.c: 69: DelayTmr2(19230);
   742  0007C4  0E4B               	movlw	75
   743  0007C6  6E30               	movwf	DelayTmr2@Timeout+1,c
   744  0007C8  0E1E               	movlw	30
   745  0007CA  6E2F               	movwf	DelayTmr2@Timeout,c
   746  0007CC  EC7D  F005         	call	_DelayTmr2	;wreg free
   747                           
   748                           ;main.c: 70: goReference();
   749  0007D0  ECA8  F004         	call	_goReference	;wreg free
   750                           
   751                           ;main.c: 71: DelayTmr2(19230);
   752  0007D4  0E4B               	movlw	75
   753  0007D6  6E30               	movwf	DelayTmr2@Timeout+1,c
   754  0007D8  0E1E               	movlw	30
   755  0007DA  6E2F               	movwf	DelayTmr2@Timeout,c
   756  0007DC  EC7D  F005         	call	_DelayTmr2	;wreg free
   757                           
   758                           ;main.c: 72: goInitMovement();
   759  0007E0  ECBE  F004         	call	_goInitMovement	;wreg free
   760                           
   761                           ;main.c: 73: DelayTmr2(19230);
   762  0007E4  0E4B               	movlw	75
   763  0007E6  6E30               	movwf	DelayTmr2@Timeout+1,c
   764  0007E8  0E1E               	movlw	30
   765  0007EA  6E2F               	movwf	DelayTmr2@Timeout,c
   766  0007EC  EC7D  F005         	call	_DelayTmr2	;wreg free
   767                           
   768                           ;main.c: 74: Measure();
   769  0007F0  EC2A  F004         	call	_Measure	;wreg free
   770                           
   771                           ;main.c: 75: Motor_Stop();
   772  0007F4  ECAC  F005         	call	_Motor_Stop	;wreg free
   773  0007F8  D7DE               	goto	l2583
   774  0007FA                     __end_of_main:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           intcon	equ	0xFF2
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1l	equ	0xFE1
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _goReference *****************
   788 ;; Defined at:
   789 ;;		line 36 in file "INLABPLUS_LinearMovement.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    7
   810 ;; This function calls:
   811 ;;		_StateMEF_ini
   812 ;;		_StepMove
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text1
   819  000950                     __ptext1:
   820                           	opt stack 0
   821  000950                     _goReference:
   822                           	opt stack 23
   823  000950                     l2543:
   824  000950  0E01               	movlw	1
   825  000952  0101               	movlb	1	; () banked
   826  000954  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
   827  000956  0EC2               	movlw	194
   828  000958  6F00               	movwf	StepMove@StepNumber& (0+255),b
   829  00095A  0E0E               	movlw	14
   830  00095C  0101               	movlb	1	; () banked
   831  00095E  6F02               	movwf	StepMove@Velocidad& (0+255),b
   832  000960  0E08               	movlw	8
   833  000962  0101               	movlb	1	; () banked
   834  000964  6F03               	movwf	StepMove@microstep_number& (0+255),b
   835  000966  0E01               	movlw	1
   836  000968  0101               	movlb	1	; () banked
   837  00096A  6F04               	movwf	StepMove@direccion& (0+255),b
   838  00096C  EC8D  F003         	call	_StepMove	;wreg free
   839  000970  0900               	iorlw	0
   840  000972  B4D8               	btfsc	status,2,c
   841  000974  D7ED               	goto	l2543
   842                           
   843                           ;INLABPLUS_LinearMovement.c: 38: StateMEF_ini();
   844  000976  ECBC  F005         	call	_StateMEF_ini	;wreg free
   845  00097A  0012               	return		;funcret
   846  00097C                     __end_of_goReference:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           intcon	equ	0xFF2
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           postdec1	equ	0xFE5
   856                           fsr1l	equ	0xFE1
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _goInitMovement *****************
   860 ;; Defined at:
   861 ;;		line 41 in file "INLABPLUS_LinearMovement.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    7
   882 ;; This function calls:
   883 ;;		_StateMEF_ini
   884 ;;		_StepMove
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  00097C                     __ptext2:
   892                           	opt stack 0
   893  00097C                     _goInitMovement:
   894                           	opt stack 23
   895  00097C                     l2549:
   896  00097C  0E01               	movlw	1
   897  00097E  0101               	movlb	1	; () banked
   898  000980  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
   899  000982  0EC2               	movlw	194
   900  000984  6F00               	movwf	StepMove@StepNumber& (0+255),b
   901  000986  0E0E               	movlw	14
   902  000988  0101               	movlb	1	; () banked
   903  00098A  6F02               	movwf	StepMove@Velocidad& (0+255),b
   904  00098C  0E08               	movlw	8
   905  00098E  0101               	movlb	1	; () banked
   906  000990  6F03               	movwf	StepMove@microstep_number& (0+255),b
   907  000992  0E01               	movlw	1
   908  000994  0101               	movlb	1	; () banked
   909  000996  6F04               	movwf	StepMove@direccion& (0+255),b
   910  000998  EC8D  F003         	call	_StepMove	;wreg free
   911  00099C  0900               	iorlw	0
   912  00099E  B4D8               	btfsc	status,2,c
   913  0009A0  D7ED               	goto	l2549
   914                           
   915                           ;INLABPLUS_LinearMovement.c: 43: StateMEF_ini();
   916  0009A2  ECBC  F005         	call	_StateMEF_ini	;wreg free
   917  0009A6  0012               	return		;funcret
   918  0009A8                     __end_of_goInitMovement:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           intcon	equ	0xFF2
   925                           postinc0	equ	0xFEE
   926                           wreg	equ	0xFE8
   927                           postdec1	equ	0xFE5
   928                           fsr1l	equ	0xFE1
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _goDark *****************
   932 ;; Defined at:
   933 ;;		line 31 in file "INLABPLUS_LinearMovement.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    7
   954 ;; This function calls:
   955 ;;		_StateMEF_ini
   956 ;;		_StepMove
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text3
   963  0009A8                     __ptext3:
   964                           	opt stack 0
   965  0009A8                     _goDark:
   966                           	opt stack 23
   967  0009A8                     l2537:
   968  0009A8  0E00               	movlw	0
   969  0009AA  0101               	movlb	1	; () banked
   970  0009AC  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
   971  0009AE  0E32               	movlw	50
   972  0009B0  6F00               	movwf	StepMove@StepNumber& (0+255),b
   973  0009B2  0E0E               	movlw	14
   974  0009B4  0101               	movlb	1	; () banked
   975  0009B6  6F02               	movwf	StepMove@Velocidad& (0+255),b
   976  0009B8  0E08               	movlw	8
   977  0009BA  0101               	movlb	1	; () banked
   978  0009BC  6F03               	movwf	StepMove@microstep_number& (0+255),b
   979  0009BE  0E01               	movlw	1
   980  0009C0  0101               	movlb	1	; () banked
   981  0009C2  6F04               	movwf	StepMove@direccion& (0+255),b
   982  0009C4  EC8D  F003         	call	_StepMove	;wreg free
   983  0009C8  0900               	iorlw	0
   984  0009CA  B4D8               	btfsc	status,2,c
   985  0009CC  D7ED               	goto	l2537
   986                           
   987                           ;INLABPLUS_LinearMovement.c: 33: StateMEF_ini();
   988  0009CE  ECBC  F005         	call	_StateMEF_ini	;wreg free
   989  0009D2  0012               	return		;funcret
   990  0009D4                     __end_of_goDark:
   991                           	opt stack 0
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           intcon	equ	0xFF2
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           postdec1	equ	0xFE5
  1000                           fsr1l	equ	0xFE1
  1001                           status	equ	0xFD8
  1002                           
  1003 ;; *************** function _SYSTEM_Initialize *****************
  1004 ;; Defined at:
  1005 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    6
  1026 ;; This function calls:
  1027 ;;		_ADC_Initialize
  1028 ;;		_CCP5_Initialize
  1029 ;;		_EPWM1_Initialize
  1030 ;;		_EPWM2_Initialize
  1031 ;;		_EUSART1_Initialize
  1032 ;;		_INTERRUPT_Initialize
  1033 ;;		_OSCILLATOR_Initialize
  1034 ;;		_PIN_MANAGER_Initialize
  1035 ;;		_TMR2_Initialize
  1036 ;;		_TMR6_Initialize
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text4
  1043  0009D4                     __ptext4:
  1044                           	opt stack 0
  1045  0009D4                     _SYSTEM_Initialize:
  1046                           	opt stack 24
  1047                           
  1048                           ;mcc.c: 114: INTERRUPT_Initialize();
  1049                           
  1050                           ;incstack = 0
  1051  0009D4  ECD6  F005         	call	_INTERRUPT_Initialize	;wreg free
  1052                           
  1053                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1054  0009D8  EC52  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1055                           
  1056                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1057  0009DC  ECB5  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1058                           
  1059                           ;mcc.c: 117: TMR6_Initialize();
  1060  0009E0  ECFF  F004         	call	_TMR6_Initialize	;wreg free
  1061                           
  1062                           ;mcc.c: 118: EPWM2_Initialize();
  1063  0009E4  EC27  F005         	call	_EPWM2_Initialize	;wreg free
  1064                           
  1065                           ;mcc.c: 119: CCP5_Initialize();
  1066  0009E8  ECA2  F005         	call	_CCP5_Initialize	;wreg free
  1067                           
  1068                           ;mcc.c: 120: ADC_Initialize();
  1069  0009EC  EC8B  F005         	call	_ADC_Initialize	;wreg free
  1070                           
  1071                           ;mcc.c: 121: EPWM1_Initialize();
  1072  0009F0  EC39  F005         	call	_EPWM1_Initialize	;wreg free
  1073                           
  1074                           ;mcc.c: 122: TMR2_Initialize();
  1075  0009F4  EC4B  F005         	call	_TMR2_Initialize	;wreg free
  1076                           
  1077                           ;mcc.c: 123: EUSART1_Initialize();
  1078  0009F8  EC97  F005         	call	_EUSART1_Initialize	;wreg free
  1079  0009FC  0012               	return		;funcret
  1080  0009FE                     __end_of_SYSTEM_Initialize:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           intcon	equ	0xFF2
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1l	equ	0xFE1
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _TMR6_Initialize *****************
  1094 ;; Defined at:
  1095 ;;		line 63 in file "mcc_generated_files/tmr6.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    5
  1116 ;; This function calls:
  1117 ;;		_TMR6_SetInterruptHandler
  1118 ;;		_TMR6_StartTimer
  1119 ;; This function is called by:
  1120 ;;		_SYSTEM_Initialize
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125  0009FE                     __ptext5:
  1126                           	opt stack 0
  1127  0009FE                     _TMR6_Initialize:
  1128                           	opt stack 24
  1129                           
  1130                           ;tmr6.c: 68: T6CON = 0x01;
  1131                           
  1132                           ;incstack = 0
  1133  0009FE  0E01               	movlw	1
  1134  000A00  010F               	movlb	15	; () banked
  1135  000A02  6F4A               	movwf	74,b	;volatile
  1136                           
  1137                           ;tmr6.c: 71: PR6 = 0x45;
  1138  000A04  0E45               	movlw	69
  1139  000A06  010F               	movlb	15	; () banked
  1140  000A08  6F4B               	movwf	75,b	;volatile
  1141                           
  1142                           ;tmr6.c: 74: TMR6 = 0x00;
  1143  000A0A  0E00               	movlw	0
  1144  000A0C  010F               	movlb	15	; () banked
  1145  000A0E  6F4C               	movwf	76,b	;volatile
  1146                           
  1147                           ; BSR set to: 15
  1148                           ;tmr6.c: 77: PIR5bits.TMR6IF = 0;
  1149  000A10  947E               	bcf	3966,2,c	;volatile
  1150                           
  1151                           ; BSR set to: 15
  1152                           ;tmr6.c: 80: PIE5bits.TMR6IE = 1;
  1153  000A12  847D               	bsf	3965,2,c	;volatile
  1154                           
  1155                           ; BSR set to: 15
  1156                           ;tmr6.c: 83: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  1157  000A14  0EB4               	movlw	low _TMR6_DefaultInterruptHandler
  1158  000A16  6E2F               	movwf	TMR6_SetInterruptHandler@InterruptHandler,c
  1159  000A18  0E0B               	movlw	high _TMR6_DefaultInterruptHandler
  1160  000A1A  6E30               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1,c
  1161  000A1C  ECC3  F005         	call	_TMR6_SetInterruptHandler	;wreg free
  1162                           
  1163                           ;tmr6.c: 86: TMR6_StartTimer();
  1164  000A20  ECD1  F005         	call	_TMR6_StartTimer	;wreg free
  1165  000A24  0012               	return		;funcret
  1166  000A26                     __end_of_TMR6_Initialize:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           intcon	equ	0xFF2
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           postdec1	equ	0xFE5
  1176                           fsr1l	equ	0xFE1
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _TMR6_StartTimer *****************
  1180 ;; Defined at:
  1181 ;;		line 89 in file "mcc_generated_files/tmr6.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		None
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    4
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_TMR6_Initialize
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text6
  1210  000BA2                     __ptext6:
  1211                           	opt stack 0
  1212  000BA2                     _TMR6_StartTimer:
  1213                           	opt stack 24
  1214                           
  1215                           ;tmr6.c: 92: T6CONbits.TMR6ON = 1;
  1216                           
  1217                           ;incstack = 0
  1218  000BA2  010F               	movlb	15	; () banked
  1219  000BA4  854A               	bsf	74,2,b	;volatile
  1220                           
  1221                           ; BSR set to: 15
  1222  000BA6  0012               	return		;funcret
  1223  000BA8                     __end_of_TMR6_StartTimer:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           intcon	equ	0xFF2
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           postdec1	equ	0xFE5
  1233                           fsr1l	equ	0xFE1
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function _TMR6_SetInterruptHandler *****************
  1237 ;; Defined at:
  1238 ;;		line 134 in file "mcc_generated_files/tmr6.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1241 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        2 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    4
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_TMR6_Initialize
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text7
  1268  000B86                     __ptext7:
  1269                           	opt stack 0
  1270  000B86                     _TMR6_SetInterruptHandler:
  1271                           	opt stack 24
  1272                           
  1273                           ;tmr6.c: 135: TMR6_InterruptHandler = InterruptHandler;
  1274                           
  1275                           ; BSR set to: 15
  1276                           ;incstack = 0
  1277  000B86  C02F  F04D         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  1278  000B8A  C030  F04E         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  1279  000B8E  0012               	return		;funcret
  1280  000B90                     __end_of_TMR6_SetInterruptHandler:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           intcon	equ	0xFF2
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           fsr1l	equ	0xFE1
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _TMR2_Initialize *****************
  1294 ;; Defined at:
  1295 ;;		line 68 in file "mcc_generated_files/tmr2.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    5
  1316 ;; This function calls:
  1317 ;;		_TMR2_SetInterruptHandler
  1318 ;;		_TMR2_StartTimer
  1319 ;; This function is called by:
  1320 ;;		_SYSTEM_Initialize
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text8
  1325  000A96                     __ptext8:
  1326                           	opt stack 0
  1327  000A96                     _TMR2_Initialize:
  1328                           	opt stack 24
  1329                           
  1330                           ;tmr2.c: 73: T2CON = 0x02;
  1331                           
  1332                           ;incstack = 0
  1333  000A96  0E02               	movlw	2
  1334  000A98  6EBA               	movwf	4026,c	;volatile
  1335                           
  1336                           ;tmr2.c: 76: PR2 = 0x0C;
  1337  000A9A  0E0C               	movlw	12
  1338  000A9C  6EBB               	movwf	4027,c	;volatile
  1339                           
  1340                           ;tmr2.c: 79: TMR2 = 0x00;
  1341  000A9E  0E00               	movlw	0
  1342  000AA0  6EBC               	movwf	4028,c	;volatile
  1343                           
  1344                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
  1345  000AA2  929E               	bcf	3998,1,c	;volatile
  1346                           
  1347                           ;tmr2.c: 85: PIE1bits.TMR2IE = 1;
  1348  000AA4  829D               	bsf	3997,1,c	;volatile
  1349                           
  1350                           ;tmr2.c: 88: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  1351  000AA6  0EB6               	movlw	low _TMR2_DefaultInterruptHandler
  1352  000AA8  6E2F               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1353  000AAA  0E0B               	movlw	high _TMR2_DefaultInterruptHandler
  1354  000AAC  6E30               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1355  000AAE  ECC8  F005         	call	_TMR2_SetInterruptHandler	;wreg free
  1356                           
  1357                           ;tmr2.c: 91: TMR2_StartTimer();
  1358  000AB2  ECD4  F005         	call	_TMR2_StartTimer	;wreg free
  1359  000AB6  0012               	return		;funcret
  1360  000AB8                     __end_of_TMR2_Initialize:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           intcon	equ	0xFF2
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           postdec1	equ	0xFE5
  1370                           fsr1l	equ	0xFE1
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _TMR2_StartTimer *****************
  1374 ;; Defined at:
  1375 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		None
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    4
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_TMR2_Initialize
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text9
  1404  000BA8                     __ptext9:
  1405                           	opt stack 0
  1406  000BA8                     _TMR2_StartTimer:
  1407                           	opt stack 24
  1408                           
  1409                           ;tmr2.c: 97: T2CONbits.TMR2ON = 1;
  1410                           
  1411                           ;incstack = 0
  1412  000BA8  84BA               	bsf	4026,2,c	;volatile
  1413  000BAA  0012               	return		;funcret
  1414  000BAC                     __end_of_TMR2_StartTimer:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _TMR2_SetInterruptHandler *****************
  1428 ;; Defined at:
  1429 ;;		line 150 in file "mcc_generated_files/tmr2.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  InterruptHan    2   14[COMRAM] PTR void 
  1432 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_TMR2_Initialize
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text10
  1459  000B90                     __ptext10:
  1460                           	opt stack 0
  1461  000B90                     _TMR2_SetInterruptHandler:
  1462                           	opt stack 24
  1463                           
  1464                           ;tmr2.c: 151: TMR2_InterruptHandler = InterruptHandler;
  1465                           
  1466                           ;incstack = 0
  1467  000B90  C02F  F04B         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1468  000B94  C030  F04C         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1469  000B98  0012               	return		;funcret
  1470  000B9A                     __end_of_TMR2_SetInterruptHandler:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           intcon	equ	0xFF2
  1477                           postinc0	equ	0xFEE
  1478                           wreg	equ	0xFE8
  1479                           postdec1	equ	0xFE5
  1480                           fsr1l	equ	0xFE1
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _PIN_MANAGER_Initialize *****************
  1484 ;; Defined at:
  1485 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    4
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_SYSTEM_Initialize
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text11
  1514  0008A4                     __ptext11:
  1515                           	opt stack 0
  1516  0008A4                     _PIN_MANAGER_Initialize:
  1517                           	opt stack 25
  1518                           
  1519                           ;pin_manager.c: 56: LATE = 0x00;
  1520                           
  1521                           ;incstack = 0
  1522  0008A4  0E00               	movlw	0
  1523  0008A6  6E8D               	movwf	3981,c	;volatile
  1524                           
  1525                           ;pin_manager.c: 57: LATD = 0x00;
  1526  0008A8  0E00               	movlw	0
  1527  0008AA  6E8C               	movwf	3980,c	;volatile
  1528                           
  1529                           ;pin_manager.c: 58: LATA = 0x00;
  1530  0008AC  0E00               	movlw	0
  1531  0008AE  6E89               	movwf	3977,c	;volatile
  1532                           
  1533                           ;pin_manager.c: 59: LATB = 0x00;
  1534  0008B0  0E00               	movlw	0
  1535  0008B2  6E8A               	movwf	3978,c	;volatile
  1536                           
  1537                           ;pin_manager.c: 60: LATC = 0x00;
  1538  0008B4  0E00               	movlw	0
  1539  0008B6  6E8B               	movwf	3979,c	;volatile
  1540                           
  1541                           ;pin_manager.c: 65: TRISE = 0x07;
  1542  0008B8  0E07               	movlw	7
  1543  0008BA  6E96               	movwf	3990,c	;volatile
  1544                           
  1545                           ;pin_manager.c: 66: TRISA = 0xEB;
  1546  0008BC  0EEB               	movlw	235
  1547  0008BE  6E92               	movwf	3986,c	;volatile
  1548                           
  1549                           ;pin_manager.c: 67: TRISB = 0xBF;
  1550  0008C0  0EBF               	movlw	191
  1551  0008C2  6E93               	movwf	3987,c	;volatile
  1552                           
  1553                           ;pin_manager.c: 68: TRISC = 0xB8;
  1554  0008C4  0EB8               	movlw	184
  1555  0008C6  6E94               	movwf	3988,c	;volatile
  1556                           
  1557                           ;pin_manager.c: 69: TRISD = 0xDF;
  1558  0008C8  0EDF               	movlw	223
  1559  0008CA  6E95               	movwf	3989,c	;volatile
  1560                           
  1561                           ;pin_manager.c: 74: ANSELC = 0x38;
  1562  0008CC  0E38               	movlw	56
  1563  0008CE  010F               	movlb	15	; () banked
  1564  0008D0  6F3A               	movwf	58,b	;volatile
  1565                           
  1566                           ;pin_manager.c: 75: ANSELB = 0x3E;
  1567  0008D2  0E3E               	movlw	62
  1568  0008D4  010F               	movlb	15	; () banked
  1569  0008D6  6F39               	movwf	57,b	;volatile
  1570                           
  1571                           ;pin_manager.c: 76: ANSELD = 0xDF;
  1572  0008D8  0EDF               	movlw	223
  1573  0008DA  010F               	movlb	15	; () banked
  1574  0008DC  6F3B               	movwf	59,b	;volatile
  1575                           
  1576                           ;pin_manager.c: 77: ANSELE = 0x03;
  1577  0008DE  0E03               	movlw	3
  1578  0008E0  010F               	movlb	15	; () banked
  1579  0008E2  6F3C               	movwf	60,b	;volatile
  1580                           
  1581                           ;pin_manager.c: 78: ANSELA = 0x2B;
  1582  0008E4  0E2B               	movlw	43
  1583  0008E6  010F               	movlb	15	; () banked
  1584  0008E8  6F38               	movwf	56,b	;volatile
  1585                           
  1586                           ; BSR set to: 15
  1587                           ;pin_manager.c: 83: WPUB = 0xFF;
  1588  0008EA  6861               	setf	3937,c	;volatile
  1589                           
  1590                           ; BSR set to: 15
  1591                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1592  0008EC  9EF1               	bcf	intcon2,7,c	;volatile
  1593                           
  1594                           ; BSR set to: 15
  1595  0008EE  0012               	return		;funcret
  1596  0008F0                     __end_of_PIN_MANAGER_Initialize:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           intcon	equ	0xFF2
  1603                           intcon2	equ	0xFF1
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1l	equ	0xFE1
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _OSCILLATOR_Initialize *****************
  1611 ;; Defined at:
  1612 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    4
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_SYSTEM_Initialize
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text12
  1641  000B6A                     __ptext12:
  1642                           	opt stack 0
  1643  000B6A                     _OSCILLATOR_Initialize:
  1644                           	opt stack 25
  1645                           
  1646                           ;mcc.c: 129: OSCCON = 0x70;
  1647                           
  1648                           ; BSR set to: 15
  1649                           ;incstack = 0
  1650  000B6A  0E70               	movlw	112
  1651  000B6C  6ED3               	movwf	4051,c	;volatile
  1652                           
  1653                           ;mcc.c: 131: OSCCON2 = 0x04;
  1654  000B6E  0E04               	movlw	4
  1655  000B70  6ED2               	movwf	4050,c	;volatile
  1656                           
  1657                           ;mcc.c: 133: OSCTUNE = 0x00;
  1658  000B72  0E00               	movlw	0
  1659  000B74  6E9B               	movwf	3995,c	;volatile
  1660  000B76  0012               	return		;funcret
  1661  000B78                     __end_of_OSCILLATOR_Initialize:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           intcon	equ	0xFF2
  1668                           intcon2	equ	0xFF1
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _INTERRUPT_Initialize *****************
  1676 ;; Defined at:
  1677 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		None
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    4
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_SYSTEM_Initialize
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text13
  1706  000BAC                     __ptext13:
  1707                           	opt stack 0
  1708  000BAC                     _INTERRUPT_Initialize:
  1709                           	opt stack 25
  1710                           
  1711                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1712                           
  1713                           ;incstack = 0
  1714  000BAC  9ED0               	bcf	4048,7,c	;volatile
  1715  000BAE  0012               	return		;funcret
  1716  000BB0                     __end_of_INTERRUPT_Initialize:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           intcon	equ	0xFF2
  1723                           intcon2	equ	0xFF1
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _EUSART1_Initialize *****************
  1731 ;; Defined at:
  1732 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    4
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_SYSTEM_Initialize
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text14
  1761  000B2E                     __ptext14:
  1762                           	opt stack 0
  1763  000B2E                     _EUSART1_Initialize:
  1764                           	opt stack 25
  1765                           
  1766                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1767                           
  1768                           ;incstack = 0
  1769  000B2E  0E08               	movlw	8
  1770  000B30  6EB8               	movwf	4024,c	;volatile
  1771                           
  1772                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1773  000B32  0E90               	movlw	144
  1774  000B34  6EAB               	movwf	4011,c	;volatile
  1775                           
  1776                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1777  000B36  0E24               	movlw	36
  1778  000B38  6EAC               	movwf	4012,c	;volatile
  1779                           
  1780                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1781  000B3A  0EA0               	movlw	160
  1782  000B3C  6EAF               	movwf	4015,c	;volatile
  1783                           
  1784                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1785  000B3E  0E01               	movlw	1
  1786  000B40  6EB0               	movwf	4016,c	;volatile
  1787  000B42  0012               	return		;funcret
  1788  000B44                     __end_of_EUSART1_Initialize:
  1789                           	opt stack 0
  1790                           tblptru	equ	0xFF8
  1791                           tblptrh	equ	0xFF7
  1792                           tblptrl	equ	0xFF6
  1793                           tablat	equ	0xFF5
  1794                           intcon	equ	0xFF2
  1795                           intcon2	equ	0xFF1
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           postdec1	equ	0xFE5
  1799                           fsr1l	equ	0xFE1
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _EPWM2_Initialize *****************
  1803 ;; Defined at:
  1804 ;;		line 63 in file "mcc_generated_files/epwm2.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    4
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_SYSTEM_Initialize
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text15
  1833  000A4E                     __ptext15:
  1834                           	opt stack 0
  1835  000A4E                     _EPWM2_Initialize:
  1836                           	opt stack 25
  1837                           
  1838                           ;epwm2.c: 68: CCP2CON = 0x3C;
  1839                           
  1840                           ;incstack = 0
  1841  000A4E  0E3C               	movlw	60
  1842  000A50  6E66               	movwf	3942,c	;volatile
  1843                           
  1844                           ;epwm2.c: 71: ECCP2AS = 0x00;
  1845  000A52  0E00               	movlw	0
  1846  000A54  6E64               	movwf	3940,c	;volatile
  1847                           
  1848                           ;epwm2.c: 74: PWM2CON = 0x80;
  1849  000A56  0E80               	movlw	128
  1850  000A58  6E65               	movwf	3941,c	;volatile
  1851                           
  1852                           ;epwm2.c: 77: PSTR2CON = 0x03;
  1853  000A5A  0E03               	movlw	3
  1854  000A5C  6E63               	movwf	3939,c	;volatile
  1855                           
  1856                           ;epwm2.c: 80: CCPR2L = 0x14;
  1857  000A5E  0E14               	movlw	20
  1858  000A60  6E67               	movwf	3943,c	;volatile
  1859                           
  1860                           ;epwm2.c: 83: CCPR2H = 0x00;
  1861  000A62  0E00               	movlw	0
  1862  000A64  6E68               	movwf	3944,c	;volatile
  1863                           
  1864                           ;epwm2.c: 87: CCPTMRS0bits.C2TSEL = 0x2;
  1865  000A66  010F               	movlb	15	; () banked
  1866  000A68  5149               	movf	73,w,b	;volatile
  1867  000A6A  0BE7               	andlw	-25
  1868  000A6C  0910               	iorlw	16
  1869  000A6E  6F49               	movwf	73,b	;volatile
  1870                           
  1871                           ; BSR set to: 15
  1872  000A70  0012               	return		;funcret
  1873  000A72                     __end_of_EPWM2_Initialize:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           intcon	equ	0xFF2
  1880                           intcon2	equ	0xFF1
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           status	equ	0xFD8
  1886                           
  1887 ;; *************** function _EPWM1_Initialize *****************
  1888 ;; Defined at:
  1889 ;;		line 63 in file "mcc_generated_files/epwm1.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_SYSTEM_Initialize
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text16
  1918  000A72                     __ptext16:
  1919                           	opt stack 0
  1920  000A72                     _EPWM1_Initialize:
  1921                           	opt stack 25
  1922                           
  1923                           ;epwm1.c: 68: CCP1CON = 0x3C;
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;incstack = 0
  1927  000A72  0E3C               	movlw	60
  1928  000A74  6EBD               	movwf	4029,c	;volatile
  1929                           
  1930                           ;epwm1.c: 71: ECCP1AS = 0x00;
  1931  000A76  0E00               	movlw	0
  1932  000A78  6EB6               	movwf	4022,c	;volatile
  1933                           
  1934                           ;epwm1.c: 74: PWM1CON = 0x80;
  1935  000A7A  0E80               	movlw	128
  1936  000A7C  6EB7               	movwf	4023,c	;volatile
  1937                           
  1938                           ;epwm1.c: 77: PSTR1CON = 0x03;
  1939  000A7E  0E03               	movlw	3
  1940  000A80  6EB9               	movwf	4025,c	;volatile
  1941                           
  1942                           ;epwm1.c: 80: CCPR1L = 0x14;
  1943  000A82  0E14               	movlw	20
  1944  000A84  6EBE               	movwf	4030,c	;volatile
  1945                           
  1946                           ;epwm1.c: 83: CCPR1H = 0x00;
  1947  000A86  0E00               	movlw	0
  1948  000A88  6EBF               	movwf	4031,c	;volatile
  1949                           
  1950                           ;epwm1.c: 87: CCPTMRS0bits.C1TSEL = 0x2;
  1951  000A8A  010F               	movlb	15	; () banked
  1952  000A8C  5149               	movf	73,w,b	;volatile
  1953  000A8E  0BFC               	andlw	-4
  1954  000A90  0902               	iorlw	2
  1955  000A92  6F49               	movwf	73,b	;volatile
  1956                           
  1957                           ; BSR set to: 15
  1958  000A94  0012               	return		;funcret
  1959  000A96                     __end_of_EPWM1_Initialize:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           intcon	equ	0xFF2
  1966                           intcon2	equ	0xFF1
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           postdec1	equ	0xFE5
  1970                           fsr1l	equ	0xFE1
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _CCP5_Initialize *****************
  1974 ;; Defined at:
  1975 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    4
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_SYSTEM_Initialize
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text17
  2004  000B44                     __ptext17:
  2005                           	opt stack 0
  2006  000B44                     _CCP5_Initialize:
  2007                           	opt stack 25
  2008                           
  2009                           ;ccp5.c: 60: CCP5CON = 0x00;
  2010                           
  2011                           ; BSR set to: 15
  2012                           ;incstack = 0
  2013  000B44  0E00               	movlw	0
  2014  000B46  010F               	movlb	15	; () banked
  2015  000B48  6F54               	movwf	84,b	;volatile
  2016                           
  2017                           ;ccp5.c: 62: CCPR5L = 0x00;
  2018  000B4A  0E00               	movlw	0
  2019  000B4C  010F               	movlb	15	; () banked
  2020  000B4E  6F55               	movwf	85,b	;volatile
  2021                           
  2022                           ;ccp5.c: 64: CCPR5H = 0x00;
  2023  000B50  0E00               	movlw	0
  2024  000B52  010F               	movlb	15	; () banked
  2025  000B54  6F56               	movwf	86,b	;volatile
  2026                           
  2027                           ; BSR set to: 15
  2028  000B56  0012               	return		;funcret
  2029  000B58                     __end_of_CCP5_Initialize:
  2030                           	opt stack 0
  2031                           tblptru	equ	0xFF8
  2032                           tblptrh	equ	0xFF7
  2033                           tblptrl	equ	0xFF6
  2034                           tablat	equ	0xFF5
  2035                           intcon	equ	0xFF2
  2036                           intcon2	equ	0xFF1
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           fsr1l	equ	0xFE1
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _ADC_Initialize *****************
  2044 ;; Defined at:
  2045 ;;		line 61 in file "mcc_generated_files/adc.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    4
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_SYSTEM_Initialize
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text18
  2074  000B16                     __ptext18:
  2075                           	opt stack 0
  2076  000B16                     _ADC_Initialize:
  2077                           	opt stack 25
  2078                           
  2079                           ;adc.c: 66: ADCON0 = 0x01;
  2080                           
  2081                           ; BSR set to: 15
  2082                           ;incstack = 0
  2083  000B16  0E01               	movlw	1
  2084  000B18  6EC2               	movwf	4034,c	;volatile
  2085                           
  2086                           ;adc.c: 69: ADCON1 = 0x00;
  2087  000B1A  0E00               	movlw	0
  2088  000B1C  6EC1               	movwf	4033,c	;volatile
  2089                           
  2090                           ;adc.c: 72: ADCON2 = 0x05;
  2091  000B1E  0E05               	movlw	5
  2092  000B20  6EC0               	movwf	4032,c	;volatile
  2093                           
  2094                           ;adc.c: 75: ADRESL = 0x00;
  2095  000B22  0E00               	movlw	0
  2096  000B24  6EC3               	movwf	4035,c	;volatile
  2097                           
  2098                           ;adc.c: 78: ADRESH = 0x00;
  2099  000B26  0E00               	movlw	0
  2100  000B28  6EC4               	movwf	4036,c	;volatile
  2101                           
  2102                           ;adc.c: 81: PIE1bits.ADIE = 1;
  2103  000B2A  8C9D               	bsf	3997,6,c	;volatile
  2104  000B2C  0012               	return		;funcret
  2105  000B2E                     __end_of_ADC_Initialize:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           intcon	equ	0xFF2
  2112                           intcon2	equ	0xFF1
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _Motor_Stop *****************
  2120 ;; Defined at:
  2121 ;;		line 325 in file "MotorDriver.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text19
  2150  000B58                     __ptext19:
  2151                           	opt stack 0
  2152  000B58                     _Motor_Stop:
  2153                           	opt stack 26
  2154                           
  2155                           ;MotorDriver.c: 326: PSTR1CON = 0x00; PSTR2CON = 0x00;
  2156                           
  2157                           ;incstack = 0
  2158  000B58  0E00               	movlw	0
  2159  000B5A  6EB9               	movwf	4025,c	;volatile
  2160  000B5C  0E00               	movlw	0
  2161  000B5E  6E63               	movwf	3939,c	;volatile
  2162                           
  2163                           ;MotorDriver.c: 327: do { LATCbits.LATC2 = 0; } while(0); do { LATDbits.LATD5 = 0; } whi
      +                          le(0);do { LATCbits.LATC1 = 0; } while(0); do { LATCbits.LATC0 = 0; } while(0);
  2164  000B60  948B               	bcf	3979,2,c	;volatile
  2165  000B62  9A8C               	bcf	3980,5,c	;volatile
  2166  000B64  928B               	bcf	3979,1,c	;volatile
  2167  000B66  908B               	bcf	3979,0,c	;volatile
  2168  000B68  0012               	return	
  2169  000B6A                     __end_of_Motor_Stop:
  2170                           	opt stack 0
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           intcon	equ	0xFF2
  2176                           intcon2	equ	0xFF1
  2177                           postinc0	equ	0xFEE
  2178                           wreg	equ	0xFE8
  2179                           postdec1	equ	0xFE5
  2180                           fsr1l	equ	0xFE1
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _Measure *****************
  2184 ;; Defined at:
  2185 ;;		line 46 in file "INLABPLUS_LinearMovement.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    8
  2206 ;; This function calls:
  2207 ;;		_RectaAceleracion
  2208 ;;		_RectaFrenado
  2209 ;;		_StateMEF_ini
  2210 ;;		_StepMove
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text20
  2217  000854                     __ptext20:
  2218                           	opt stack 0
  2219  000854                     _Measure:
  2220                           	opt stack 22
  2221                           
  2222                           ;INLABPLUS_LinearMovement.c: 47: RectaAceleracion( 14 , 8 , 1 );
  2223                           
  2224                           ;incstack = 0
  2225  000854  0E08               	movlw	8
  2226  000856  0101               	movlb	1	; () banked
  2227  000858  6F05               	movwf	RectaAceleracion@microstep_number& (0+255),b
  2228  00085A  0E01               	movlw	1
  2229  00085C  0101               	movlb	1	; () banked
  2230  00085E  6F06               	movwf	RectaAceleracion@direccion& (0+255),b
  2231  000860  0E0E               	movlw	14
  2232  000862  EC03  F003         	call	_RectaAceleracion
  2233  000866                     l2555:
  2234  000866  0E0C               	movlw	12
  2235  000868  0101               	movlb	1	; () banked
  2236  00086A  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2237  00086C  0EE4               	movlw	228
  2238  00086E  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2239  000870  0E0E               	movlw	14
  2240  000872  0101               	movlb	1	; () banked
  2241  000874  6F02               	movwf	StepMove@Velocidad& (0+255),b
  2242  000876  0E08               	movlw	8
  2243  000878  0101               	movlb	1	; () banked
  2244  00087A  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2245  00087C  0E01               	movlw	1
  2246  00087E  0101               	movlb	1	; () banked
  2247  000880  6F04               	movwf	StepMove@direccion& (0+255),b
  2248  000882  EC8D  F003         	call	_StepMove	;wreg free
  2249  000886  0900               	iorlw	0
  2250  000888  B4D8               	btfsc	status,2,c
  2251  00088A  D7ED               	goto	l2555
  2252                           
  2253                           ;INLABPLUS_LinearMovement.c: 49: RectaFrenado( 14 , 8 , 1);
  2254  00088C  0E08               	movlw	8
  2255  00088E  0101               	movlb	1	; () banked
  2256  000890  6F05               	movwf	RectaFrenado@microstep_number& (0+255),b
  2257  000892  0E01               	movlw	1
  2258  000894  0101               	movlb	1	; () banked
  2259  000896  6F06               	movwf	RectaFrenado@direccion& (0+255),b
  2260  000898  0E0E               	movlw	14
  2261  00089A  EC4B  F003         	call	_RectaFrenado
  2262                           
  2263                           ;INLABPLUS_LinearMovement.c: 50: StateMEF_ini();
  2264  00089E  ECBC  F005         	call	_StateMEF_ini	;wreg free
  2265  0008A2  0012               	return		;funcret
  2266  0008A4                     __end_of_Measure:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           intcon	equ	0xFF2
  2273                           intcon2	equ	0xFF1
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _StateMEF_ini *****************
  2281 ;; Defined at:
  2282 ;;		line 62 in file "MotorDriver.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    4
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;;		_goDark
  2308 ;;		_goReference
  2309 ;;		_goInitMovement
  2310 ;;		_Measure
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text21
  2315  000B78                     __ptext21:
  2316                           	opt stack 0
  2317  000B78                     _StateMEF_ini:
  2318                           	opt stack 25
  2319                           
  2320                           ;MotorDriver.c: 64: EstadoActual = STATE1;
  2321                           
  2322                           ;incstack = 0
  2323  000B78  0E01               	movlw	1
  2324  000B7A  6E4F               	movwf	_EstadoActual,c
  2325                           
  2326                           ;MotorDriver.c: 65: Microstep=0;
  2327  000B7C  0E00               	movlw	0
  2328  000B7E  6E41               	movwf	_Microstep+1,c
  2329  000B80  0E00               	movlw	0
  2330  000B82  6E40               	movwf	_Microstep,c
  2331  000B84  0012               	return		;funcret
  2332  000B86                     __end_of_StateMEF_ini:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           intcon	equ	0xFF2
  2339                           intcon2	equ	0xFF1
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1l	equ	0xFE1
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _RectaFrenado *****************
  2347 ;; Defined at:
  2348 ;;		line 345 in file "MotorDriver.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  velocidad       1    wreg     unsigned char 
  2351 ;;  microstep_nu    1    5[BANK1 ] unsigned char 
  2352 ;;  direccion       1    6[BANK1 ] unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  velocidad       1    7[BANK1 ] unsigned char 
  2355 ;;  i               1    8[BANK1 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        4 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    7
  2372 ;; This function calls:
  2373 ;;		_StepMove
  2374 ;; This function is called by:
  2375 ;;		_Measure
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text22
  2380  000696                     __ptext22:
  2381                           	opt stack 0
  2382  000696                     _RectaFrenado:
  2383                           	opt stack 22
  2384                           
  2385                           ;incstack = 0
  2386                           ;RectaFrenado@velocidad stored from wreg
  2387  000696  0101               	movlb	1	; () banked
  2388  000698  6F07               	movwf	RectaFrenado@velocidad& (0+255),b
  2389                           
  2390                           ;MotorDriver.c: 346: uint8_t i;
  2391                           ;MotorDriver.c: 347: if (microstep_number == 8){
  2392  00069A  0E08               	movlw	8
  2393  00069C  0101               	movlb	1	; () banked
  2394  00069E  1905               	xorwf	RectaFrenado@microstep_number& (0+255),w,b
  2395  0006A0  A4D8               	btfss	status,2,c
  2396  0006A2  D01B               	goto	l2521
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;MotorDriver.c: 348: for (i=velocidad;i<30;i++){
  2400  0006A4  C107  F108         	movff	RectaFrenado@velocidad,RectaFrenado@i
  2401  0006A8                     l2511:
  2402                           
  2403                           ; BSR set to: 1
  2404  0006A8  0E1D               	movlw	29
  2405  0006AA  0101               	movlb	1	; () banked
  2406  0006AC  6508               	cpfsgt	RectaFrenado@i& (0+255),b
  2407  0006AE  D001               	goto	l2515
  2408  0006B0  0012               	return	
  2409  0006B2                     l2515:
  2410  0006B2  0E00               	movlw	0
  2411  0006B4  0101               	movlb	1	; () banked
  2412  0006B6  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2413  0006B8  0E05               	movlw	5
  2414  0006BA  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2415  0006BC  C108  F102         	movff	RectaFrenado@i,StepMove@Velocidad
  2416  0006C0  0E08               	movlw	8
  2417  0006C2  0101               	movlb	1	; () banked
  2418  0006C4  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2419  0006C6  C106  F104         	movff	RectaFrenado@direccion,StepMove@direccion
  2420  0006CA  EC8D  F003         	call	_StepMove	;wreg free
  2421  0006CE  0900               	iorlw	0
  2422  0006D0  B4D8               	btfsc	status,2,c
  2423  0006D2  D7EF               	goto	l2515
  2424  0006D4  0101               	movlb	1	; () banked
  2425  0006D6  2B08               	incf	RectaFrenado@i& (0+255),f,b
  2426  0006D8  D7E7               	goto	l2511
  2427  0006DA                     l2521:
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;MotorDriver.c: 352: else if (microstep_number == 16){
  2431  0006DA  0E10               	movlw	16
  2432  0006DC  0101               	movlb	1	; () banked
  2433  0006DE  1905               	xorwf	RectaFrenado@microstep_number& (0+255),w,b
  2434  0006E0  A4D8               	btfss	status,2,c
  2435  0006E2  0012               	return	
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;MotorDriver.c: 353: for (i=velocidad;i<30;i++){
  2439  0006E4  C107  F108         	movff	RectaFrenado@velocidad,RectaFrenado@i
  2440  0006E8                     l2525:
  2441                           
  2442                           ; BSR set to: 1
  2443  0006E8  0E1D               	movlw	29
  2444  0006EA  0101               	movlb	1	; () banked
  2445  0006EC  6508               	cpfsgt	RectaFrenado@i& (0+255),b
  2446  0006EE  D001               	goto	l2529
  2447  0006F0  0012               	return	
  2448  0006F2                     l2529:
  2449  0006F2  0E00               	movlw	0
  2450  0006F4  0101               	movlb	1	; () banked
  2451  0006F6  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2452  0006F8  0E05               	movlw	5
  2453  0006FA  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2454  0006FC  C108  F102         	movff	RectaFrenado@i,StepMove@Velocidad
  2455  000700  0E10               	movlw	16
  2456  000702  0101               	movlb	1	; () banked
  2457  000704  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2458  000706  C106  F104         	movff	RectaFrenado@direccion,StepMove@direccion
  2459  00070A  EC8D  F003         	call	_StepMove	;wreg free
  2460  00070E  0900               	iorlw	0
  2461  000710  B4D8               	btfsc	status,2,c
  2462  000712  D7EF               	goto	l2529
  2463  000714  0101               	movlb	1	; () banked
  2464  000716  2B08               	incf	RectaFrenado@i& (0+255),f,b
  2465  000718  D7E7               	goto	l2525
  2466  00071A                     __end_of_RectaFrenado:
  2467                           	opt stack 0
  2468                           tblptru	equ	0xFF8
  2469                           tblptrh	equ	0xFF7
  2470                           tblptrl	equ	0xFF6
  2471                           tablat	equ	0xFF5
  2472                           intcon	equ	0xFF2
  2473                           intcon2	equ	0xFF1
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           postdec1	equ	0xFE5
  2477                           fsr1l	equ	0xFE1
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _RectaAceleracion *****************
  2481 ;; Defined at:
  2482 ;;		line 330 in file "MotorDriver.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  velocidad       1    wreg     unsigned char 
  2485 ;;  microstep_nu    1    5[BANK1 ] unsigned char 
  2486 ;;  direccion       1    6[BANK1 ] unsigned char 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  velocidad       1    7[BANK1 ] unsigned char 
  2489 ;;  i               1    8[BANK1 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:        4 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    7
  2506 ;; This function calls:
  2507 ;;		_StepMove
  2508 ;; This function is called by:
  2509 ;;		_Measure
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text23
  2514  000606                     __ptext23:
  2515                           	opt stack 0
  2516  000606                     _RectaAceleracion:
  2517                           	opt stack 22
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;incstack = 0
  2521                           ;RectaAceleracion@velocidad stored from wreg
  2522  000606  0101               	movlb	1	; () banked
  2523  000608  6F07               	movwf	RectaAceleracion@velocidad& (0+255),b
  2524                           
  2525                           ;MotorDriver.c: 331: uint8_t i;
  2526                           ;MotorDriver.c: 332: if (microstep_number == 8){
  2527  00060A  0E08               	movlw	8
  2528  00060C  0101               	movlb	1	; () banked
  2529  00060E  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2530  000610  A4D8               	btfss	status,2,c
  2531  000612  D01E               	goto	l2497
  2532                           
  2533                           ; BSR set to: 1
  2534                           ;MotorDriver.c: 333: for (i=30;i>velocidad;i--){
  2535  000614  0E1E               	movlw	30
  2536  000616  0101               	movlb	1	; () banked
  2537  000618  6F08               	movwf	RectaAceleracion@i& (0+255),b
  2538  00061A  D013               	goto	l2495
  2539  00061C                     l2491:
  2540  00061C  0E00               	movlw	0
  2541  00061E  0101               	movlb	1	; () banked
  2542  000620  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2543  000622  0E01               	movlw	1
  2544  000624  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2545  000626  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2546  00062A  0E08               	movlw	8
  2547  00062C  0101               	movlb	1	; () banked
  2548  00062E  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2549  000630  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2550  000634  EC8D  F003         	call	_StepMove	;wreg free
  2551  000638  0900               	iorlw	0
  2552  00063A  B4D8               	btfsc	status,2,c
  2553  00063C  D7EF               	goto	l2491
  2554  00063E  0101               	movlb	1	; () banked
  2555  000640  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2556  000642                     l2495:
  2557                           
  2558                           ; BSR set to: 1
  2559  000642  0101               	movlb	1	; () banked
  2560  000644  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2561  000646  0101               	movlb	1	; () banked
  2562  000648  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2563  00064A  B0D8               	btfsc	status,0,c
  2564  00064C  0012               	return	
  2565  00064E  D7E6               	goto	l2491
  2566  000650                     l2497:
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;MotorDriver.c: 337: else if (microstep_number == 16){
  2570  000650  0E10               	movlw	16
  2571  000652  0101               	movlb	1	; () banked
  2572  000654  1905               	xorwf	RectaAceleracion@microstep_number& (0+255),w,b
  2573  000656  A4D8               	btfss	status,2,c
  2574  000658  0012               	return	
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;MotorDriver.c: 338: for (i=30;i>velocidad;i--){
  2578  00065A  0E1E               	movlw	30
  2579  00065C  0101               	movlb	1	; () banked
  2580  00065E  6F08               	movwf	RectaAceleracion@i& (0+255),b
  2581  000660  D013               	goto	l2505
  2582  000662                     l2501:
  2583  000662  0E00               	movlw	0
  2584  000664  0101               	movlb	1	; () banked
  2585  000666  6F01               	movwf	(StepMove@StepNumber+1)& (0+255),b
  2586  000668  0E01               	movlw	1
  2587  00066A  6F00               	movwf	StepMove@StepNumber& (0+255),b
  2588  00066C  C108  F102         	movff	RectaAceleracion@i,StepMove@Velocidad
  2589  000670  0E10               	movlw	16
  2590  000672  0101               	movlb	1	; () banked
  2591  000674  6F03               	movwf	StepMove@microstep_number& (0+255),b
  2592  000676  C106  F104         	movff	RectaAceleracion@direccion,StepMove@direccion
  2593  00067A  EC8D  F003         	call	_StepMove	;wreg free
  2594  00067E  0900               	iorlw	0
  2595  000680  B4D8               	btfsc	status,2,c
  2596  000682  D7EF               	goto	l2501
  2597  000684  0101               	movlb	1	; () banked
  2598  000686  0708               	decf	RectaAceleracion@i& (0+255),f,b
  2599  000688                     l2505:
  2600                           
  2601                           ; BSR set to: 1
  2602  000688  0101               	movlb	1	; () banked
  2603  00068A  5108               	movf	RectaAceleracion@i& (0+255),w,b
  2604  00068C  0101               	movlb	1	; () banked
  2605  00068E  5D07               	subwf	RectaAceleracion@velocidad& (0+255),w,b
  2606  000690  B0D8               	btfsc	status,0,c
  2607  000692  0012               	return	
  2608  000694  D7E6               	goto	l2501
  2609  000696                     __end_of_RectaAceleracion:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           intcon	equ	0xFF2
  2616                           intcon2	equ	0xFF1
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postdec1	equ	0xFE5
  2620                           fsr1l	equ	0xFE1
  2621                           status	equ	0xFD8
  2622                           
  2623 ;; *************** function _StepMove *****************
  2624 ;; Defined at:
  2625 ;;		line 288 in file "MotorDriver.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  StepNumber      2    0[BANK1 ] unsigned int 
  2628 ;;  Velocidad       1    2[BANK1 ] unsigned char 
  2629 ;;  microstep_nu    1    3[BANK1 ] unsigned char 
  2630 ;;  direccion       1    4[BANK1 ] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      unsigned char 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         2       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        7 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    6
  2649 ;; This function calls:
  2650 ;;		_State16MEF_act
  2651 ;;		_State8MEF_act
  2652 ;; This function is called by:
  2653 ;;		_RectaAceleracion
  2654 ;;		_RectaFrenado
  2655 ;;		_goDark
  2656 ;;		_goReference
  2657 ;;		_goInitMovement
  2658 ;;		_Measure
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text24
  2663  00071A                     __ptext24:
  2664                           	opt stack 0
  2665  00071A                     _StepMove:
  2666                           	opt stack 23
  2667                           
  2668                           ;MotorDriver.c: 290: if ((StepCount<StepNumber)){
  2669                           
  2670                           ; BSR set to: 1
  2671                           ;incstack = 0
  2672  00071A  0101               	movlb	1	; () banked
  2673  00071C  5100               	movf	StepMove@StepNumber& (0+255),w,b
  2674  00071E  5C3E               	subwf	_StepCount,w,c
  2675  000720  0101               	movlb	1	; () banked
  2676  000722  5101               	movf	(StepMove@StepNumber+1)& (0+255),w,b
  2677  000724  583F               	subwfb	_StepCount+1,w,c
  2678  000726  B0D8               	btfsc	status,0,c
  2679  000728  D029               	goto	l2483
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;MotorDriver.c: 291: if (Timer2Ticked){
  2683  00072A  504A               	movf	_Timer2Ticked,w,c	;volatile
  2684  00072C  B4D8               	btfsc	status,2,c
  2685  00072E  D023               	goto	l2481
  2686                           
  2687                           ; BSR set to: 1
  2688                           ;MotorDriver.c: 292: Timer2Tick_count++;
  2689  000730  4A3C               	infsnz	_Timer2Tick_count,f,c
  2690  000732  2A3D               	incf	_Timer2Tick_count+1,f,c
  2691                           
  2692                           ; BSR set to: 1
  2693                           ;MotorDriver.c: 293: if (Timer2Tick_count == Velocidad){
  2694  000734  0101               	movlb	1	; () banked
  2695  000736  5102               	movf	StepMove@Velocidad& (0+255),w,b
  2696  000738  6E35               	movwf	??_StepMove& (0+255),c
  2697  00073A  6A36               	clrf	(??_StepMove+1)& (0+255),c
  2698  00073C  503C               	movf	_Timer2Tick_count,w,c
  2699  00073E  1835               	xorwf	??_StepMove,w,c
  2700  000740  E118               	bnz	l2479
  2701  000742  503D               	movf	_Timer2Tick_count+1,w,c
  2702  000744  1836               	xorwf	??_StepMove+1,w,c
  2703  000746  A4D8               	btfss	status,2,c
  2704  000748  D014               	goto	l2479
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;MotorDriver.c: 294: if (microstep_number==16){
  2708  00074A  0E10               	movlw	16
  2709  00074C  0101               	movlb	1	; () banked
  2710  00074E  1903               	xorwf	StepMove@microstep_number& (0+255),w,b
  2711  000750  A4D8               	btfss	status,2,c
  2712  000752  D005               	goto	l2473
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;MotorDriver.c: 295: State16MEF_act( direccion );
  2716  000754  0101               	movlb	1	; () banked
  2717  000756  5104               	movf	StepMove@direccion& (0+255),w,b
  2718  000758  EC85  F001         	call	_State16MEF_act
  2719                           
  2720                           ;MotorDriver.c: 296: }
  2721  00075C  D004               	goto	l2475
  2722  00075E                     l2473:
  2723                           
  2724                           ;MotorDriver.c: 297: else{
  2725                           ;MotorDriver.c: 298: State8MEF_act( direccion );
  2726  00075E  0101               	movlb	1	; () banked
  2727  000760  5104               	movf	StepMove@direccion& (0+255),w,b
  2728  000762  EC57  F000         	call	_State8MEF_act
  2729  000766                     l2475:
  2730                           
  2731                           ;MotorDriver.c: 299: }
  2732                           ;MotorDriver.c: 300: StepCount++;
  2733  000766  4A3E               	infsnz	_StepCount,f,c
  2734  000768  2A3F               	incf	_StepCount+1,f,c
  2735                           
  2736                           ;MotorDriver.c: 301: Timer2Tick_count=0;
  2737  00076A  0E00               	movlw	0
  2738  00076C  6E3D               	movwf	_Timer2Tick_count+1,c
  2739  00076E  0E00               	movlw	0
  2740  000770  6E3C               	movwf	_Timer2Tick_count,c
  2741  000772                     l2479:
  2742                           
  2743                           ;MotorDriver.c: 302: }
  2744                           ;MotorDriver.c: 303: Timer2Ticked = 0;
  2745  000772  0E00               	movlw	0
  2746  000774  6E4A               	movwf	_Timer2Ticked,c	;volatile
  2747  000776                     l2481:
  2748                           
  2749                           ;MotorDriver.c: 304: }
  2750                           ;MotorDriver.c: 305: StepsComplete=0;
  2751  000776  0E00               	movlw	0
  2752  000778  6E48               	movwf	_StepsComplete,c
  2753                           
  2754                           ;MotorDriver.c: 306: }
  2755  00077A  D006               	goto	l524
  2756  00077C                     l2483:
  2757                           
  2758                           ;MotorDriver.c: 307: else{
  2759                           ;MotorDriver.c: 308: StepsComplete=1;
  2760  00077C  0E01               	movlw	1
  2761  00077E  6E48               	movwf	_StepsComplete,c
  2762                           
  2763                           ;MotorDriver.c: 309: StepCount=0;
  2764  000780  0E00               	movlw	0
  2765  000782  6E3F               	movwf	_StepCount+1,c
  2766  000784  0E00               	movlw	0
  2767  000786  6E3E               	movwf	_StepCount,c
  2768  000788                     l524:
  2769                           
  2770                           ;MotorDriver.c: 311: }
  2771                           ;MotorDriver.c: 312: return(StepsComplete);
  2772  000788  5048               	movf	_StepsComplete,w,c
  2773  00078A  0012               	return	
  2774  00078C                     __end_of_StepMove:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           intcon	equ	0xFF2
  2781                           intcon2	equ	0xFF1
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postdec1	equ	0xFE5
  2785                           fsr1l	equ	0xFE1
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _State8MEF_act *****************
  2789 ;; Defined at:
  2790 ;;		line 68 in file "MotorDriver.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  direccion       1    wreg     unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  direccion       1   19[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;Total ram usage:        2 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    5
  2811 ;; This function calls:
  2812 ;;		_EPWM1_LoadDutyValue
  2813 ;;		_EPWM2_LoadDutyValue
  2814 ;; This function is called by:
  2815 ;;		_StepMove
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text25
  2820  0000AE                     __ptext25:
  2821                           	opt stack 0
  2822  0000AE                     _State8MEF_act:
  2823                           	opt stack 23
  2824                           
  2825                           ;incstack = 0
  2826                           ;State8MEF_act@direccion stored from wreg
  2827  0000AE  6E34               	movwf	State8MEF_act@direccion,c
  2828                           
  2829                           ;MotorDriver.c: 70: switch(EstadoActual) {
  2830  0000B0  D11D               	goto	l2349
  2831  0000B2                     l2243:
  2832                           
  2833                           ;MotorDriver.c: 72: PSTR1CON = 0x01; PSTR2CON = 0x01;
  2834  0000B2  0E01               	movlw	1
  2835  0000B4  6EB9               	movwf	4025,c	;volatile
  2836  0000B6  0E01               	movlw	1
  2837  0000B8  6E63               	movwf	3939,c	;volatile
  2838                           
  2839                           ;MotorDriver.c: 73: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2840  0000BA  9A8C               	bcf	3980,5,c	;volatile
  2841  0000BC  908B               	bcf	3979,0,c	;volatile
  2842                           
  2843                           ;MotorDriver.c: 74: if (Microstep<8){
  2844  0000BE  BE41               	btfsc	_Microstep+1,7,c
  2845  0000C0  D006               	goto	l2251
  2846  0000C2  5041               	movf	_Microstep+1,w,c
  2847  0000C4  E103               	bnz	u1551
  2848  0000C6  0E08               	movlw	8
  2849  0000C8  5C40               	subwf	_Microstep,w,c
  2850  0000CA  B0D8               	btfsc	status,0,c
  2851  0000CC                     u1551:
  2852  0000CC  0012               	return	
  2853  0000CE                     l2251:
  2854                           
  2855                           ;MotorDriver.c: 78: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2856  0000CE  0E01               	movlw	low _LookUP_TABLE_COS
  2857  0000D0  2440               	addwf	_Microstep,w,c
  2858  0000D2  6ED9               	movwf	fsr2l,c
  2859  0000D4  0E00               	movlw	high _LookUP_TABLE_COS
  2860  0000D6  2041               	addwfc	_Microstep+1,w,c
  2861  0000D8  6EDA               	movwf	fsr2h,c
  2862  0000DA  50DF               	movf	indf2,w,c
  2863  0000DC  6E33               	movwf	??_State8MEF_act& (0+255),c
  2864  0000DE  5033               	movf	??_State8MEF_act,w,c
  2865  0000E0  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2866  0000E2  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2867  0000E4  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2868                           
  2869                           ;MotorDriver.c: 79: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2870  0000E8  0EE0               	movlw	low _LookUP_TABLE_SEN
  2871  0000EA  2440               	addwf	_Microstep,w,c
  2872  0000EC  6ED9               	movwf	fsr2l,c
  2873  0000EE  0E00               	movlw	high _LookUP_TABLE_SEN
  2874  0000F0  2041               	addwfc	_Microstep+1,w,c
  2875  0000F2  6EDA               	movwf	fsr2h,c
  2876  0000F4  50DF               	movf	indf2,w,c
  2877  0000F6  6E33               	movwf	??_State8MEF_act& (0+255),c
  2878  0000F8  5033               	movf	??_State8MEF_act,w,c
  2879  0000FA  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2880  0000FC  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2881  0000FE  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2882                           
  2883                           ;MotorDriver.c: 81: if (direccion == 1){
  2884  000102  0434               	decf	State8MEF_act@direccion,w,c
  2885  000104  A4D8               	btfss	status,2,c
  2886  000106  D00A               	goto	l2261
  2887                           
  2888                           ;MotorDriver.c: 82: if (Microstep==7){
  2889  000108  0E07               	movlw	7
  2890  00010A  1840               	xorwf	_Microstep,w,c
  2891  00010C  1041               	iorwf	_Microstep+1,w,c
  2892  00010E  A4D8               	btfss	status,2,c
  2893  000110  D002               	goto	l2259
  2894                           
  2895                           ;MotorDriver.c: 83: EstadoActual = STATE2;
  2896  000112  0E02               	movlw	2
  2897  000114  6E4F               	movwf	_EstadoActual,c
  2898  000116                     l2259:
  2899                           
  2900                           ;MotorDriver.c: 84: }
  2901                           ;MotorDriver.c: 85: Microstep++;
  2902  000116  4A40               	infsnz	_Microstep,f,c
  2903  000118  2A41               	incf	_Microstep+1,f,c
  2904                           
  2905                           ;MotorDriver.c: 86: }
  2906  00011A  0012               	return	
  2907  00011C                     l2261:
  2908                           
  2909                           ;MotorDriver.c: 87: else{
  2910                           ;MotorDriver.c: 88: if (Microstep==0){
  2911  00011C  5040               	movf	_Microstep,w,c
  2912  00011E  1041               	iorwf	_Microstep+1,w,c
  2913  000120  A4D8               	btfss	status,2,c
  2914  000122  D006               	goto	l2265
  2915                           
  2916                           ;MotorDriver.c: 89: EstadoActual = STATE4;
  2917  000124  0E04               	movlw	4
  2918  000126  6E4F               	movwf	_EstadoActual,c
  2919                           
  2920                           ;MotorDriver.c: 90: Microstep=31;
  2921  000128  0E00               	movlw	0
  2922  00012A  6E41               	movwf	_Microstep+1,c
  2923  00012C  0E1F               	movlw	31
  2924  00012E  6E40               	movwf	_Microstep,c
  2925  000130                     l2265:
  2926                           
  2927                           ;MotorDriver.c: 91: }
  2928                           ;MotorDriver.c: 92: Microstep--;
  2929  000130  0640               	decf	_Microstep,f,c
  2930  000132  A0D8               	btfss	status,0,c
  2931  000134  0641               	decf	_Microstep+1,f,c
  2932                           
  2933                           ;MotorDriver.c: 93: }
  2934                           ;MotorDriver.c: 94: }
  2935                           ;MotorDriver.c: 95: break;
  2936  000136  0012               	return	
  2937  000138                     l2267:
  2938                           
  2939                           ;MotorDriver.c: 97: PSTR1CON = 0x02; PSTR2CON = 0x01;
  2940  000138  0E02               	movlw	2
  2941  00013A  6EB9               	movwf	4025,c	;volatile
  2942  00013C  0E01               	movlw	1
  2943  00013E  6E63               	movwf	3939,c	;volatile
  2944                           
  2945                           ;MotorDriver.c: 98: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whil
      +                          e(0);
  2946  000140  948B               	bcf	3979,2,c	;volatile
  2947  000142  908B               	bcf	3979,0,c	;volatile
  2948                           
  2949                           ;MotorDriver.c: 99: if ((Microstep<16)&&(Microstep>7)){
  2950  000144  BE41               	btfsc	_Microstep+1,7,c
  2951  000146  D006               	goto	l2275
  2952  000148  5041               	movf	_Microstep+1,w,c
  2953  00014A  E103               	bnz	u1591
  2954  00014C  0E10               	movlw	16
  2955  00014E  5C40               	subwf	_Microstep,w,c
  2956  000150  B0D8               	btfsc	status,0,c
  2957  000152                     u1591:
  2958  000152  0012               	return	
  2959  000154                     l2275:
  2960  000154  BE41               	btfsc	_Microstep+1,7,c
  2961  000156  0012               	return	
  2962  000158  5041               	movf	_Microstep+1,w,c
  2963  00015A  E104               	bnz	u1600
  2964  00015C  0E08               	movlw	8
  2965  00015E  5C40               	subwf	_Microstep,w,c
  2966  000160  A0D8               	btfss	status,0,c
  2967  000162  0012               	return	
  2968  000164                     u1600:
  2969                           
  2970                           ;MotorDriver.c: 104: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  2971  000164  0E01               	movlw	low _LookUP_TABLE_COS
  2972  000166  2440               	addwf	_Microstep,w,c
  2973  000168  6ED9               	movwf	fsr2l,c
  2974  00016A  0E00               	movlw	high _LookUP_TABLE_COS
  2975  00016C  2041               	addwfc	_Microstep+1,w,c
  2976  00016E  6EDA               	movwf	fsr2h,c
  2977  000170  50DF               	movf	indf2,w,c
  2978  000172  6E33               	movwf	??_State8MEF_act& (0+255),c
  2979  000174  5033               	movf	??_State8MEF_act,w,c
  2980  000176  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  2981  000178  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  2982  00017A  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  2983                           
  2984                           ;MotorDriver.c: 105: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  2985  00017E  0EE0               	movlw	low _LookUP_TABLE_SEN
  2986  000180  2440               	addwf	_Microstep,w,c
  2987  000182  6ED9               	movwf	fsr2l,c
  2988  000184  0E00               	movlw	high _LookUP_TABLE_SEN
  2989  000186  2041               	addwfc	_Microstep+1,w,c
  2990  000188  6EDA               	movwf	fsr2h,c
  2991  00018A  50DF               	movf	indf2,w,c
  2992  00018C  6E33               	movwf	??_State8MEF_act& (0+255),c
  2993  00018E  5033               	movf	??_State8MEF_act,w,c
  2994  000190  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  2995  000192  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  2996  000194  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  2997                           
  2998                           ;MotorDriver.c: 107: if (direccion == 1){
  2999  000198  0434               	decf	State8MEF_act@direccion,w,c
  3000  00019A  A4D8               	btfss	status,2,c
  3001  00019C  D00A               	goto	l2287
  3002                           
  3003                           ;MotorDriver.c: 108: if (Microstep==15){
  3004  00019E  0E0F               	movlw	15
  3005  0001A0  1840               	xorwf	_Microstep,w,c
  3006  0001A2  1041               	iorwf	_Microstep+1,w,c
  3007  0001A4  A4D8               	btfss	status,2,c
  3008  0001A6  D002               	goto	l2285
  3009                           
  3010                           ;MotorDriver.c: 109: EstadoActual = STATE3;
  3011  0001A8  0E03               	movlw	3
  3012  0001AA  6E4F               	movwf	_EstadoActual,c
  3013  0001AC                     l2285:
  3014                           
  3015                           ;MotorDriver.c: 110: }
  3016                           ;MotorDriver.c: 111: Microstep++;
  3017  0001AC  4A40               	infsnz	_Microstep,f,c
  3018  0001AE  2A41               	incf	_Microstep+1,f,c
  3019                           
  3020                           ;MotorDriver.c: 112: }
  3021  0001B0  0012               	return	
  3022  0001B2                     l2287:
  3023                           
  3024                           ;MotorDriver.c: 113: else{
  3025                           ;MotorDriver.c: 114: if (Microstep==8){
  3026  0001B2  0E08               	movlw	8
  3027  0001B4  1840               	xorwf	_Microstep,w,c
  3028  0001B6  1041               	iorwf	_Microstep+1,w,c
  3029  0001B8  A4D8               	btfss	status,2,c
  3030  0001BA  D002               	goto	l2291
  3031                           
  3032                           ;MotorDriver.c: 115: EstadoActual = STATE1;
  3033  0001BC  0E01               	movlw	1
  3034  0001BE  6E4F               	movwf	_EstadoActual,c
  3035  0001C0                     l2291:
  3036                           
  3037                           ;MotorDriver.c: 116: }
  3038                           ;MotorDriver.c: 117: Microstep--;
  3039  0001C0  0640               	decf	_Microstep,f,c
  3040  0001C2  A0D8               	btfss	status,0,c
  3041  0001C4  0641               	decf	_Microstep+1,f,c
  3042                           
  3043                           ;MotorDriver.c: 118: }
  3044                           ;MotorDriver.c: 119: }
  3045                           ;MotorDriver.c: 120: break;
  3046  0001C6  0012               	return	
  3047  0001C8                     l2293:
  3048                           
  3049                           ;MotorDriver.c: 122: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3050  0001C8  0E02               	movlw	2
  3051  0001CA  6EB9               	movwf	4025,c	;volatile
  3052  0001CC  0E02               	movlw	2
  3053  0001CE  6E63               	movwf	3939,c	;volatile
  3054                           
  3055                           ;MotorDriver.c: 123: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3056  0001D0  948B               	bcf	3979,2,c	;volatile
  3057  0001D2  928B               	bcf	3979,1,c	;volatile
  3058                           
  3059                           ;MotorDriver.c: 124: if ((Microstep<24)&&(Microstep>15)){
  3060  0001D4  BE41               	btfsc	_Microstep+1,7,c
  3061  0001D6  D006               	goto	l2301
  3062  0001D8  5041               	movf	_Microstep+1,w,c
  3063  0001DA  E103               	bnz	u1641
  3064  0001DC  0E18               	movlw	24
  3065  0001DE  5C40               	subwf	_Microstep,w,c
  3066  0001E0  B0D8               	btfsc	status,0,c
  3067  0001E2                     u1641:
  3068  0001E2  0012               	return	
  3069  0001E4                     l2301:
  3070  0001E4  BE41               	btfsc	_Microstep+1,7,c
  3071  0001E6  0012               	return	
  3072  0001E8  5041               	movf	_Microstep+1,w,c
  3073  0001EA  E104               	bnz	u1650
  3074  0001EC  0E10               	movlw	16
  3075  0001EE  5C40               	subwf	_Microstep,w,c
  3076  0001F0  A0D8               	btfss	status,0,c
  3077  0001F2  0012               	return	
  3078  0001F4                     u1650:
  3079                           
  3080                           ;MotorDriver.c: 129: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  3081  0001F4  0E01               	movlw	low _LookUP_TABLE_COS
  3082  0001F6  2440               	addwf	_Microstep,w,c
  3083  0001F8  6ED9               	movwf	fsr2l,c
  3084  0001FA  0E00               	movlw	high _LookUP_TABLE_COS
  3085  0001FC  2041               	addwfc	_Microstep+1,w,c
  3086  0001FE  6EDA               	movwf	fsr2h,c
  3087  000200  50DF               	movf	indf2,w,c
  3088  000202  6E33               	movwf	??_State8MEF_act& (0+255),c
  3089  000204  5033               	movf	??_State8MEF_act,w,c
  3090  000206  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3091  000208  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3092  00020A  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3093                           
  3094                           ;MotorDriver.c: 130: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  3095  00020E  0EE0               	movlw	low _LookUP_TABLE_SEN
  3096  000210  2440               	addwf	_Microstep,w,c
  3097  000212  6ED9               	movwf	fsr2l,c
  3098  000214  0E00               	movlw	high _LookUP_TABLE_SEN
  3099  000216  2041               	addwfc	_Microstep+1,w,c
  3100  000218  6EDA               	movwf	fsr2h,c
  3101  00021A  50DF               	movf	indf2,w,c
  3102  00021C  6E33               	movwf	??_State8MEF_act& (0+255),c
  3103  00021E  5033               	movf	??_State8MEF_act,w,c
  3104  000220  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3105  000222  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3106  000224  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3107                           
  3108                           ;MotorDriver.c: 132: if (direccion == 1){
  3109  000228  0434               	decf	State8MEF_act@direccion,w,c
  3110  00022A  A4D8               	btfss	status,2,c
  3111  00022C  D00A               	goto	l2313
  3112                           
  3113                           ;MotorDriver.c: 133: if (Microstep==23){
  3114  00022E  0E17               	movlw	23
  3115  000230  1840               	xorwf	_Microstep,w,c
  3116  000232  1041               	iorwf	_Microstep+1,w,c
  3117  000234  A4D8               	btfss	status,2,c
  3118  000236  D002               	goto	l2311
  3119                           
  3120                           ;MotorDriver.c: 134: EstadoActual = STATE4;
  3121  000238  0E04               	movlw	4
  3122  00023A  6E4F               	movwf	_EstadoActual,c
  3123  00023C                     l2311:
  3124                           
  3125                           ;MotorDriver.c: 135: }
  3126                           ;MotorDriver.c: 136: Microstep++;
  3127  00023C  4A40               	infsnz	_Microstep,f,c
  3128  00023E  2A41               	incf	_Microstep+1,f,c
  3129                           
  3130                           ;MotorDriver.c: 137: }
  3131  000240  0012               	return	
  3132  000242                     l2313:
  3133                           
  3134                           ;MotorDriver.c: 138: else{
  3135                           ;MotorDriver.c: 139: if (Microstep==16){
  3136  000242  0E10               	movlw	16
  3137  000244  1840               	xorwf	_Microstep,w,c
  3138  000246  1041               	iorwf	_Microstep+1,w,c
  3139  000248  A4D8               	btfss	status,2,c
  3140  00024A  D002               	goto	l2317
  3141                           
  3142                           ;MotorDriver.c: 140: EstadoActual = STATE2;
  3143  00024C  0E02               	movlw	2
  3144  00024E  6E4F               	movwf	_EstadoActual,c
  3145  000250                     l2317:
  3146                           
  3147                           ;MotorDriver.c: 141: }
  3148                           ;MotorDriver.c: 142: Microstep--;
  3149  000250  0640               	decf	_Microstep,f,c
  3150  000252  A0D8               	btfss	status,0,c
  3151  000254  0641               	decf	_Microstep+1,f,c
  3152                           
  3153                           ;MotorDriver.c: 143: }
  3154                           ;MotorDriver.c: 144: }
  3155                           ;MotorDriver.c: 145: break;
  3156  000256  0012               	return	
  3157  000258                     l2319:
  3158                           
  3159                           ;MotorDriver.c: 147: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3160  000258  0E01               	movlw	1
  3161  00025A  6EB9               	movwf	4025,c	;volatile
  3162  00025C  0E02               	movlw	2
  3163  00025E  6E63               	movwf	3939,c	;volatile
  3164                           
  3165                           ;MotorDriver.c: 148: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3166  000260  9A8C               	bcf	3980,5,c	;volatile
  3167  000262  928B               	bcf	3979,1,c	;volatile
  3168                           
  3169                           ;MotorDriver.c: 149: if ((Microstep<32)&&(Microstep>23)){
  3170  000264  BE41               	btfsc	_Microstep+1,7,c
  3171  000266  D006               	goto	l2327
  3172  000268  5041               	movf	_Microstep+1,w,c
  3173  00026A  E14E               	bnz	l470
  3174  00026C  0E20               	movlw	32
  3175  00026E  5C40               	subwf	_Microstep,w,c
  3176  000270  B0D8               	btfsc	status,0,c
  3177  000272  0012               	return	
  3178  000274                     l2327:
  3179  000274  BE41               	btfsc	_Microstep+1,7,c
  3180  000276  0012               	return	
  3181  000278  5041               	movf	_Microstep+1,w,c
  3182  00027A  E104               	bnz	u1700
  3183  00027C  0E18               	movlw	24
  3184  00027E  5C40               	subwf	_Microstep,w,c
  3185  000280  A0D8               	btfss	status,0,c
  3186  000282  0012               	return	
  3187  000284                     u1700:
  3188                           
  3189                           ;MotorDriver.c: 154: EPWM1_LoadDutyValue(LookUP_TABLE_COS[Microstep]);
  3190  000284  0E01               	movlw	low _LookUP_TABLE_COS
  3191  000286  2440               	addwf	_Microstep,w,c
  3192  000288  6ED9               	movwf	fsr2l,c
  3193  00028A  0E00               	movlw	high _LookUP_TABLE_COS
  3194  00028C  2041               	addwfc	_Microstep+1,w,c
  3195  00028E  6EDA               	movwf	fsr2h,c
  3196  000290  50DF               	movf	indf2,w,c
  3197  000292  6E33               	movwf	??_State8MEF_act& (0+255),c
  3198  000294  5033               	movf	??_State8MEF_act,w,c
  3199  000296  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3200  000298  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3201  00029A  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3202                           
  3203                           ;MotorDriver.c: 155: EPWM2_LoadDutyValue(LookUP_TABLE_SEN[Microstep]);
  3204  00029E  0EE0               	movlw	low _LookUP_TABLE_SEN
  3205  0002A0  2440               	addwf	_Microstep,w,c
  3206  0002A2  6ED9               	movwf	fsr2l,c
  3207  0002A4  0E00               	movlw	high _LookUP_TABLE_SEN
  3208  0002A6  2041               	addwfc	_Microstep+1,w,c
  3209  0002A8  6EDA               	movwf	fsr2h,c
  3210  0002AA  50DF               	movf	indf2,w,c
  3211  0002AC  6E33               	movwf	??_State8MEF_act& (0+255),c
  3212  0002AE  5033               	movf	??_State8MEF_act,w,c
  3213  0002B0  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3214  0002B2  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3215  0002B4  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3216                           
  3217                           ;MotorDriver.c: 157: if (direccion == 1){
  3218  0002B8  0434               	decf	State8MEF_act@direccion,w,c
  3219  0002BA  A4D8               	btfss	status,2,c
  3220  0002BC  D00C               	goto	l2341
  3221                           
  3222                           ;MotorDriver.c: 158: if (Microstep==31){
  3223  0002BE  0E1F               	movlw	31
  3224  0002C0  1840               	xorwf	_Microstep,w,c
  3225  0002C2  1041               	iorwf	_Microstep+1,w,c
  3226  0002C4  A4D8               	btfss	status,2,c
  3227  0002C6  D004               	goto	l2339
  3228                           
  3229                           ;MotorDriver.c: 159: EstadoActual = STATE1;
  3230  0002C8  0E01               	movlw	1
  3231  0002CA  6E4F               	movwf	_EstadoActual,c
  3232                           
  3233                           ;MotorDriver.c: 160: Microstep=-1;
  3234  0002CC  6840               	setf	_Microstep,c
  3235  0002CE  6841               	setf	_Microstep+1,c
  3236  0002D0                     l2339:
  3237                           
  3238                           ;MotorDriver.c: 161: }
  3239                           ;MotorDriver.c: 162: Microstep++;
  3240  0002D0  4A40               	infsnz	_Microstep,f,c
  3241  0002D2  2A41               	incf	_Microstep+1,f,c
  3242                           
  3243                           ;MotorDriver.c: 163: }
  3244  0002D4  0012               	return	
  3245  0002D6                     l2341:
  3246                           
  3247                           ;MotorDriver.c: 164: else{
  3248                           ;MotorDriver.c: 165: if (Microstep==24){
  3249  0002D6  0E18               	movlw	24
  3250  0002D8  1840               	xorwf	_Microstep,w,c
  3251  0002DA  1041               	iorwf	_Microstep+1,w,c
  3252  0002DC  A4D8               	btfss	status,2,c
  3253  0002DE  D002               	goto	l2345
  3254                           
  3255                           ;MotorDriver.c: 166: EstadoActual = STATE3;
  3256  0002E0  0E03               	movlw	3
  3257  0002E2  6E4F               	movwf	_EstadoActual,c
  3258  0002E4                     l2345:
  3259                           
  3260                           ;MotorDriver.c: 167: }
  3261                           ;MotorDriver.c: 168: Microstep--;
  3262  0002E4  0640               	decf	_Microstep,f,c
  3263  0002E6  A0D8               	btfss	status,0,c
  3264  0002E8  0641               	decf	_Microstep+1,f,c
  3265                           
  3266                           ;MotorDriver.c: 175: }
  3267                           
  3268                           ;MotorDriver.c: 174: break;
  3269                           
  3270                           ;MotorDriver.c: 172: default:
  3271                           
  3272                           ;MotorDriver.c: 169: }
  3273                           ;MotorDriver.c: 170: }
  3274                           ;MotorDriver.c: 171: break;
  3275  0002EA  0012               	return	
  3276  0002EC                     l2349:
  3277  0002EC  504F               	movf	_EstadoActual,w,c
  3278                           
  3279                           ; Switch size 1, requested type "space"
  3280                           ; Number of cases is 4, Range of values is 1 to 4
  3281                           ; switch strategies available:
  3282                           ; Name         Instructions Cycles
  3283                           ; simple_byte           13     7 (average)
  3284                           ;	Chosen strategy is simple_byte
  3285  0002EE  0A01               	xorlw	1	; case 1
  3286  0002F0  B4D8               	btfsc	status,2,c
  3287  0002F2  D6DF               	goto	l2243
  3288  0002F4  0A03               	xorlw	3	; case 2
  3289  0002F6  B4D8               	btfsc	status,2,c
  3290  0002F8  D71F               	goto	l2267
  3291  0002FA  0A01               	xorlw	1	; case 3
  3292  0002FC  B4D8               	btfsc	status,2,c
  3293  0002FE  D764               	goto	l2293
  3294  000300  0A07               	xorlw	7	; case 4
  3295  000302  A4D8               	btfss	status,2,c
  3296  000304  0012               	return	
  3297  000306  D7A8               	goto	l2319
  3298  000308                     l470:
  3299  000308  0012               	return		;funcret
  3300  00030A                     __end_of_State8MEF_act:
  3301                           	opt stack 0
  3302                           tblptru	equ	0xFF8
  3303                           tblptrh	equ	0xFF7
  3304                           tblptrl	equ	0xFF6
  3305                           tablat	equ	0xFF5
  3306                           intcon	equ	0xFF2
  3307                           intcon2	equ	0xFF1
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _State16MEF_act *****************
  3318 ;; Defined at:
  3319 ;;		line 178 in file "MotorDriver.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  direccion       1    wreg     unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  direccion       1   19[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        2 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    5
  3340 ;; This function calls:
  3341 ;;		_EPWM1_LoadDutyValue
  3342 ;;		_EPWM2_LoadDutyValue
  3343 ;; This function is called by:
  3344 ;;		_StepMove
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text26
  3349  00030A                     __ptext26:
  3350                           	opt stack 0
  3351  00030A                     _State16MEF_act:
  3352                           	opt stack 23
  3353                           
  3354                           ;incstack = 0
  3355                           ;State16MEF_act@direccion stored from wreg
  3356  00030A  6E34               	movwf	State16MEF_act@direccion,c
  3357                           
  3358                           ;MotorDriver.c: 180: switch(EstadoActual) {
  3359  00030C  D11D               	goto	l2459
  3360  00030E                     l2353:
  3361                           
  3362                           ;MotorDriver.c: 182: PSTR1CON = 0x01; PSTR2CON = 0x01;
  3363  00030E  0E01               	movlw	1
  3364  000310  6EB9               	movwf	4025,c	;volatile
  3365  000312  0E01               	movlw	1
  3366  000314  6E63               	movwf	3939,c	;volatile
  3367                           
  3368                           ;MotorDriver.c: 183: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  3369  000316  9A8C               	bcf	3980,5,c	;volatile
  3370  000318  908B               	bcf	3979,0,c	;volatile
  3371                           
  3372                           ;MotorDriver.c: 184: if (Microstep<16){
  3373  00031A  BE41               	btfsc	_Microstep+1,7,c
  3374  00031C  D006               	goto	l2361
  3375  00031E  5041               	movf	_Microstep+1,w,c
  3376  000320  E103               	bnz	u1741
  3377  000322  0E10               	movlw	16
  3378  000324  5C40               	subwf	_Microstep,w,c
  3379  000326  B0D8               	btfsc	status,0,c
  3380  000328                     u1741:
  3381  000328  0012               	return	
  3382  00032A                     l2361:
  3383                           
  3384                           ;MotorDriver.c: 188: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3385  00032A  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3386  00032C  2440               	addwf	_Microstep,w,c
  3387  00032E  6ED9               	movwf	fsr2l,c
  3388  000330  0E00               	movlw	high _LookUP_TABLE_COS_16
  3389  000332  2041               	addwfc	_Microstep+1,w,c
  3390  000334  6EDA               	movwf	fsr2h,c
  3391  000336  50DF               	movf	indf2,w,c
  3392  000338  6E33               	movwf	??_State16MEF_act& (0+255),c
  3393  00033A  5033               	movf	??_State16MEF_act,w,c
  3394  00033C  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3395  00033E  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3396  000340  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3397                           
  3398                           ;MotorDriver.c: 189: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3399  000344  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3400  000346  2440               	addwf	_Microstep,w,c
  3401  000348  6ED9               	movwf	fsr2l,c
  3402  00034A  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3403  00034C  2041               	addwfc	_Microstep+1,w,c
  3404  00034E  6EDA               	movwf	fsr2h,c
  3405  000350  50DF               	movf	indf2,w,c
  3406  000352  6E33               	movwf	??_State16MEF_act& (0+255),c
  3407  000354  5033               	movf	??_State16MEF_act,w,c
  3408  000356  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3409  000358  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3410  00035A  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3411                           
  3412                           ;MotorDriver.c: 191: if (direccion == 1){
  3413  00035E  0434               	decf	State16MEF_act@direccion,w,c
  3414  000360  A4D8               	btfss	status,2,c
  3415  000362  D00A               	goto	l2371
  3416                           
  3417                           ;MotorDriver.c: 192: if (Microstep==15){
  3418  000364  0E0F               	movlw	15
  3419  000366  1840               	xorwf	_Microstep,w,c
  3420  000368  1041               	iorwf	_Microstep+1,w,c
  3421  00036A  A4D8               	btfss	status,2,c
  3422  00036C  D002               	goto	l2369
  3423                           
  3424                           ;MotorDriver.c: 193: EstadoActual = STATE2;
  3425  00036E  0E02               	movlw	2
  3426  000370  6E4F               	movwf	_EstadoActual,c
  3427  000372                     l2369:
  3428                           
  3429                           ;MotorDriver.c: 194: }
  3430                           ;MotorDriver.c: 195: Microstep++;
  3431  000372  4A40               	infsnz	_Microstep,f,c
  3432  000374  2A41               	incf	_Microstep+1,f,c
  3433                           
  3434                           ;MotorDriver.c: 196: }
  3435  000376  0012               	return	
  3436  000378                     l2371:
  3437                           
  3438                           ;MotorDriver.c: 197: else{
  3439                           ;MotorDriver.c: 198: if (Microstep==0){
  3440  000378  5040               	movf	_Microstep,w,c
  3441  00037A  1041               	iorwf	_Microstep+1,w,c
  3442  00037C  A4D8               	btfss	status,2,c
  3443  00037E  D006               	goto	l2375
  3444                           
  3445                           ;MotorDriver.c: 199: EstadoActual = STATE4;
  3446  000380  0E04               	movlw	4
  3447  000382  6E4F               	movwf	_EstadoActual,c
  3448                           
  3449                           ;MotorDriver.c: 200: Microstep=63;
  3450  000384  0E00               	movlw	0
  3451  000386  6E41               	movwf	_Microstep+1,c
  3452  000388  0E3F               	movlw	63
  3453  00038A  6E40               	movwf	_Microstep,c
  3454  00038C                     l2375:
  3455                           
  3456                           ;MotorDriver.c: 201: }
  3457                           ;MotorDriver.c: 202: Microstep--;
  3458  00038C  0640               	decf	_Microstep,f,c
  3459  00038E  A0D8               	btfss	status,0,c
  3460  000390  0641               	decf	_Microstep+1,f,c
  3461                           
  3462                           ;MotorDriver.c: 203: }
  3463                           ;MotorDriver.c: 204: }
  3464                           ;MotorDriver.c: 205: break;
  3465  000392  0012               	return	
  3466  000394                     l2377:
  3467                           
  3468                           ;MotorDriver.c: 207: PSTR1CON = 0x02; PSTR2CON = 0x01;
  3469  000394  0E02               	movlw	2
  3470  000396  6EB9               	movwf	4025,c	;volatile
  3471  000398  0E01               	movlw	1
  3472  00039A  6E63               	movwf	3939,c	;volatile
  3473                           
  3474                           ;MotorDriver.c: 208: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC0 = 0; } whi
      +                          le(0);
  3475  00039C  948B               	bcf	3979,2,c	;volatile
  3476  00039E  908B               	bcf	3979,0,c	;volatile
  3477                           
  3478                           ;MotorDriver.c: 209: if ((Microstep<32)&&(Microstep>15)){
  3479  0003A0  BE41               	btfsc	_Microstep+1,7,c
  3480  0003A2  D006               	goto	l2385
  3481  0003A4  5041               	movf	_Microstep+1,w,c
  3482  0003A6  E103               	bnz	u1781
  3483  0003A8  0E20               	movlw	32
  3484  0003AA  5C40               	subwf	_Microstep,w,c
  3485  0003AC  B0D8               	btfsc	status,0,c
  3486  0003AE                     u1781:
  3487  0003AE  0012               	return	
  3488  0003B0                     l2385:
  3489  0003B0  BE41               	btfsc	_Microstep+1,7,c
  3490  0003B2  0012               	return	
  3491  0003B4  5041               	movf	_Microstep+1,w,c
  3492  0003B6  E104               	bnz	u1790
  3493  0003B8  0E10               	movlw	16
  3494  0003BA  5C40               	subwf	_Microstep,w,c
  3495  0003BC  A0D8               	btfss	status,0,c
  3496  0003BE  0012               	return	
  3497  0003C0                     u1790:
  3498                           
  3499                           ;MotorDriver.c: 214: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3500  0003C0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3501  0003C2  2440               	addwf	_Microstep,w,c
  3502  0003C4  6ED9               	movwf	fsr2l,c
  3503  0003C6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3504  0003C8  2041               	addwfc	_Microstep+1,w,c
  3505  0003CA  6EDA               	movwf	fsr2h,c
  3506  0003CC  50DF               	movf	indf2,w,c
  3507  0003CE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3508  0003D0  5033               	movf	??_State16MEF_act,w,c
  3509  0003D2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3510  0003D4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3511  0003D6  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3512                           
  3513                           ;MotorDriver.c: 215: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3514  0003DA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3515  0003DC  2440               	addwf	_Microstep,w,c
  3516  0003DE  6ED9               	movwf	fsr2l,c
  3517  0003E0  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3518  0003E2  2041               	addwfc	_Microstep+1,w,c
  3519  0003E4  6EDA               	movwf	fsr2h,c
  3520  0003E6  50DF               	movf	indf2,w,c
  3521  0003E8  6E33               	movwf	??_State16MEF_act& (0+255),c
  3522  0003EA  5033               	movf	??_State16MEF_act,w,c
  3523  0003EC  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3524  0003EE  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3525  0003F0  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3526                           
  3527                           ;MotorDriver.c: 217: if (direccion == 1){
  3528  0003F4  0434               	decf	State16MEF_act@direccion,w,c
  3529  0003F6  A4D8               	btfss	status,2,c
  3530  0003F8  D00A               	goto	l2397
  3531                           
  3532                           ;MotorDriver.c: 218: if (Microstep==31){
  3533  0003FA  0E1F               	movlw	31
  3534  0003FC  1840               	xorwf	_Microstep,w,c
  3535  0003FE  1041               	iorwf	_Microstep+1,w,c
  3536  000400  A4D8               	btfss	status,2,c
  3537  000402  D002               	goto	l2395
  3538                           
  3539                           ;MotorDriver.c: 219: EstadoActual = STATE3;
  3540  000404  0E03               	movlw	3
  3541  000406  6E4F               	movwf	_EstadoActual,c
  3542  000408                     l2395:
  3543                           
  3544                           ;MotorDriver.c: 220: }
  3545                           ;MotorDriver.c: 221: Microstep++;
  3546  000408  4A40               	infsnz	_Microstep,f,c
  3547  00040A  2A41               	incf	_Microstep+1,f,c
  3548                           
  3549                           ;MotorDriver.c: 222: }
  3550  00040C  0012               	return	
  3551  00040E                     l2397:
  3552                           
  3553                           ;MotorDriver.c: 223: else{
  3554                           ;MotorDriver.c: 224: if (Microstep==16){
  3555  00040E  0E10               	movlw	16
  3556  000410  1840               	xorwf	_Microstep,w,c
  3557  000412  1041               	iorwf	_Microstep+1,w,c
  3558  000414  A4D8               	btfss	status,2,c
  3559  000416  D002               	goto	l2401
  3560                           
  3561                           ;MotorDriver.c: 225: EstadoActual = STATE1;
  3562  000418  0E01               	movlw	1
  3563  00041A  6E4F               	movwf	_EstadoActual,c
  3564  00041C                     l2401:
  3565                           
  3566                           ;MotorDriver.c: 226: }
  3567                           ;MotorDriver.c: 227: Microstep--;
  3568  00041C  0640               	decf	_Microstep,f,c
  3569  00041E  A0D8               	btfss	status,0,c
  3570  000420  0641               	decf	_Microstep+1,f,c
  3571                           
  3572                           ;MotorDriver.c: 228: }
  3573                           ;MotorDriver.c: 229: }
  3574                           ;MotorDriver.c: 230: break;
  3575  000422  0012               	return	
  3576  000424                     l2403:
  3577                           
  3578                           ;MotorDriver.c: 232: PSTR1CON = 0x02; PSTR2CON = 0x02;
  3579  000424  0E02               	movlw	2
  3580  000426  6EB9               	movwf	4025,c	;volatile
  3581  000428  0E02               	movlw	2
  3582  00042A  6E63               	movwf	3939,c	;volatile
  3583                           
  3584                           ;MotorDriver.c: 233: do { LATCbits.LATC2 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3585  00042C  948B               	bcf	3979,2,c	;volatile
  3586  00042E  928B               	bcf	3979,1,c	;volatile
  3587                           
  3588                           ;MotorDriver.c: 234: if ((Microstep<48)&&(Microstep>31)){
  3589  000430  BE41               	btfsc	_Microstep+1,7,c
  3590  000432  D006               	goto	l2411
  3591  000434  5041               	movf	_Microstep+1,w,c
  3592  000436  E103               	bnz	u1831
  3593  000438  0E30               	movlw	48
  3594  00043A  5C40               	subwf	_Microstep,w,c
  3595  00043C  B0D8               	btfsc	status,0,c
  3596  00043E                     u1831:
  3597  00043E  0012               	return	
  3598  000440                     l2411:
  3599  000440  BE41               	btfsc	_Microstep+1,7,c
  3600  000442  0012               	return	
  3601  000444  5041               	movf	_Microstep+1,w,c
  3602  000446  E104               	bnz	u1840
  3603  000448  0E20               	movlw	32
  3604  00044A  5C40               	subwf	_Microstep,w,c
  3605  00044C  A0D8               	btfss	status,0,c
  3606  00044E  0012               	return	
  3607  000450                     u1840:
  3608                           
  3609                           ;MotorDriver.c: 239: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3610  000450  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3611  000452  2440               	addwf	_Microstep,w,c
  3612  000454  6ED9               	movwf	fsr2l,c
  3613  000456  0E00               	movlw	high _LookUP_TABLE_COS_16
  3614  000458  2041               	addwfc	_Microstep+1,w,c
  3615  00045A  6EDA               	movwf	fsr2h,c
  3616  00045C  50DF               	movf	indf2,w,c
  3617  00045E  6E33               	movwf	??_State16MEF_act& (0+255),c
  3618  000460  5033               	movf	??_State16MEF_act,w,c
  3619  000462  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3620  000464  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3621  000466  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3622                           
  3623                           ;MotorDriver.c: 240: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3624  00046A  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3625  00046C  2440               	addwf	_Microstep,w,c
  3626  00046E  6ED9               	movwf	fsr2l,c
  3627  000470  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3628  000472  2041               	addwfc	_Microstep+1,w,c
  3629  000474  6EDA               	movwf	fsr2h,c
  3630  000476  50DF               	movf	indf2,w,c
  3631  000478  6E33               	movwf	??_State16MEF_act& (0+255),c
  3632  00047A  5033               	movf	??_State16MEF_act,w,c
  3633  00047C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3634  00047E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3635  000480  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3636                           
  3637                           ;MotorDriver.c: 242: if (direccion == 1){
  3638  000484  0434               	decf	State16MEF_act@direccion,w,c
  3639  000486  A4D8               	btfss	status,2,c
  3640  000488  D00A               	goto	l2423
  3641                           
  3642                           ;MotorDriver.c: 243: if (Microstep==47){
  3643  00048A  0E2F               	movlw	47
  3644  00048C  1840               	xorwf	_Microstep,w,c
  3645  00048E  1041               	iorwf	_Microstep+1,w,c
  3646  000490  A4D8               	btfss	status,2,c
  3647  000492  D002               	goto	l2421
  3648                           
  3649                           ;MotorDriver.c: 244: EstadoActual = STATE4;
  3650  000494  0E04               	movlw	4
  3651  000496  6E4F               	movwf	_EstadoActual,c
  3652  000498                     l2421:
  3653                           
  3654                           ;MotorDriver.c: 245: }
  3655                           ;MotorDriver.c: 246: Microstep++;
  3656  000498  4A40               	infsnz	_Microstep,f,c
  3657  00049A  2A41               	incf	_Microstep+1,f,c
  3658                           
  3659                           ;MotorDriver.c: 247: }
  3660  00049C  0012               	return	
  3661  00049E                     l2423:
  3662                           
  3663                           ;MotorDriver.c: 248: else{
  3664                           ;MotorDriver.c: 249: if (Microstep==32){
  3665  00049E  0E20               	movlw	32
  3666  0004A0  1840               	xorwf	_Microstep,w,c
  3667  0004A2  1041               	iorwf	_Microstep+1,w,c
  3668  0004A4  A4D8               	btfss	status,2,c
  3669  0004A6  D002               	goto	l2427
  3670                           
  3671                           ;MotorDriver.c: 250: EstadoActual = STATE2;
  3672  0004A8  0E02               	movlw	2
  3673  0004AA  6E4F               	movwf	_EstadoActual,c
  3674  0004AC                     l2427:
  3675                           
  3676                           ;MotorDriver.c: 251: }
  3677                           ;MotorDriver.c: 252: Microstep--;
  3678  0004AC  0640               	decf	_Microstep,f,c
  3679  0004AE  A0D8               	btfss	status,0,c
  3680  0004B0  0641               	decf	_Microstep+1,f,c
  3681                           
  3682                           ;MotorDriver.c: 253: }
  3683                           ;MotorDriver.c: 254: }
  3684                           ;MotorDriver.c: 255: break;
  3685  0004B2  0012               	return	
  3686  0004B4                     l2429:
  3687                           
  3688                           ;MotorDriver.c: 257: PSTR1CON = 0x01; PSTR2CON = 0x02;
  3689  0004B4  0E01               	movlw	1
  3690  0004B6  6EB9               	movwf	4025,c	;volatile
  3691  0004B8  0E02               	movlw	2
  3692  0004BA  6E63               	movwf	3939,c	;volatile
  3693                           
  3694                           ;MotorDriver.c: 258: do { LATDbits.LATD5 = 0; } while(0); do { LATCbits.LATC1 = 0; } whi
      +                          le(0);
  3695  0004BC  9A8C               	bcf	3980,5,c	;volatile
  3696  0004BE  928B               	bcf	3979,1,c	;volatile
  3697                           
  3698                           ;MotorDriver.c: 259: if ((Microstep<64)&&(Microstep>47)){
  3699  0004C0  BE41               	btfsc	_Microstep+1,7,c
  3700  0004C2  D006               	goto	l2437
  3701  0004C4  5041               	movf	_Microstep+1,w,c
  3702  0004C6  E14E               	bnz	l516
  3703  0004C8  0E40               	movlw	64
  3704  0004CA  5C40               	subwf	_Microstep,w,c
  3705  0004CC  B0D8               	btfsc	status,0,c
  3706  0004CE  0012               	return	
  3707  0004D0                     l2437:
  3708  0004D0  BE41               	btfsc	_Microstep+1,7,c
  3709  0004D2  0012               	return	
  3710  0004D4  5041               	movf	_Microstep+1,w,c
  3711  0004D6  E104               	bnz	u1890
  3712  0004D8  0E30               	movlw	48
  3713  0004DA  5C40               	subwf	_Microstep,w,c
  3714  0004DC  A0D8               	btfss	status,0,c
  3715  0004DE  0012               	return	
  3716  0004E0                     u1890:
  3717                           
  3718                           ;MotorDriver.c: 264: EPWM1_LoadDutyValue(LookUP_TABLE_COS_16[Microstep]);
  3719  0004E0  0EA0               	movlw	low _LookUP_TABLE_COS_16
  3720  0004E2  2440               	addwf	_Microstep,w,c
  3721  0004E4  6ED9               	movwf	fsr2l,c
  3722  0004E6  0E00               	movlw	high _LookUP_TABLE_COS_16
  3723  0004E8  2041               	addwfc	_Microstep+1,w,c
  3724  0004EA  6EDA               	movwf	fsr2h,c
  3725  0004EC  50DF               	movf	indf2,w,c
  3726  0004EE  6E33               	movwf	??_State16MEF_act& (0+255),c
  3727  0004F0  5033               	movf	??_State16MEF_act,w,c
  3728  0004F2  6E2F               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3729  0004F4  6A30               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  3730  0004F6  EC90  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  3731                           
  3732                           ;MotorDriver.c: 265: EPWM2_LoadDutyValue(LookUP_TABLE_SEN_16[Microstep]);
  3733  0004FA  0E60               	movlw	low _LookUP_TABLE_SEN_16
  3734  0004FC  2440               	addwf	_Microstep,w,c
  3735  0004FE  6ED9               	movwf	fsr2l,c
  3736  000500  0E00               	movlw	high _LookUP_TABLE_SEN_16
  3737  000502  2041               	addwfc	_Microstep+1,w,c
  3738  000504  6EDA               	movwf	fsr2h,c
  3739  000506  50DF               	movf	indf2,w,c
  3740  000508  6E33               	movwf	??_State16MEF_act& (0+255),c
  3741  00050A  5033               	movf	??_State16MEF_act,w,c
  3742  00050C  6E2F               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3743  00050E  6A30               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  3744  000510  EC78  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  3745                           
  3746                           ;MotorDriver.c: 267: if (direccion == 1){
  3747  000514  0434               	decf	State16MEF_act@direccion,w,c
  3748  000516  A4D8               	btfss	status,2,c
  3749  000518  D00C               	goto	l2451
  3750                           
  3751                           ;MotorDriver.c: 268: if (Microstep==63){
  3752  00051A  0E3F               	movlw	63
  3753  00051C  1840               	xorwf	_Microstep,w,c
  3754  00051E  1041               	iorwf	_Microstep+1,w,c
  3755  000520  A4D8               	btfss	status,2,c
  3756  000522  D004               	goto	l2449
  3757                           
  3758                           ;MotorDriver.c: 269: EstadoActual = STATE1;
  3759  000524  0E01               	movlw	1
  3760  000526  6E4F               	movwf	_EstadoActual,c
  3761                           
  3762                           ;MotorDriver.c: 270: Microstep=-1;
  3763  000528  6840               	setf	_Microstep,c
  3764  00052A  6841               	setf	_Microstep+1,c
  3765  00052C                     l2449:
  3766                           
  3767                           ;MotorDriver.c: 271: }
  3768                           ;MotorDriver.c: 272: Microstep++;
  3769  00052C  4A40               	infsnz	_Microstep,f,c
  3770  00052E  2A41               	incf	_Microstep+1,f,c
  3771                           
  3772                           ;MotorDriver.c: 273: }
  3773  000530  0012               	return	
  3774  000532                     l2451:
  3775                           
  3776                           ;MotorDriver.c: 274: else{
  3777                           ;MotorDriver.c: 275: if (Microstep==48){
  3778  000532  0E30               	movlw	48
  3779  000534  1840               	xorwf	_Microstep,w,c
  3780  000536  1041               	iorwf	_Microstep+1,w,c
  3781  000538  A4D8               	btfss	status,2,c
  3782  00053A  D002               	goto	l2455
  3783                           
  3784                           ;MotorDriver.c: 276: EstadoActual = STATE3;
  3785  00053C  0E03               	movlw	3
  3786  00053E  6E4F               	movwf	_EstadoActual,c
  3787  000540                     l2455:
  3788                           
  3789                           ;MotorDriver.c: 277: }
  3790                           ;MotorDriver.c: 278: Microstep--;
  3791  000540  0640               	decf	_Microstep,f,c
  3792  000542  A0D8               	btfss	status,0,c
  3793  000544  0641               	decf	_Microstep+1,f,c
  3794                           
  3795                           ;MotorDriver.c: 285: }
  3796                           
  3797                           ;MotorDriver.c: 284: break;
  3798                           
  3799                           ;MotorDriver.c: 282: default:
  3800                           
  3801                           ;MotorDriver.c: 279: }
  3802                           ;MotorDriver.c: 280: }
  3803                           ;MotorDriver.c: 281: break;
  3804  000546  0012               	return	
  3805  000548                     l2459:
  3806  000548  504F               	movf	_EstadoActual,w,c
  3807                           
  3808                           ; Switch size 1, requested type "space"
  3809                           ; Number of cases is 4, Range of values is 1 to 4
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte           13     7 (average)
  3813                           ;	Chosen strategy is simple_byte
  3814  00054A  0A01               	xorlw	1	; case 1
  3815  00054C  B4D8               	btfsc	status,2,c
  3816  00054E  D6DF               	goto	l2353
  3817  000550  0A03               	xorlw	3	; case 2
  3818  000552  B4D8               	btfsc	status,2,c
  3819  000554  D71F               	goto	l2377
  3820  000556  0A01               	xorlw	1	; case 3
  3821  000558  B4D8               	btfsc	status,2,c
  3822  00055A  D764               	goto	l2403
  3823  00055C  0A07               	xorlw	7	; case 4
  3824  00055E  A4D8               	btfss	status,2,c
  3825  000560  0012               	return	
  3826  000562  D7A8               	goto	l2429
  3827  000564                     l516:
  3828  000564  0012               	return		;funcret
  3829  000566                     __end_of_State16MEF_act:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           intcon	equ	0xFF2
  3836                           intcon2	equ	0xFF1
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           postdec1	equ	0xFE5
  3840                           fsr1l	equ	0xFE1
  3841                           indf2	equ	0xFDF
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _EPWM2_LoadDutyValue *****************
  3847 ;; Defined at:
  3848 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        4 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    4
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_State8MEF_act
  3873 ;;		_State16MEF_act
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text27
  3878  0008F0                     __ptext27:
  3879                           	opt stack 0
  3880  0008F0                     _EPWM2_LoadDutyValue:
  3881                           	opt stack 23
  3882                           
  3883                           ;epwm2.c: 93: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3884                           
  3885                           ;incstack = 0
  3886  0008F0  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3887  0008F4  C030  F032         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3888  0008F8  90D8               	bcf	status,0,c
  3889  0008FA  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3890  0008FC  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3891  0008FE  90D8               	bcf	status,0,c
  3892  000900  3232               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3893  000902  3231               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3894  000904  5031               	movf	??_EPWM2_LoadDutyValue,w,c
  3895  000906  6E67               	movwf	3943,c	;volatile
  3896                           
  3897                           ;epwm2.c: 96: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3898  000908  C02F  F031         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3899  00090C  0E03               	movlw	3
  3900  00090E  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3901  000910  3A31               	swapf	??_EPWM2_LoadDutyValue,f,c
  3902  000912  0EF0               	movlw	240
  3903  000914  1631               	andwf	??_EPWM2_LoadDutyValue,f,c
  3904  000916  5066               	movf	3942,w,c	;volatile
  3905  000918  0BCF               	andlw	207
  3906  00091A  1031               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3907  00091C  6E66               	movwf	3942,c	;volatile
  3908  00091E  0012               	return		;funcret
  3909  000920                     __end_of_EPWM2_LoadDutyValue:
  3910                           	opt stack 0
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           intcon	equ	0xFF2
  3916                           intcon2	equ	0xFF1
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _EPWM1_LoadDutyValue *****************
  3927 ;; Defined at:
  3928 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  dutyValue       2   14[COMRAM] unsigned int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        4 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    4
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_State8MEF_act
  3953 ;;		_State16MEF_act
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text28
  3958  000920                     __ptext28:
  3959                           	opt stack 0
  3960  000920                     _EPWM1_LoadDutyValue:
  3961                           	opt stack 23
  3962                           
  3963                           ;epwm1.c: 93: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3964                           
  3965                           ;incstack = 0
  3966  000920  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3967  000924  C030  F032         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3968  000928  90D8               	bcf	status,0,c
  3969  00092A  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3970  00092C  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3971  00092E  90D8               	bcf	status,0,c
  3972  000930  3232               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3973  000932  3231               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3974  000934  5031               	movf	??_EPWM1_LoadDutyValue,w,c
  3975  000936  6EBE               	movwf	4030,c	;volatile
  3976                           
  3977                           ;epwm1.c: 96: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3978  000938  C02F  F031         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3979  00093C  0E03               	movlw	3
  3980  00093E  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3981  000940  3A31               	swapf	??_EPWM1_LoadDutyValue,f,c
  3982  000942  0EF0               	movlw	240
  3983  000944  1631               	andwf	??_EPWM1_LoadDutyValue,f,c
  3984  000946  50BD               	movf	4029,w,c	;volatile
  3985  000948  0BCF               	andlw	207
  3986  00094A  1031               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3987  00094C  6EBD               	movwf	4029,c	;volatile
  3988  00094E  0012               	return		;funcret
  3989  000950                     __end_of_EPWM1_LoadDutyValue:
  3990                           	opt stack 0
  3991                           tblptru	equ	0xFF8
  3992                           tblptrh	equ	0xFF7
  3993                           tblptrl	equ	0xFF6
  3994                           tablat	equ	0xFF5
  3995                           intcon	equ	0xFF2
  3996                           intcon2	equ	0xFF1
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           postdec1	equ	0xFE5
  4000                           fsr1l	equ	0xFE1
  4001                           indf2	equ	0xFDF
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _DelayTmr2 *****************
  4007 ;; Defined at:
  4008 ;;		line 367 in file "MotorDriver.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  Timeout         2   14[COMRAM] unsigned int 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    4
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;;		_SwitchDirection
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text29
  4038  000AFA                     __ptext29:
  4039                           	opt stack 0
  4040  000AFA                     _DelayTmr2:
  4041                           	opt stack 0
  4042                           
  4043                           ;incstack = 0
  4044  000AFA  D006               	goto	l2159
  4045  000AFC                     l2155:
  4046                           
  4047                           ;MotorDriver.c: 373: {
  4048                           ;MotorDriver.c: 374: if (DelayTimerTicked)
  4049  000AFC  5049               	movf	_DelayTimerTicked,w,c	;volatile
  4050  000AFE  B4D8               	btfsc	status,2,c
  4051  000B00  D005               	goto	l2161
  4052                           
  4053                           ;MotorDriver.c: 375: {
  4054                           ;MotorDriver.c: 376: Timeout--;
  4055  000B02  062F               	decf	DelayTmr2@Timeout,f,c
  4056  000B04  A0D8               	btfss	status,0,c
  4057  000B06  0630               	decf	DelayTmr2@Timeout+1,f,c
  4058  000B08                     l2159:
  4059                           
  4060                           ;MotorDriver.c: 377: DelayTimerTicked = 0;
  4061  000B08  0E00               	movlw	0
  4062  000B0A  6E49               	movwf	_DelayTimerTicked,c	;volatile
  4063  000B0C                     l2161:
  4064  000B0C  502F               	movf	DelayTmr2@Timeout,w,c
  4065  000B0E  1030               	iorwf	DelayTmr2@Timeout+1,w,c
  4066  000B10  B4D8               	btfsc	status,2,c
  4067  000B12  0012               	return	
  4068  000B14  D7F3               	goto	l2155
  4069  000B16                     __end_of_DelayTmr2:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           intcon	equ	0xFF2
  4076                           intcon2	equ	0xFF1
  4077                           postinc0	equ	0xFEE
  4078                           wreg	equ	0xFE8
  4079                           postdec1	equ	0xFE5
  4080                           fsr1l	equ	0xFE1
  4081                           indf2	equ	0xFDF
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function _INTERRUPT_InterruptManager *****************
  4087 ;; Defined at:
  4088 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;Total ram usage:       14 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    3
  4109 ;; This function calls:
  4110 ;;		_ADC_ISR
  4111 ;;		_TMR2_ISR
  4112 ;;		_TMR6_ISR
  4113 ;; This function is called by:
  4114 ;;		Interrupt level 2
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	intcode
  4119  000008                     __pintcode:
  4120                           	opt stack 0
  4121  000008                     _INTERRUPT_InterruptManager:
  4122                           	opt stack 22
  4123                           
  4124                           ;incstack = 0
  4125  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4126  00000A  CFFA F021          	movff	pclath,??_INTERRUPT_InterruptManager
  4127  00000E  CFFB F022          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4128  000012  CFE9 F023          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4129  000016  CFEA F024          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4130  00001A  CFE1 F025          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4131  00001E  CFE2 F026          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4132  000022  CFD9 F027          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4133  000026  CFDA F028          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4134  00002A  CFF3 F029          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4135  00002E  CFF4 F02A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4136  000032  CFF6 F02B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4137  000036  CFF7 F02C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4138  00003A  CFF8 F02D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4139  00003E  CFF5 F02E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4140                           
  4141                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4142  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4143  000044  AC9D               	btfss	3997,6,c	;volatile
  4144  000046  D005               	goto	i2l270
  4145  000048  AC9E               	btfss	3998,6,c	;volatile
  4146  00004A  D003               	goto	i2l270
  4147                           
  4148                           ;interrupt_manager.c: 61: {
  4149                           ;interrupt_manager.c: 62: ADC_ISR();
  4150  00004C  ECD8  F005         	call	_ADC_ISR	;wreg free
  4151                           
  4152                           ;interrupt_manager.c: 63: }
  4153  000050  D00E               	goto	i2l276
  4154  000052                     i2l270:
  4155                           
  4156                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR6IE == 1 && PIR5bi
      +                          ts.TMR6IF == 1)
  4157  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4158  000054  A47D               	btfss	3965,2,c	;volatile
  4159  000056  D005               	goto	i2l272
  4160  000058  A47E               	btfss	3966,2,c	;volatile
  4161  00005A  D003               	goto	i2l272
  4162                           
  4163                           ;interrupt_manager.c: 65: {
  4164                           ;interrupt_manager.c: 66: TMR6_ISR();
  4165  00005C  EC5C  F005         	call	_TMR6_ISR	;wreg free
  4166                           
  4167                           ;interrupt_manager.c: 67: }
  4168  000060  D006               	goto	i2l276
  4169  000062                     i2l272:
  4170                           
  4171                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4172  000062  BCF2               	btfsc	intcon,6,c	;volatile
  4173  000064  A29D               	btfss	3997,1,c	;volatile
  4174  000066  D003               	goto	i2l276
  4175  000068  B29E               	btfsc	3998,1,c	;volatile
  4176                           
  4177                           ;interrupt_manager.c: 69: {
  4178                           ;interrupt_manager.c: 70: TMR2_ISR();
  4179  00006A  ECCD  F005         	call	_TMR2_ISR	;wreg free
  4180  00006E                     i2l276:
  4181  00006E  C02E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4182  000072  C02D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4183  000076  C02C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4184  00007A  C02B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4185  00007E  C02A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4186  000082  C029  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4187  000086  C028  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4188  00008A  C027  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4189  00008E  C026  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4190  000092  C025  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4191  000096  C024  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4192  00009A  C023  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4193  00009E  C022  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4194  0000A2  C021  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4195  0000A6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4196  0000A8  0011               	retfie		f
  4197  0000AA                     __end_of_INTERRUPT_InterruptManager:
  4198                           	opt stack 0
  4199                           pclatu	equ	0xFFB
  4200                           pclath	equ	0xFFA
  4201                           tblptru	equ	0xFF8
  4202                           tblptrh	equ	0xFF7
  4203                           tblptrl	equ	0xFF6
  4204                           tablat	equ	0xFF5
  4205                           prodh	equ	0xFF4
  4206                           prodl	equ	0xFF3
  4207                           intcon	equ	0xFF2
  4208                           intcon2	equ	0xFF1
  4209                           postinc0	equ	0xFEE
  4210                           fsr0h	equ	0xFEA
  4211                           fsr0l	equ	0xFE9
  4212                           wreg	equ	0xFE8
  4213                           postdec1	equ	0xFE5
  4214                           fsr1h	equ	0xFE2
  4215                           fsr1l	equ	0xFE1
  4216                           indf2	equ	0xFDF
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _TMR6_ISR *****************
  4222 ;; Defined at:
  4223 ;;		line 121 in file "mcc_generated_files/tmr6.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    1
  4244 ;; This function calls:
  4245 ;;		Absolute function
  4246 ;;		_TMR6_DefaultInterruptHandler
  4247 ;; This function is called by:
  4248 ;;		_INTERRUPT_InterruptManager
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text31
  4253  000AB8                     __ptext31:
  4254                           	opt stack 0
  4255  000AB8                     _TMR6_ISR:
  4256                           	opt stack 23
  4257                           
  4258                           ;tmr6.c: 125: PIR5bits.TMR6IF = 0;
  4259                           
  4260                           ;incstack = 0
  4261  000AB8  947E               	bcf	3966,2,c	;volatile
  4262                           
  4263                           ;tmr6.c: 127: if(TMR6_InterruptHandler)
  4264  000ABA  504D               	movf	_TMR6_InterruptHandler,w,c
  4265  000ABC  104E               	iorwf	_TMR6_InterruptHandler+1,w,c
  4266  000ABE  B4D8               	btfsc	status,2,c
  4267  000AC0  0012               	return	
  4268                           
  4269                           ;tmr6.c: 128: {
  4270                           ;tmr6.c: 129: TMR6_InterruptHandler();
  4271  000AC2  D801               	call	i2u60_48
  4272  000AC4  0012               	return	
  4273  000AC6                     i2u60_48:
  4274  000AC6  0005               	push	
  4275  000AC8  6EFA               	movwf	pclath,c
  4276  000ACA  504D               	movf	_TMR6_InterruptHandler,w,c
  4277  000ACC  6EFD               	movwf	tosl,c
  4278  000ACE  504E               	movf	_TMR6_InterruptHandler+1,w,c
  4279  000AD0  6EFE               	movwf	tosh,c
  4280  000AD2  50F8               	movf	tblptru,w,c
  4281  000AD4  6EFF               	movwf	tosu,c
  4282  000AD6  50FA               	movf	pclath,w,c
  4283  000AD8  0012               	return		;indir
  4284  000ADA                     __end_of_TMR6_ISR:
  4285                           	opt stack 0
  4286                           tosu	equ	0xFFF
  4287                           tosh	equ	0xFFE
  4288                           tosl	equ	0xFFD
  4289                           pclatu	equ	0xFFB
  4290                           pclath	equ	0xFFA
  4291                           tblptru	equ	0xFF8
  4292                           tblptrh	equ	0xFF7
  4293                           tblptrl	equ	0xFF6
  4294                           tablat	equ	0xFF5
  4295                           prodh	equ	0xFF4
  4296                           prodl	equ	0xFF3
  4297                           intcon	equ	0xFF2
  4298                           intcon2	equ	0xFF1
  4299                           postinc0	equ	0xFEE
  4300                           fsr0h	equ	0xFEA
  4301                           fsr0l	equ	0xFE9
  4302                           wreg	equ	0xFE8
  4303                           postdec1	equ	0xFE5
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           indf2	equ	0xFDF
  4307                           fsr2h	equ	0xFDA
  4308                           fsr2l	equ	0xFD9
  4309                           status	equ	0xFD8
  4310                           
  4311 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  4312 ;; Defined at:
  4313 ;;		line 138 in file "mcc_generated_files/tmr6.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		None
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_TMR6_Initialize
  4337 ;;		_TMR6_ISR
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text32
  4342  000BB4                     __ptext32:
  4343                           	opt stack 0
  4344  000BB4                     _TMR6_DefaultInterruptHandler:
  4345                           	opt stack 23
  4346                           
  4347                           ;incstack = 0
  4348  000BB4  0012               	return		;funcret
  4349  000BB6                     __end_of_TMR6_DefaultInterruptHandler:
  4350                           	opt stack 0
  4351                           tosu	equ	0xFFF
  4352                           tosh	equ	0xFFE
  4353                           tosl	equ	0xFFD
  4354                           pclatu	equ	0xFFB
  4355                           pclath	equ	0xFFA
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           intcon	equ	0xFF2
  4363                           intcon2	equ	0xFF1
  4364                           postinc0	equ	0xFEE
  4365                           fsr0h	equ	0xFEA
  4366                           fsr0l	equ	0xFE9
  4367                           wreg	equ	0xFE8
  4368                           postdec1	equ	0xFE5
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           indf2	equ	0xFDF
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _TMR2_ISR *****************
  4377 ;; Defined at:
  4378 ;;		line 126 in file "mcc_generated_files/tmr2.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    2
  4399 ;; This function calls:
  4400 ;;		_TMR2_CallBack
  4401 ;; This function is called by:
  4402 ;;		_INTERRUPT_InterruptManager
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text33
  4407  000B9A                     __ptext33:
  4408                           	opt stack 0
  4409  000B9A                     _TMR2_ISR:
  4410                           	opt stack 22
  4411                           
  4412                           ;tmr2.c: 130: PIR1bits.TMR2IF = 0;
  4413                           
  4414                           ;incstack = 0
  4415  000B9A  929E               	bcf	3998,1,c	;volatile
  4416                           
  4417                           ;tmr2.c: 134: TMR2_CallBack();
  4418  000B9C  EC13  F005         	call	_TMR2_CallBack	;wreg free
  4419  000BA0  0012               	return		;funcret
  4420  000BA2                     __end_of_TMR2_ISR:
  4421                           	opt stack 0
  4422                           tosu	equ	0xFFF
  4423                           tosh	equ	0xFFE
  4424                           tosl	equ	0xFFD
  4425                           pclatu	equ	0xFFB
  4426                           pclath	equ	0xFFA
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           prodh	equ	0xFF4
  4432                           prodl	equ	0xFF3
  4433                           intcon	equ	0xFF2
  4434                           intcon2	equ	0xFF1
  4435                           postinc0	equ	0xFEE
  4436                           fsr0h	equ	0xFEA
  4437                           fsr0l	equ	0xFE9
  4438                           wreg	equ	0xFE8
  4439                           postdec1	equ	0xFE5
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           indf2	equ	0xFDF
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _TMR2_CallBack *****************
  4448 ;; Defined at:
  4449 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    1
  4470 ;; This function calls:
  4471 ;;		Absolute function
  4472 ;;		_TMR2_DefaultInterruptHandler
  4473 ;; This function is called by:
  4474 ;;		_TMR2_ISR
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text34
  4479  000A26                     __ptext34:
  4480                           	opt stack 0
  4481  000A26                     _TMR2_CallBack:
  4482                           	opt stack 22
  4483                           
  4484                           ;tmr2.c: 140: Timer2Ticked = 1;
  4485                           
  4486                           ;incstack = 0
  4487  000A26  0E01               	movlw	1
  4488  000A28  6E4A               	movwf	_Timer2Ticked,c	;volatile
  4489                           
  4490                           ;tmr2.c: 141: DelayTimerTicked = 1;
  4491  000A2A  0E01               	movlw	1
  4492  000A2C  6E49               	movwf	_DelayTimerTicked,c	;volatile
  4493                           
  4494                           ;tmr2.c: 144: if(TMR2_InterruptHandler)
  4495  000A2E  504B               	movf	_TMR2_InterruptHandler,w,c
  4496  000A30  104C               	iorwf	_TMR2_InterruptHandler+1,w,c
  4497  000A32  B4D8               	btfsc	status,2,c
  4498  000A34  0012               	return	
  4499                           
  4500                           ;tmr2.c: 145: {
  4501                           ;tmr2.c: 146: TMR2_InterruptHandler();
  4502  000A36  D801               	call	i2u44_48
  4503  000A38  0012               	return	
  4504  000A3A                     i2u44_48:
  4505  000A3A  0005               	push	
  4506  000A3C  6EFA               	movwf	pclath,c
  4507  000A3E  504B               	movf	_TMR2_InterruptHandler,w,c
  4508  000A40  6EFD               	movwf	tosl,c
  4509  000A42  504C               	movf	_TMR2_InterruptHandler+1,w,c
  4510  000A44  6EFE               	movwf	tosh,c
  4511  000A46  50F8               	movf	tblptru,w,c
  4512  000A48  6EFF               	movwf	tosu,c
  4513  000A4A  50FA               	movf	pclath,w,c
  4514  000A4C  0012               	return		;indir
  4515  000A4E                     __end_of_TMR2_CallBack:
  4516                           	opt stack 0
  4517                           tosu	equ	0xFFF
  4518                           tosh	equ	0xFFE
  4519                           tosl	equ	0xFFD
  4520                           pclatu	equ	0xFFB
  4521                           pclath	equ	0xFFA
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           intcon2	equ	0xFF1
  4530                           postinc0	equ	0xFEE
  4531                           fsr0h	equ	0xFEA
  4532                           fsr0l	equ	0xFE9
  4533                           wreg	equ	0xFE8
  4534                           postdec1	equ	0xFE5
  4535                           fsr1h	equ	0xFE2
  4536                           fsr1l	equ	0xFE1
  4537                           indf2	equ	0xFDF
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4543 ;; Defined at:
  4544 ;;		line 154 in file "mcc_generated_files/tmr2.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		None
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_TMR2_Initialize
  4568 ;;		_TMR2_CallBack
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text35
  4573  000BB6                     __ptext35:
  4574                           	opt stack 0
  4575  000BB6                     _TMR2_DefaultInterruptHandler:
  4576                           	opt stack 22
  4577                           
  4578                           ;incstack = 0
  4579  000BB6  0012               	return		;funcret
  4580  000BB8                     __end_of_TMR2_DefaultInterruptHandler:
  4581                           	opt stack 0
  4582                           tosu	equ	0xFFF
  4583                           tosh	equ	0xFFE
  4584                           tosl	equ	0xFFD
  4585                           pclatu	equ	0xFFB
  4586                           pclath	equ	0xFFA
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           prodh	equ	0xFF4
  4592                           prodl	equ	0xFF3
  4593                           intcon	equ	0xFF2
  4594                           intcon2	equ	0xFF1
  4595                           postinc0	equ	0xFEE
  4596                           fsr0h	equ	0xFEA
  4597                           fsr0l	equ	0xFE9
  4598                           wreg	equ	0xFE8
  4599                           postdec1	equ	0xFE5
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           indf2	equ	0xFDF
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _ADC_ISR *****************
  4608 ;; Defined at:
  4609 ;;		line 144 in file "mcc_generated_files/adc.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		None
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_INTERRUPT_InterruptManager
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text36
  4637  000BB0                     __ptext36:
  4638                           	opt stack 0
  4639  000BB0                     _ADC_ISR:
  4640                           	opt stack 24
  4641                           
  4642                           ;adc.c: 149: PIR1bits.ADIF = 0;
  4643                           
  4644                           ;incstack = 0
  4645  000BB0  9C9E               	bcf	3998,6,c	;volatile
  4646  000BB2  0012               	return		;funcret
  4647  000BB4                     __end_of_ADC_ISR:
  4648                           	opt stack 0
  4649  0000                     tosu	equ	0xFFF
  4650                           tosh	equ	0xFFE
  4651                           tosl	equ	0xFFD
  4652                           pclatu	equ	0xFFB
  4653                           pclath	equ	0xFFA
  4654                           tblptru	equ	0xFF8
  4655                           tblptrh	equ	0xFF7
  4656                           tblptrl	equ	0xFF6
  4657                           tablat	equ	0xFF5
  4658                           prodh	equ	0xFF4
  4659                           prodl	equ	0xFF3
  4660                           intcon	equ	0xFF2
  4661                           intcon2	equ	0xFF1
  4662                           postinc0	equ	0xFEE
  4663                           fsr0h	equ	0xFEA
  4664                           fsr0l	equ	0xFE9
  4665                           wreg	equ	0xFE8
  4666                           postdec1	equ	0xFE5
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           indf2	equ	0xFDF
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           tosu	equ	0xFFF
  4674                           tosh	equ	0xFFE
  4675                           tosl	equ	0xFFD
  4676                           pclatu	equ	0xFFB
  4677                           pclath	equ	0xFFA
  4678                           tblptru	equ	0xFF8
  4679                           tblptrh	equ	0xFF7
  4680                           tblptrl	equ	0xFF6
  4681                           tablat	equ	0xFF5
  4682                           prodh	equ	0xFF4
  4683                           prodl	equ	0xFF3
  4684                           intcon	equ	0xFF2
  4685                           intcon2	equ	0xFF1
  4686                           postinc0	equ	0xFEE
  4687                           fsr0h	equ	0xFEA
  4688                           fsr0l	equ	0xFE9
  4689                           wreg	equ	0xFE8
  4690                           postdec1	equ	0xFE5
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698                           	psect	text37
  4699  000000                     __ptext37:
  4700                           	opt stack 0
  4701                           tosu	equ	0xFFF
  4702                           tosh	equ	0xFFE
  4703                           tosl	equ	0xFFD
  4704                           pclatu	equ	0xFFB
  4705                           pclath	equ	0xFFA
  4706                           tblptru	equ	0xFF8
  4707                           tblptrh	equ	0xFF7
  4708                           tblptrl	equ	0xFF6
  4709                           tablat	equ	0xFF5
  4710                           prodh	equ	0xFF4
  4711                           prodl	equ	0xFF3
  4712                           intcon	equ	0xFF2
  4713                           intcon2	equ	0xFF1
  4714                           postinc0	equ	0xFEE
  4715                           fsr0h	equ	0xFEA
  4716                           fsr0l	equ	0xFE9
  4717                           wreg	equ	0xFE8
  4718                           postdec1	equ	0xFE5
  4719                           fsr1h	equ	0xFE2
  4720                           fsr1l	equ	0xFE1
  4721                           indf2	equ	0xFDF
  4722                           fsr2h	equ	0xFDA
  4723                           fsr2l	equ	0xFD9
  4724                           status	equ	0xFD8
  4725                           
  4726                           	psect	rparam
  4727  0000                     tosu	equ	0xFFF
  4728                           tosh	equ	0xFFE
  4729                           tosl	equ	0xFFD
  4730                           pclatu	equ	0xFFB
  4731                           pclath	equ	0xFFA
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           intcon2	equ	0xFF1
  4740                           postinc0	equ	0xFEE
  4741                           fsr0h	equ	0xFEA
  4742                           fsr0l	equ	0xFE9
  4743                           wreg	equ	0xFE8
  4744                           postdec1	equ	0xFE5
  4745                           fsr1h	equ	0xFE2
  4746                           fsr1l	equ	0xFE1
  4747                           indf2	equ	0xFDF
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752                           	psect	temp
  4753  000050                     btemp:
  4754                           	opt stack 0
  4755  000050                     	ds	1
  4756  0000                     int$flags	set	btemp
  4757                           tosu	equ	0xFFF
  4758                           tosh	equ	0xFFE
  4759                           tosl	equ	0xFFD
  4760                           pclatu	equ	0xFFB
  4761                           pclath	equ	0xFFA
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           intcon2	equ	0xFF1
  4770                           postinc0	equ	0xFEE
  4771                           fsr0h	equ	0xFEA
  4772                           fsr0l	equ	0xFE9
  4773                           wreg	equ	0xFE8
  4774                           postdec1	equ	0xFE5
  4775                           fsr1h	equ	0xFE2
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        192
    BSS         20
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      0     160
    BANK1           256      9       9
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _goReference->_StepMove
    _goInitMovement->_StepMove
    _goDark->_StepMove
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _Measure->_StepMove
    _RectaFrenado->_StepMove
    _RectaAceleracion->_StepMove
    _StepMove->_State16MEF_act
    _StepMove->_State8MEF_act
    _State8MEF_act->_EPWM1_LoadDutyValue
    _State8MEF_act->_EPWM2_LoadDutyValue
    _State16MEF_act->_EPWM1_LoadDutyValue
    _State16MEF_act->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _goReference->_StepMove
    _goInitMovement->_StepMove
    _goDark->_StepMove
    _Measure->_RectaAceleracion
    _Measure->_RectaFrenado
    _RectaFrenado->_StepMove
    _RectaAceleracion->_StepMove

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34939
                          _DelayTmr2
                            _Measure
                         _Motor_Stop
                  _SYSTEM_Initialize
                       _StateMEF_ini
                             _goDark
                     _goInitMovement
                        _goReference
 ---------------------------------------------------------------------------------
 (1) _goReference                                          0     0      0    5579
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _goInitMovement                                       0     0      0    5579
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _goDark                                               0     0      0    5579
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      86
           _TMR6_SetInterruptHandler
                    _TMR6_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Measure                                              0     0      0   17751
                   _RectaAceleracion
                       _RectaFrenado
                       _StateMEF_ini
                           _StepMove
 ---------------------------------------------------------------------------------
 (2) _StateMEF_ini                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RectaFrenado                                         4     2      2    6117
                                              5 BANK1      4     2      2
                           _StepMove
 ---------------------------------------------------------------------------------
 (2) _RectaAceleracion                                     4     2      2    6055
                                              5 BANK1      4     2      2
                           _StepMove
 ---------------------------------------------------------------------------------
 (2) _StepMove                                             7     2      5    5579
                                             20 COMRAM     2     2      0
                                              0 BANK1      5     0      5
                     _State16MEF_act
                      _State8MEF_act
 ---------------------------------------------------------------------------------
 (3) _State8MEF_act                                        2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _State16MEF_act                                       2     2      0    1480
                                             18 COMRAM     2     2      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _EPWM2_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EPWM1_LoadDutyValue                                  4     2      2     678
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DelayTmr2                                            2     0      2     279
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR6_ISR                                             0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTmr2
   _Measure
     _RectaAceleracion
       _StepMove
         _State16MEF_act
           _EPWM1_LoadDutyValue
           _EPWM2_LoadDutyValue
         _State8MEF_act
           _EPWM1_LoadDutyValue
           _EPWM2_LoadDutyValue
     _RectaFrenado
       _StepMove
         _State16MEF_act
           _EPWM1_LoadDutyValue
           _EPWM2_LoadDutyValue
         _State8MEF_act
           _EPWM1_LoadDutyValue
           _EPWM2_LoadDutyValue
     _StateMEF_ini
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _Motor_Stop
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
       _TMR6_StartTimer
   _StateMEF_ini
   _goDark
     _StateMEF_ini
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _goInitMovement
     _StateMEF_ini
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
   _goReference
     _StateMEF_ini
     _StepMove
       _State16MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue
       _State8MEF_act
         _EPWM1_LoadDutyValue
         _EPWM2_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9       9       7        3.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      12        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 29 10:14:17 2017

            __size_of_EPWM2_LoadDutyValue 0030          __end_of_TMR2_SetInterruptHandler 0B9A  
                       ??_TMR6_StartTimer 002F                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l516 0564                                       l524 0788  
                                     l470 0308                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                                     _PR6 000F4B                           __end_of_ADC_ISR 0BB4  
                         _TMR2_Initialize 0A96                                       tosl 000FFD  
                                     wreg 000FE8                  __end_of_EPWM2_Initialize 0A72  
                         _CCP5_Initialize 0B44                                      l2301 01E4  
                                    l2311 023C                                      l2161 0B0C  
                                    l2401 041C                                      l2313 0242  
                                    l2155 0AFC                                      l2411 0440  
                                    l2403 0424                                      l2251 00CE  
                                    l2243 00B2                                      l2421 0498  
                                    l2341 02D6                                      l2317 0250  
                                    l2261 011C                                      l2501 0662  
                                    l2159 0B08                                      l2423 049E  
                                    l2327 0274                                      l2319 0258  
                                    l2511 06A8                                      l2361 032A  
                                    l2353 030E                                      l2345 02E4  
                                    l2265 0130                                      l2505 0688  
                                    l2521 06DA                                      l2451 0532  
                                    l2427 04AC                                      l2371 0378  
                                    l2339 02D0                                      l2291 01C0  
                                    l2275 0154                                      l2267 0138  
                                    l2259 0116                                      l2515 06B2  
                                    l2437 04D0                                      l2429 04B4  
                                    l2293 01C8                                      l2285 01AC  
                                    l2349 02EC                                      l2525 06E8  
                                    l2455 0540                                      l2375 038C  
                                    l2287 01B2                                      l2543 0950  
                                    l2449 052C                                      l2385 03B0  
                                    l2377 0394                                      l2369 0372  
                                    l2473 075E                                      l2481 0776  
                                    l2529 06F2                                      l2537 09A8  
                                    l2395 0408                                      l2459 0548  
                                    l2475 0766                                      l2483 077C  
                                    l2491 061C                                      l2555 0866  
                                    l2397 040E                                      l2549 097C  
                                    l2479 0772                                      l2495 0642  
                                    l2583 07B6                                      l2497 0650  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u1600 0164  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u1700 0284                                      u1551 00CC  
                                    u1641 01E2                                      u1650 01F4  
                                    u1741 0328                                      u1831 043E  
                                    u1591 0152                                      u1840 0450  
                                    u1781 03AE                                      u1790 03C0  
                                    u1890 04E0                                      _TMR2 000FBC  
                                    _TMR6 000F4C                                      _WPUB 000F61  
                        _RectaAceleracion 0606                                      _main 078C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0050  
                           __CFG_BORV$190 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00AA  
                           __CFG_IESO$OFF 000000                     ??_EPWM1_LoadDutyValue 0031  
                            ___param_bank 000000                           __end_of_Measure 08A4  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0B78  
                                   ?_main 0021                                     _T2CON 000FBA  
                                   _T6CON 000F4A                            __CFG_DEBUG$OFF 000000  
                                   i2l270 0052                                     i2l272 0062  
                                   i2l276 006E                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
       __size_of_TMR6_SetInterruptHandler 000A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
               ?_TMR6_SetInterruptHandler 002F                          __end_of_TMR2_ISR 0BA2  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                          __end_of_TMR6_ISR 0ADA  
                          __CFG_EBTRB$OFF 000000                                     _parar 0047  
                        _LookUP_TABLE_COS 0001                   __size_of_goInitMovement 002C  
                        _LookUP_TABLE_SEN 00E0                        __CFG_MCLRE$EXTMCLR 000000  
                      StepMove@StepNumber 0100                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 0BA8  
                          __CFG_PBADEN$ON 000000            ??_TMR6_DefaultInterruptHandler 0021  
                         __initialization 07FA                __end_of_EUSART1_Initialize 0B44  
                            __end_of_main 07FA                   __end_of_TMR2_Initialize 0AB8  
                               ??_ADC_ISR 0021                        __size_of_DelayTmr2 001C  
             ?_INTERRUPT_InterruptManager 0021                  _TMR2_SetInterruptHandler 0B90  
                                  ??_main 0037                   __end_of_CCP5_Initialize 0B58  
                    __size_of_goReference 002C                             __activetblptr 000002  
                        DelayTmr2@Timeout 002F                           _TMR6_Initialize 09FE  
                        __end_of_StepMove 078C                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                           ?_RectaFrenado 0105                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR1H 000FBF  
                                  _CCPR2H 000F68                                    _CCPR1L 000FBE  
                                  _CCPR2L 000F67                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                                 ??_Measure 0037  
                          __CFG_XINST$OFF 000000                              _CCPTMRS0bits 000F49  
                              _Motor_Stop 0B58                                    _goDark 09A8  
                          __CFG_STVREN$ON 000000                   __size_of_State16MEF_act 025C  
                                  clear_0 0840                              __pdataCOMRAM 0001  
                StepMove@microstep_number 0103                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                          ??_RectaFrenado 0037                       _EPWM2_LoadDutyValue 08F0  
                 __end_of_TMR2_StartTimer 0BAC  TMR2_SetInterruptHandler@InterruptHandler 002F  
TMR6_SetInterruptHandler@InterruptHandler 002F             __size_of_INTERRUPT_Initialize 0004  
                       __end_of_DelayTmr2 0B16                         _SYSTEM_Initialize 09D4  
                              __accesstop 0060                   __end_of__initialization 0846  
                   __end_of_TMR2_CallBack 0A4E                        ?_SYSTEM_Initialize 0021  
                         _TMR6_StartTimer 0BA2                             ___rparam_used 000001  
                       ?_EPWM1_Initialize 0021                            __pcstackCOMRAM 0021  
                    ?_EPWM2_LoadDutyValue 002F                              __pidataBANK0 0566  
                     ??_SYSTEM_Initialize 0031                     __end_of_State8MEF_act 030A  
                               ?_TMR2_ISR 0021                                 ?_TMR6_ISR 0021  
                      ??_EPWM1_Initialize 002F                          ?_TMR2_Initialize 0021  
                 __end_of_TMR6_Initialize 0A26                  __end_of_RectaAceleracion 0696  
                        ?_CCP5_Initialize 0021              RectaFrenado@microstep_number 0105  
                       ?_EPWM2_Initialize 0021                            _goInitMovement 097C  
               __end_of_SYSTEM_Initialize 09FE                        ??_EPWM2_Initialize 002F  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 004B  
                      __CFG_CCP2MX$PORTC1 000000                     ??_EPWM2_LoadDutyValue 0031  
                             ?_Motor_Stop 0021                                   ?_goDark 0021  
        __end_of_TMR6_SetInterruptHandler 0B90                                ??_TMR2_ISR 0021  
                      __CFG_CCP3MX$PORTB5 000000                                 ?_StepMove 0100  
                              ??_TMR6_ISR 0021                                   _CCP1CON 000FBD  
                                 _CCP2CON 000F66                                   _CCP5CON 000F54  
                                 _ECCP1AS 000FB6                                   _ECCP2AS 000F64  
                                 _ADC_ISR 0BB0                   __size_of_ADC_Initialize 0018  
                  __end_of_goInitMovement 09A8                                   _OSCCON2 000FD2  
                                 i2u44_48 0A3A                                   i2u60_48 0AC6  
                                 _OSCTUNE 000F9B                                   _PWM1CON 000FB7  
                                 _PWM2CON 000F65                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0021                   __end_of_TMR6_StartTimer 0BA8  
             __end_of_EPWM1_LoadDutyValue 0950                                   _Measure 0854  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0031  
                    __end_of_RectaFrenado 071A                                ??_StepMove 0035  
                         __size_of_goDark 002C                            _State16MEF_act 030A  
                                 __pcinit 07FA                          ?_TMR6_Initialize 0021  
                                 __ramtop 1000                                   __ptext0 078C  
                                 __ptext1 0950                                   __ptext2 097C  
                                 __ptext3 09A8                                   __ptext4 09D4  
                                 __ptext5 09FE                                   __ptext6 0BA2  
                                 __ptext7 0B86                                   __ptext8 0A96  
                                 __ptext9 0BA8                     _OSCILLATOR_Initialize 0B6A  
                               _T2CONbits 000FBA                             ?_StateMEF_ini 0021  
                      _EUSART1_Initialize 0B2E                           ?_goInitMovement 0021  
                ??_PIN_MANAGER_Initialize 002F                     RectaFrenado@direccion 0106  
                               _T6CONbits 000F4A                __size_of_SYSTEM_Initialize 002A  
                     __size_of_Motor_Stop 0012                      end_of_initialization 0846  
                     ?_EUSART1_Initialize 0021                             __Lmediumconst 0000  
                  __end_of_State16MEF_act 0566                                   postdec1 000FE5  
                                 postinc0 000FEE                             ??_goReference 0037  
                    ??_EUSART1_Initialize 002F                  _TMR6_SetInterruptHandler 0B86  
                          ??_StateMEF_ini 002F                     RectaFrenado@velocidad 0107  
                        ?_TMR6_StartTimer 0021                              _EstadoActual 004F  
                       RectaAceleracion@i 0108                                 _DelayTmr2 0AFA  
                         ?_State16MEF_act 0021              __end_of_INTERRUPT_Initialize 0BB0  
    __end_of_TMR2_DefaultInterruptHandler 0BB8     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 0BB6                 RectaAceleracion@direccion 0106  
                       StepMove@Velocidad 0102                            __end_of_goDark 09D4  
                           __pidataCOMRAM 0ADA                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 0B16                         __size_of_TMR6_ISR 0022  
                  ?_OSCILLATOR_Initialize 0021                         ?_RectaAceleracion 0105  
                     __end_of_goReference 097C                       start_initialization 07FA  
                      ??_RectaAceleracion 0037                 __size_of_EPWM1_Initialize 0024  
         __size_of_PIN_MANAGER_Initialize 004C                                 _Microstep 0040  
            EPWM1_LoadDutyValue@dutyValue 002F                     __size_of_RectaFrenado 0084  
                              ?_DelayTmr2 002F                 __size_of_EPWM2_Initialize 0024  
                            ??_Motor_Stop 002F                          _DelayTimerTicked 0049  
                                ??_goDark 0037                    __end_of_ADC_Initialize 0B2E  
                             __pdataBANK0 0060                 RectaAceleracion@velocidad 0107  
                                ?_ADC_ISR 0021                                 _StepCount 003E  
                       StepMove@direccion 0104             ?_TMR2_DefaultInterruptHandler 0021  
                       __size_of_StepMove 0072                    __size_of_TMR2_CallBack 0028  
                             __pbssCOMRAM 0037                             __pcstackBANK1 0100  
                __size_of_TMR2_Initialize 0022                              _RectaFrenado 0696  
                __size_of_CCP5_Initialize 0014                        __end_of_Motor_Stop 0B6A  
                  __size_of_State8MEF_act 025C               __end_of_EPWM2_LoadDutyValue 0920  
                   _TMR6_InterruptHandler 004D                                  ?_Measure 0021  
                    __end_of_StateMEF_ini 0B86                    _PIN_MANAGER_Initialize 08A4  
                               __pintcode 0008                           ?_ADC_Initialize 0021  
                             _goReference 0950                   State16MEF_act@direccion 0034  
                        ??_goInitMovement 0037              ??_INTERRUPT_InterruptManager 0021  
                        __CFG_PRICLKEN$ON 000000                                  _BAUDCON1 000FB8  
                                _ANALOG_0 0044                                  _ANALOG_1 0042  
                    _INTERRUPT_Initialize 0BAC                                  _LATBbits 000F8A  
                                _LATCbits 000F8B                                  _LATDbits 000F8C  
                           _TMR2_CallBack 0A26                                  _PIE1bits 000F9D  
                                _PIE5bits 000F7D                               ??_DelayTmr2 0031  
                __size_of_TMR2_StartTimer 0004       __size_of_INTERRUPT_InterruptManager 00A2  
                                _PIR1bits 000F9E                                  _PIR5bits 000F7E  
            __size_of_EPWM1_LoadDutyValue 0030                ??_TMR6_SetInterruptHandler 0031  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 0B9A                                  _PSTR1CON 000FB9  
                                _PSTR2CON 000F63                                  _TMR6_ISR 0AB8  
                           _State8MEF_act 00AE                          _Timer2Tick_count 003C  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
          ??_TMR2_DefaultInterruptHandler 0021                          _EPWM1_Initialize 0A72  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 002F  
                __size_of_TMR6_Initialize 0028                               _INTCON2bits 000FF1  
                               copy_data0 080E                                 copy_data1 082E  
                   ?_INTERRUPT_Initialize 0021                         ??_TMR2_Initialize 0031  
                          ?_TMR2_CallBack 0021                          ??_State16MEF_act 0033  
                       ??_CCP5_Initialize 002F                                  _MoveDone 0046  
                                __Hrparam 0000                          __size_of_Measure 0050  
                            _Timer2Ticked 004A                          _EPWM2_Initialize 0A4E  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTC0 000000                            ?_State8MEF_act 0021  
                                _StepMove 071A                   ??_OSCILLATOR_Initialize 002F  
             __size_of_EUSART1_Initialize 0016                             RectaFrenado@i 0108  
                                __ptext10 0B90                                  __ptext11 08A4  
                                __ptext20 0854                                  __ptext12 0B6A  
                                __ptext21 0B78                                  __ptext13 0BAC  
                                __ptext22 0696                                  __ptext14 0B2E  
                                __ptext31 0AB8                                  __ptext23 0606  
                                __ptext15 0A4E                                  __ptext32 0BB4  
                                __ptext24 071A                                  __ptext16 0A72  
                                __ptext33 0B9A                                  __ptext25 00AE  
                                __ptext17 0B44                                  __ptext34 0A26  
                                __ptext26 030A                                  __ptext18 0B16  
                                __ptext35 0BB6                                  __ptext27 08F0  
                                __ptext19 0B58                                  __ptext36 0BB0  
                                __ptext28 0920                                  __ptext37 0000  
                                __ptext29 0AFA                     __size_of_StateMEF_ini 000E  
               __size_of_RectaAceleracion 0090                             __size_of_main 006E  
        RectaAceleracion@microstep_number 0105                       _LookUP_TABLE_COS_16 00A0  
                     _LookUP_TABLE_SEN_16 0060                  __size_of_TMR6_StartTimer 0006  
                                int$flags 0050                         ??_TMR2_StartTimer 002F  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              _StateMEF_ini 0B78  
                  ??_INTERRUPT_Initialize 002F      __end_of_TMR6_DefaultInterruptHandler 0BB6  
   __size_of_TMR6_DefaultInterruptHandler 0002              _TMR6_DefaultInterruptHandler 0BB4  
                                intlevel2 0000                           ??_TMR2_CallBack 0021  
            EPWM2_LoadDutyValue@dutyValue 002F                   ?_PIN_MANAGER_Initialize 0021  
                       ??_TMR6_Initialize 0031                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 002F                             _StepsComplete 0048  
                         ??_State8MEF_act 0033                              ?_goReference 0021  
                  State8MEF_act@direccion 0034                         __CFG_T3CMX$PORTC0 000000  
                     _EPWM1_LoadDutyValue 0920            __end_of_PIN_MANAGER_Initialize 08F0  
           ?_TMR6_DefaultInterruptHandler 0021                         __CFG_FOSC$INTIO67 000000  
                            _StepperMotor 0037                     _TMR2_InterruptHandler 004B  
                __end_of_EPWM1_Initialize 0A96                      ?_EPWM1_LoadDutyValue 002F  
